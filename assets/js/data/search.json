[ { "title": "Rancilio Silvia改GaggiMate記錄", "url": "/posts/Silvia-GaggiMate-mod-0/", "categories": "caffe", "tags": "", "date": "2025-07-04 14:50:35 +0000", "snippet": "前言選擇GaggiMate而非Gaggiuino的理由: GaggiMate的操作介面比較簡潔我通常在早上喝咖啡，在得到咖啡因之前，要看Gaggiuino那複雜的面板，感覺會很頭痛。需要的時候，GaggiMate也可以透過手機提供這些複雜的資訊，所以我偏好GaggiMate。 GaggiMate的官方支援Silvia少了很多自己摸索的功夫。 GaggiM...", "content": "前言選擇GaggiMate而非Gaggiuino的理由: GaggiMate的操作介面比較簡潔我通常在早上喝咖啡，在得到咖啡因之前，要看Gaggiuino那複雜的面板，感覺會很頭痛。需要的時候，GaggiMate也可以透過手機提供這些複雜的資訊，所以我偏好GaggiMate。 GaggiMate的官方支援Silvia少了很多自己摸索的功夫。 GaggiMate(目前)是Open Source的Gaggiuino現在不完全open source，對於一個接近於私人的”產品”，充滿不確定性。需要Open Source除了保留依自己需求改原始碼的可能性，對功能運作上有問題時，也可以查原始碼自己得到答案。 Gaggiuino有一些不好的評論？有不少人表示Gaggiuino的Discord不太友善，相反地GaggiMate的Discord則資訊豐富，支援也不錯。 GaggiMate也是有些缺點的，最大的問題還是”新”，可能是新的project，很多東西還在改版中，有些文件沒有很清楚，而youtube上有一個改裝的影片也跳過很多細節，看了幾次都沒看懂。為了確定到時候不會接錯線，仔細地看了網站上的資料，對照了Silvia的接線，大約確認了如何改裝，分享如下：（官方的文件一直在更新，也寫的愈來愈清楚。還是建議以官方的文件為主。）材料PCB &amp; Lilygo T-RGB GaggiMate Pro PCB Pro版是有pump變壓控制的，我早就改PID了，就是沖著變壓控制來的，當然要買Pro版的。 Lilygo T-RGB (Full Circle) 如果是自己買，要注意有三個型號，要挑Full Circle/ST820觸控的那個型號。有能力自搞的就連2.8吋的都可以。 PCB Housing 3D列印PCB的殼。 Display Housing 3D列印LilyGo T-RGB的殼。壓力傳感器 及管件 0-1.6mPa, 5V,訊號0.5-45V，接頭 G1/4 6mm管快拆三通 G1/4 轉 6mm快拆 1/4 矽膠墊圈 外徑6mm內徑4mm鐵弗龍管GaggiMate官方的Silvia接法是從鍋爐接出來，把三通接在OPV和鍋爐之間，取代原本在那個位置的直通；不過一來這個接法較麻煩，二來我的V1根本沒有那個直通可以取代，所以不採用。取而代之，我接在pump的出口，V1的pump到鍋爐的連接是6mm管，不是不鏽鋼編織管，用一個6mm快接三通可以很容易接上去。（後來有新的接法就是在pump出口端。）線材 編號 名稱 AWG 顏色 長度 接頭 L1 Heater bridge 18 紅 30mm male-male L2 Eco bridge 18 黃 30mm male-male L3 3-way valve 18 紅 450mm spad- L4 Pump 18 綠 450mm female - L5 Neutral 18 藍 450mm male - L6 Live 18 灰 450mm + 30mm 三頭 L7 Heater to SSR (x2) 18 黄 300mm male-fork 18AWG我個人覺得有點太細，pump和電磁閥還好，但連接加熱器的L1 Bridge，及L7到SSR的兩條線，我覺得可以考膚用粗一點的線，像是12或14AWG或至少16AWG似乎會比較好？訊號線(22AWG) 編號 名稱 接頭 Pin 顏色 接頭 pin 長度   S1 Buttons JST PH 2.0mm 4P 1(Brew) 綠 female   450mm         2(Steam) 綠 female             3(GND) 黑 female             4(GND) 黑 female       S2 SSR Signal JST PH 2.0mm 3P 1(x)       150mm         2(Signal +) 黄 fork             3(GND -) 黑 fork       S3 Screen Power JST PH 2.0mm 2P 1(GND) 黑 JST PA 2.0mm 4P 1 (GND) 550mm         2(3V3) 紅   2(3V3)                 3(SDA)                 4(SCL)     前置作業一：燒錄必須使用Google Chrome、Opera或Microsoft Edge，連上網頁，分別燒錄PCB和LilyGo。PCB需要插入USB時按住SW1才會進入燒錄模式，那個按鈕很小、很難按，不過只需要這麼一次。前置作業二：標注接線在把線拆下來前，先把所有的接線貼上標注(我用油性馬克筆直寫在接外殻)，按鈕的編號順序是面向機器正面、從左到右、從上到下： 標注 名稱 線 原廠連接 改裝連接 C.1 Coffee Switch 1 白 供水按鍵(W.1)、電磁閥和Pump(PMP.B) 連上 C.3成為電源的L線 C.2 Coffee Switch 2 橘/白紅 電磁閥 連上 PCB的V port,由PCB來控制電磁閥 C.3 Coffee Switch 3 黑 電源L線 C.1 C.4 Coffee Switch 4 紅 電源N線 x W.1 Water Switch 1 白 沖煮鍵(C.1)，電磁閥和Pump(PMP.B) x W.3 Water Switch 3 黑 電源L線 x W.4 Water Switch 4 紅 電源N線 x S.2 Steam Switch 2 灰/白藍 Steam Thermostat x S.3 Steam Switch 3 黑 電源L線 x S.4 Steam Switch 4 紅 電源N線 x BT.A Brew Thermostat 紅 電源N線 BT.B BT.B Brew Thermostat 灰 蒸汽鍵(S.2)，Steam Thermostat BT.A ST.A Steam Thermostat 灰 沖煮鍵(BT.B)，Brew Thermostat SSR ST.B Steam Thermostat 黄 鍋爐電熱 SSR PMP.A Pump 紅 Brew Thermotat(BT.A),電源N線 PCB P port PMP.B Pump 白 供水按鍵(W.1)、沖煮鍵(C.1),電磁閥 PCB N port 線的顏色純供參考，最好還是仔細檢查實際連接到那個元件。例如在我的機器上，連接電磁閥的是白色帶紅條紋的線，而應該是灰色那條則為白色帶藍色。Whole Latte Love有Silvia各元件的圖，可以看出那個是Brew thermostat和Steam thermostat。這邊有很多Silvia的拆機圖，也可以參考。接線Silvia(V3)原裝的接線圖：雖然這是V3的，線路非常簡單，我相信V1/V2應該也是一樣的。把標示和線的顏色畫上去：上圖標注的電源線是110V的顏色，如果是220V，電源的三條線是藍/棕/白綠（110V是黑/白/綠）。改裝後成的圖：接線步驟注意：使用這個PCB和網站的接線方法，電源的L火線會連到PCB的N、N中性線接到PCB的L，極性會是反的，不過不會影響功能，因為實際上在PCB電路中，是控制L連通到P或V，而依這個接法，Pump和電磁閥連接到P和V實際上是N(中性)線，而拉到L的實際上是來自電源的N(中性)線。要說有差的話，是PCB上的將直流電轉5V/3.3V的供電器，但這個供電器極性應該是無所謂的。Silvia線路改線 拔掉連接Brew thermostat的接頭 BT.A 和 BT.B ，用短紅線&lt;font color=#FF0000&gt;L1.Heater bridge&lt;/font&gt;把兩條線接起來。 拔掉連接Steam thermostat的接頭 ST.A, ST.B， 用 2條黄色 &lt;font color=#FFFF00&gt; L7.Heater to SSR &lt;/font&gt; 延長，連接到SSR的AC端。 移除thermostats及夾具，把M3 thermocouple測溫線鎖上其中一個孔，不要鎖太緊，可以考慮用散熱膠。 拔掉連接Brew按鈕的 C.2 ，接上&lt;font color=#FF0000&gt; L3. 3-way valve &lt;/font&gt;，另一頭接上PCB的 V port 拔掉連接Brew按鈕的 C.1 &amp; C.3. 用短黃線 &lt;font color=#FFFF00&gt; (L2.Echo bridge)&lt;/font&gt;把兩條線接起來 拔掉連接Brew按鈕的 C.4，用藍色&lt;font color=#0000FF&gt;L5.Netral&lt;/font&gt;延伸, 接上PCB的 L port 拔掉靠近thermostat的 PMP.A，用綠色&lt;font color=#00FF00&gt;L4.Pump&lt;/font&gt;連接到 PCB的 P port 拔掉 PMP.B,用灰色 &lt;font color=#DDDDDD&gt; L6.Live &lt;/font&gt; 連接到 PCB的 N port短紅線&lt;font color=#FF0000&gt;L1.Heater bridge&lt;/font&gt;可以省略，2條黄色 &lt;font color=#FFFF00&gt; L7.Heater to SSR &lt;/font&gt; 接BT.A和ST.B即可。按鍵線路（除了電源，原按鍵的線應該是全部拔掉。）這些接線是把沖煮和蒸汽的按鍵控制接到PCB。 把S1.Buttons的線1.Brew(綠)接到沖煮按鍵的C.2位，一條黑色的GND接到C.4的位置 2.Steam(綠)接到蒸汽按鍵的S.1，另一條黑色的GND接到 S.3這個Project名稱叫GaggiMate，不是SilviMate，所以是以改Gaggia為出發點的，Gaggia並沒有”熱水鍵”，可能因為如此，PCB也沒有支援熱水鍵的接線（雖然可以有這個功能）。要該熱水鍵起作用，就必須額外從熱水鍵接線給pump，不過不確定這樣是否會對電路版造成問題。另一個變通的方法是改用可以按鍵，變成可以切換成”PCB（軟體）按制”和直接供電的的按鍵。不熟悉的人就不要自己接吧。壓力傳感器比較新的接法和我採用的接法都是接在pump的出口處，實際的接法視管件接頭而定。我的是古老的V1，pump出口到鍋爐間是一條軟管。訊號線 連接PCB和SSR訊號 熱電偶控制線 壓力傳感器 連接LilyGo的線心得個人心得，僅供參考。（隨著版本的進步，或許有些行為也會改變。） 在裝機前可以先試電路和做設定；只要把PCB和LilyGo T-RGB都插上USB-C供電即可。不過我在試的時候，必須把熱電偶接上PCB，不然Display無法動作，如果有問題，還是先接上熱電偶。 電路不難，水路比較難。鐵弗龍管和快速接頭如果尺寸不太合，可能會漏水，一定要先測試會不會漏水。我後來改用鎖的”飛速”接頭，或者叫”快擰接頭”。另外，官方或從淘寶買的接頭規格通常是BSP/G的，但台灣廠商的預設是PT，一樣是兩分(1/4)，但不相容，買的時候注意一下。 如果在設定中勾選Boiler refill plugin，一開機便會啓動pump打水，如果壓力傳感器沒接好，偵測不到壓力，會一直打。可以考慮先不要勾選，測試時快速進入Water模式，手動啓動pump打水。在設定的Default Temperature可以設為0，那麼進入Water模式便不會啓動加熱。 我用的電線連接端子是尼龍全絕緣外殻的，它的公端尼龍外殻比較大，剛好可以罩住原廠接頭，感覺上絕緣和保護效果比較好；我是看到我原先裝的Auber PID kit是用這種的才決定轉用的。 比較老的機器，原廠靠近鍋爐的連接端子外殻可能都脆化了。這種外殻是買得到的，Auber和Stefano’s Espresso Care都有，我在蝦皮也買到一家有賣，只是沒有一個好找的名稱，要花一些時間。 我的Silvia外殻上緣的鋼板有3.2mm以上，官網賣的Display外殻用來插在這個上緣的孔隙是2mm，好像V2以後的厚度是1.8mm。如果是比較舊的Silvia，可能買這個外殻要考慮一下。 連接LilyGo T-RGB的那個接頭叫grove 接頭，拍賣網站不難找。（不過我花了一些時間才知道它叫什麼。） 拆機接線時最好帶手套，鋒利的地方很多。參考： https://wiki.wholelattelove.com/Rancilio_Silvia/diagrams_and_manuals https://www.pidsilvia.com/Boiler%20Electrical.htm" }, { "title": "比重瓶", "url": "/posts/pycnometer/", "categories": "釀酒筆記", "tags": "", "date": "2025-05-01 14:50:35 +0000", "snippet": "比重瓶是一種用來測量密度的工具，它有固定的容積，裝滿待測物之後，測量重量，即可計算出密度。如果是用來測量比重，可以測量同溫下，同一個比重瓶的麥汁以及水的淨重，相除即可得到比重。比重的定義是和水相比的重量比值。以下是chatGPT給的介紹：”比重瓶（Pycnometer）是一種常用於實驗室中測定液體或固體密度的精密容器。它通常由玻璃製成，瓶口細長，並配有一個帶有細孔的玻璃塞，以確保裝入固定體積...", "content": "比重瓶是一種用來測量密度的工具，它有固定的容積，裝滿待測物之後，測量重量，即可計算出密度。如果是用來測量比重，可以測量同溫下，同一個比重瓶的麥汁以及水的淨重，相除即可得到比重。比重的定義是和水相比的重量比值。以下是chatGPT給的介紹：”比重瓶（Pycnometer）是一種常用於實驗室中測定液體或固體密度的精密容器。它通常由玻璃製成，瓶口細長，並配有一個帶有細孔的玻璃塞，以確保裝入固定體積的液體或固體後能準確稱重。使用要點： 清潔並烘乾比重瓶。 確保清潔與乾燥：殘留水或其他物質會影響質量測定，導致密度誤差。 液體須溢出瓶口再塞瓶塞：這樣才能保證體積準確。 避免氣泡殘留：氣泡會佔據體積，導致密度偏低。 控制溫度：密度會受溫度影響，需於恆溫環境（如 20°C）下測定，或使用恆溫水槽。 稱量前擦乾瓶身：以免外部液體影響天平讀數。 校準比重瓶體積：若無標定體積，需以蒸餾水（已知密度）校準瓶容積。”在標準的操作時，要讓麥汁和水達到同一個溫度，需要一些時間。而且在每次裝填時，必須烘乾比重瓶，以免殘留的水或麥汁影響測量。這麼麻煩的使用方式或許是比重瓶在很少在家釀中使用的原因。不過，如果不考慮宇宙大爆炸後每天都在擴張的影響，假設同一個比重瓶的容積和重量都是固定的，只是事先測量好比重瓶的容積和重量，就可以簡化測量流程：因為可以查到水在不同溫度下的密度。比重瓶有許多不同的容量，以家釀來看，10ml~100ml是比較合適的大小。是的，最小只要10ml就可以測量比重，相對於比重計至少要100ml是還要節省。不過10ml的可能會產生比較大的誤差，建議使用25ml以上。誤差的大小和比重瓶的大小及秤的精確度有關；如果是使用25ml以下的比重瓶，建議秤的精度最好有0.001g，如果是50ml以上，0.01g的應該也堪用。不過通常精度高的秤，最大的秤重也會較小，一般不會太貴的秤，要能秤到100g以上的，可能精度只能到0.01g。另外，在簡化流程中，需要準確而快速的溫度計。 第0步：測量比重瓶空重及真實容積這個只需要測量一次，把數值記錄下來以後使用。雖然比重瓶有標示容積，但實際上會有誤差，而且便宜的比重瓶誤差可能又大了許多。比重瓶的真實容積可以用水來測量，測量裝滿水的重量，扣除比重瓶空重，查表得知道水密度，就可以計算出瓶子的真實容積。 測量比重測量裝滿待測物的總重量，扣除比重瓶空重，除以真實容積，即為密度。測量溫度，查表得知水在此溫度下的密度，即可求得比重。不考慮操作失誤，用這個方法測量出來比重，其準確度和秤的準確度及比重瓶的大小有關。因為我不太會算誤差，所以叫chagGPT推算：使用0.001g精度，誤差0.003g的秤，用25mL比重瓶的誤差為±0.00012， 而10mL的誤差為±0.00030。雖然這個可能是比較理想的數值，但只要用25ml或10ml,就可以得到一個準確度還可以的數值，應該是還不錯的。以上這個簡化流程是從一位叫Peebee的發文中得到的啓發，在他的介紹中，還用了一個小瓶子，用小珠子調整成和比重瓶的乾重一樣的重量，就可以用秤的tare（去皮？）功能直接得到淨重，細節請參考他的原文一、二。這個方法中，關鍵之一是水的密度，我找到一個水在不同溫度下的密度的表，然後寫成計算器。實際操作下，25ml的不比我的比重計差，而10ml的則需要很細心的操作。另外，測量啤酒時，一定要確實把二氧化碳去除，二氧化碳的泡泡影響很大。更正:啤酒的比重通常是20°C或60°F（美標），也就是在20°C或60°F測量，相對於20°C或60°F的水的比重。用上面這個方法測出來的，和標準的20°C或60°F會有一點誤差，需要修正。具體修正方法就是比較兩個溫度下水的密度。參考： https://www.jimsbeerkit.co.uk/forum/viewtopic.php?t=83887 https://www.homebrewtalk.com/threads/sg-and-temperature-compensation.730749/ https://www.vito.tw/brewutils/brewcal.htm https://www.internetchemistry.com/chemical-data/water-density-table.php" }, { "title": "清酒的量測", "url": "/posts/SakeMeasurement/", "categories": "釀酒筆記", "tags": "", "date": "2025-04-06 14:50:35 +0000", "snippet": "日本酒度/SMV日本酒度(Nihonshu do)英文是SMV(Sake Metre Value)，其物理意義和比重一樣，可以用專用的比重計量測，或用比重計或波美計量測後計算。SMV大約在+15到-40之間，比重1.0，SMV為0。比重愈小，SMV的數值愈大。日本酒度可以理解為反映發酵度的數值，日本酒度愈高，發酵度愈高，酒精度也愈高。SMV數值是正的，數值愈大，就愈往「辛口」方向；反之負值就...", "content": "日本酒度/SMV日本酒度(Nihonshu do)英文是SMV(Sake Metre Value)，其物理意義和比重一樣，可以用專用的比重計量測，或用比重計或波美計量測後計算。SMV大約在+15到-40之間，比重1.0，SMV為0。比重愈小，SMV的數值愈大。日本酒度可以理解為反映發酵度的數值，日本酒度愈高，發酵度愈高，酒精度也愈高。SMV數值是正的，數值愈大，就愈往「辛口」方向；反之負值就愈往「甘口」方向。和比重 SG 的換算日本酒度SMV -&gt; 比重SGSG = 1443 / (1443 +SMV)比重SG -&gt; 日本酒度SMVSMV = (1443 - SG * 1443 ) / SG日本酒度 +15, 比重為0.9897；日本酒度 -30, 比重為1.0212。從啤酒的觀點來看1.0212殘糖很高。特別要注意的是日本酒使用的比重是15°C/4°C，意思是在15°C下測量，相對於4°C下水的比重，所以水的日本酒度量起來不是0，而是+1.26， 因為15°C的水密度略小於4°C的水，所以在15°C量起來的對比4°C的比重不是1.0。一般啤酒用的比重計通常是20°C/20°C或60°F/60°F（美國產的），要修正成15°C/4°C才能套用這個公式。根據日本稅務機關的調查，2012年日本市場中，日本酒度的平圴值為：普通酒 +3.7、吟釀 +4.3 、純米酒 +4。波美計有輕和重兩種，分別用在比水輕和比水重的液體上。重波美和日本酒度換算日本酒度(SMV) -&gt; 波美(B)B= SMV/ -10波美(B) -&gt; 日本酒度(SMV)SMV = B * -10在發酵控制的A/B line中，用的是波美度，可以用比重計量測後換算：重波美度：B =（1-1/SG）* 144.3輕波美度B =（1/SG-１）* 144.3＋10　酒精度酒精度比較準確的測量方式是用蒸餾的或專業儀器，比較簡單的方式是用折射儀和比重計的量測讀數來推算大略值：ABV (estimated) = 1.646 * Bx - 2.703 * (145 - 145 / SG) - 1.794這個方法是概略的值，誤差在0.6%ABV左右。酸度日本酒的酸度是用滴定法測量出來的，它的定義為在10ml的酒中，滴入使其達到中和的濃度0.1M氫氧化鈉ml數。0.1M的氫氧化鈉(NaOH分子量為40)溶液可用4g氫氧化鈉加入1公升蒸餾水中混合而成。根據日本稅務機關的調查，2012年日本市場中，日本酒度的平圴值為：普通酒 1.18、吟釀 1.32 、純米酒 1.50。根據日本酒度SMV和酸度來推測酒的淡麗濃厚和辛甘口的二維圖可以很容易找到，我參考了幾張，自己畫了一張：看了幾張圖，包括自己畫的這張，覺得”邊界”太明顯，不太符合現實；味道不可能一刀切式地分別，所以改用漸層上色，雖然界限還是很明顯，但可以稍微表示一下邊界應該是模糊的。エキス分・原エキス分エキス分(英文Extract)指的是100ml酒中溶解的非揮發性物質，一般來說，以糖類為主。市面上的清酒エキス分大部分都落在3（辛口）到6（甘口）之間，但超出這個範圍的也是有的。sakebrewing.org的公式：酒精度換算比重 = 1.5 x 10^-5 x ABV^2 - 0.00149 x ABV + 0.9991エキス分 = (SG － 酒精度換算比重)×260＋0.21不過，我用這個公式算出來的值會和網路看到的有一點差距，找到一個食品工業試驗場的檔案，是用查表法，附有程式碼，算出來的值比較接近。原エキス分是包括已經轉換成酒精的糖的總溶解物比例：原エキス分 = エキス分 + ABV (%) x 0.7942× 2*註：原本酒精的比重是認定為0.7947， 但JIS B 7548:2009中改為0.7942原料利用率推定對釀造過程中很有用的計算，引用原文的翻譯：”在醪液中，原料米若完全溶解，當然就會成為原始萃取物（即原エキス）。然而，在溶解的同時，固體成分所占的體積會減少，而液體的體積則會增加。只要明確了解這種關係，就可以透過分析醪液的波美度（或日本酒度）以及酒精濃度，來推算出原始萃取物的含量，進而計算出對應的原料米溶解程度。“知道了溶解度就大概知道醪的糖化進度到什麼程度，也可以推算出粕的多少。詳細內容可參考原文，簡略的原理和推導過程如下：醪體積 = 水總體積 + K * 萃取物 K 為常數，是每公斤萃取物換算體積的常數，實測 0.612水總體積 = 仕込水 + 米吸收水量 + 米本身的含水率米本身的含水率一般為 13%，**米吸收水量**是製麴和蒸米時吸收的水份，從13~30%不等萃取物濃度 = 萃取物 / 醪體積 = 萃取物 / (水總體積 + K * 萃取物)萃取物濃度 = 萃取物 / (水總體積 + K * 萃取物)把最後一個式子的分子分母都除以米總量：萃取物濃度 = (萃取物/米總量) / ( (水總體積/米總量) + K * (萃取物/米總量) )m = 萃取物/米總量，表示溶解的比例或原料利用率V = 水總體積/米總量 Ex = 萃取物濃度，即原エキス分即得到Ex = m / (V + K * m)簡單的代數運算，可以得到原料利用率：m = Ex * V / (1 - Ex * K)原料利用率是米溶化的比率，反過來說，沒有溶化的就成為酒粕的固體，酒粕的固體在機器壓榨下通常是50%，但其他方法可能更低：酒粕固體 = 總米量 * ( 1 - 米含水率 - m)酒粕總量 = 酒粕的固體 / 酒粕固體比例 進一步推算出粕步合：粕步合 ＝ 粕總量 / 總米量套用前面原料利用率算出酒粕量的公式：粕步合 ＝ 粕總量 / 總米量 = ( 酒粕的固體 / 酒粕固體比例 ) / 總總量 ＝ ( 總米量 * ( 1 - 米含水率 - m) / 酒粕固體比例 ) / 總米量 = ( 1 - 米含水率 - m) / 酒粕固體比例原エキス分可由測量ABV和日本酒度/比重/波美度計算得之，利用這幾個公式，可以得知目前的原料利用率（也就是糖化進度）以及預測酒粕的多少。甘辛度酸會影響甜度的感受，所以用酸度和日本酒度（也就是比重或殘糖的一種表現數值）計算出來的一個參考值：甘辛度 = (193593 / (1443 + 日本酒度)) - 1.16 x 酸度 - 132.57-3:非常dry, 3:非常甜，0:中庸這幾個公式，整理在清酒計算器中，甘辛度也會同時把點畫在那張二維圖上。參考： https://www.nada-ken.com/main/en/index_n/274.html https://www.nada-ken.com/main/en/index_s/16.html http://www.nada-ken.com/main/en/index_e/276.html https://www.brewsake.org/calculations https://sake.science/日本酒の味わいと香りの表現/ https://www.kem.kyoto/column/勝木氏-連載コラム/4850/ https://www.jstage.jst.go.jp/article/jbrewsocjapan1915/74/7/74_7_451/_article/-char/ja/ https://vocus.cc/article/5ff66d48fd897800018726d9" }, { "title": "Krausening", "url": "/posts/krauseningBottleCondition/", "categories": "釀酒筆記", "tags": "", "date": "2025-04-02 14:50:35 +0000", "snippet": "Krausen是符合德國純釀法的一種碳酸化(Carbonation)方式；具體操作方式，就是把發酵達到高泡期的麥汁加入發酵完成的啤酒中，利用高泡期的麥汁中殘餘的糖來碳酸化。（理論上加入酵母開始發酵的麥汁就算是啤酒，為了容易區分，還是稱為麥汁。）這個做法的優點是高泡期中的酵母活力很強，可以快速的完成碳酸化的動作，而且可以把主啤酒中還沒有完全處理完的代謝副產物消耗掉，達到快速熟成的目的。因為酵母...", "content": "Krausen是符合德國純釀法的一種碳酸化(Carbonation)方式；具體操作方式，就是把發酵達到高泡期的麥汁加入發酵完成的啤酒中，利用高泡期的麥汁中殘餘的糖來碳酸化。（理論上加入酵母開始發酵的麥汁就算是啤酒，為了容易區分，還是稱為麥汁。）這個做法的優點是高泡期中的酵母活力很強，可以快速的完成碳酸化的動作，而且可以把主啤酒中還沒有完全處理完的代謝副產物消耗掉，達到快速熟成的目的。因為酵母活動力很強，可能對氧氣的吸收也比較快。一般家釀比較不會採用krausening的原因，是操作非常麻煩。依麥汁的比重、FG、想要的碳酸化等因素而異，需要加入的麥汁會達到10%或甚至更多。家釀很少一直釀同一批一模一樣的啤酒，所以後面這批麥汁來源就變得很麻煩。如果加入不同的麥汁（啤酒），就會影響到原來啤酒的一些數據、甚至是風味。可是換個角度來想，這也是調整啤酒風味的一個方式；例如加強酒花風味。不過因為也只有10%左右，實際上能夠做多少調整，可能也是需要一些實驗和經驗。因為是利用麥汁中殘餘的糖來碳酸化，所以需要知道麥汁目前比重和最終比重，才能計算需要的的麥汁量。這個技巧難以使用的其中一個原因，就是需要在高泡期，因為Ale啤酒在發酵最劇烈的高泡期時，可能一天就會發酵10幾甚至20幾點(0.01x~0.02x)，如果裝瓶動作慢一點，可能數字又不一樣了。相對來說，拉格會比較適合一點，因為拉格通常在比較低的溫度發酵，發酵速度就會比較慢，所以拉格比較不會因為差個半天就有很大的差距。至於最終比重，如果用的是同一批麥汁，主發酵結束時，也就知道了。如果是不同批的麥汁，最好是採用快速發酵測試(FFT)來提前知道最終比重。同樣，如果是Lager，時間上比較有餘裕，Ale的高泡期很容易在24~48小時開始，這個時間點的FFT結果會比較沒有把握。如果是用keg，即使有些誤差，還是有調整的機會，但如果是裝瓶，就會需要比較精準。家釀來說比較可行的方法，就是同一批麥汁在發酵前保留一部分，冷凍起來，等到主發酵完成時，加入酵母發酵，等到到高泡期的時候拿來使用。所以可以先估算大約的數字，保留下來。除了要多留一些以容許比重變化的空間，也因為我們不希望也把上層泡沬和底層沈澱加進去，所以要多保留一些。確實的麥汁量在Braukaiser的文中有計算方式：Vk = 1.95 * Vt * Ck / (SG - FG)Vk: 所需要的麥汁（高泡啤酒）Vt: 包括加入麥汁（高泡啤酒）的全部啤酒量Ck: 麥汁（高泡啤酒）氣體數SG: 麥汁（高泡啤酒）目前的比重，1.050計為1050FG: 麥汁（高泡啤酒）的最終比重，1.050計為1050例如OG 1.050, FG 1.010為例，如果時間點在1.040或晚一點的1.030，啤酒溫度為10度，目標氣體數2.5。啤酒中己經有的氣體數為1.2，需要從麥汁（高泡啤酒）來的氣體數為 2.5 - 1.2＝ 1.3Vk = 1.95 * Vt * Ck / (SG - FG)ex. 1.040Vk = 1.95 * Vt * 1.3 / (1040 - 1010) = 0.0845 Vtex. 1.030Vk = 1.95 * Vt * 1.3 / (1030 - 1010) = 0.12675 Vt以這個例子來看，在1.040時使用，需要總啤酒量的8.45%，如果等到1.030時，則需要到12.675%。如果發酵溫度高一點、或是有拉高溫度做D-Rest，啤酒中的CO2會少一點，所需要的麥汁（高泡啤酒）就會又多一些。我釀的拉格總覺會裝瓶後要多放一陣子，味道才會好一些。最近一次釀了一批拉格，覺得發酵後期有點遲緩，於是想到用Krausening。如果因為酵母不健康，有些發酵副產品沒清乾淨，可以讓活力強的高泡期酵母處理掉。另外，也想試試看熟成時間可不可以縮短一些。因為沒有事前想到，所以重新糖化了一批小批次的，採用同比例的麥芽和酒花。把主發酵已經結束的啤酒冷降後排渣，從中提取一些酵母泥加到小批次的麥汁中，另外用了裝了300cc左右，也加了一些酵母泥進去做FFT。因為發酵結束的酵母處於極度缺氧的狀態，而且在高泡結束前就會使用，麥汁有事先充氧，而且用錐形瓶當發酵桶，並只用鍚箔紙封住。在9~10度下發酵大約3天，感覺差不多高泡了，用折射儀量，換算比重大約少了0.018， 仍有足夠的麥汁可以用，小心地把差不多的量倒進發酵桶後便裝瓶。但裝完瓶後才發現啤酒比我估的少了一些，也就是用了超過數量的麥汁，換算原本預定的2.6氣體數，結果會到3.0多一些。雖然擔心爆瓶，但還好冬天氣溫不太高，沒有發生爆瓶。感覺上，大約3～5天左右瓶發結束（室溫，約20度）。裝瓶後兩星期開瓶，結果果然氣太多，風味是感覺有預期的好，大概是加糖瓶發的至少1個半月的感覺。至於氧化的控制需要更久才得得知。我認為是成功的。檢討： 考慮以後釀拉格都用krausening，先保留麥汁。 更改我的自動投糖器，讓自動投糖器支援麥汁，直接把麥汁加到瓶子中。這樣不僅更準確，而且自動投糖器用的蠕動泵可以從中層抽取麥汁，避開上層的泡沫和底層的渣。參考： Kraeusening, Braukaiser Fast Ferment Test快速發酵測試 自動投糖器" }, { "title": "清酒釀造例範", "url": "/posts/sake_recipes/", "categories": "釀酒筆記", "tags": "", "date": "2025-03-15 14:50:35 +0000", "snippet": "前言網路上找了幾個含步驟說明的清酒酒譜。2～3公升/酵母仕込、一段仕込心得/感想/重點 不做酒母，不分三段，最適合家釀的做法 泡水1小時，蒸1小時 前兩天室溫，後面放冰箱(~5C)，每天拿出來兩三個小時 前6天攪拌器材 4公升大小的發酵桶 溫控設備 蒸飯器材 攪拌器材，例如大湯匙 過濾器材，例如豆漿布材料 米 (梗米) 麴米 300g 酵母 水 2L (乾淨軟水...", "content": "前言網路上找了幾個含步驟說明的清酒酒譜。2～3公升/酵母仕込、一段仕込心得/感想/重點 不做酒母，不分三段，最適合家釀的做法 泡水1小時，蒸1小時 前兩天室溫，後面放冰箱(~5C)，每天拿出來兩三個小時 前6天攪拌器材 4公升大小的發酵桶 溫控設備 蒸飯器材 攪拌器材，例如大湯匙 過濾器材，例如豆漿布材料 米 (梗米) 麴米 300g 酵母 水 2L (乾淨軟水或RO水) 乳酸 1mL步驟Day 1 把下列材料在發酵容器中混合 水 1.6L 麴米 270g 乳酸 0.4ml 酵母 洗 1100g 米，泡水1小時，蒸米。米冷卻到室溫左右加入發酵桶中。 將發酵桶蓋上置於室溫，每日攪拌Day 3 攪拌 將發酵桶置於冰箱(~5C)Day 4~6 每天攪拌 每天將發酵桶拿出來冰箱2~4小時讓酵母發酵Day 7~20 緊閉蓋子，防止氧氣，接觸氧氣會產生太多酸 在 11 ~ 20天左右，酒精度會在10~14%，可以在覺得可以時開始過濾。Day 20ish 煮沸水來消毒過濾布。 過濾。2加侖/三段仕込心得/感想/重點 幾乎是照標準速釀做法，從酒母到三段仕込 （酒）米泡18小時，不過有一段又說泡一個小時；可能酒米和飯米做法不同？ 酛溫度22~23C 醪 10-16C（愈低愈好） 粗濾後 7C 攪拌到醪(留添後)第10天器材 一個 2.5加侖和一個5加侖的發酵桶 溫控設備 蒸飯器材 攪拌器材，例如大湯匙 過濾器材，例如豆漿布材料 米 10lb(4.54kg) 麴米 1.2lb(1.13kg) 水 2gal(7.61L) 酵母 乳酸 3.8mL 酵母營養 4g 浴鹽 0.7g 氯化鉀 6g步驟米的處理酒米和食用米的處理方式不一樣，一般人很難取得酒米，這邊只列食用米的做法。 洗淨 用很冷的水淹過5~7.5公分浸泡，放冰箱，18個小時。 濾水，蒸45分鐘 除了酒母（酛）的階段，麴米都是在加掛米的12~18小時之前加，所以在開始浸泡米時就加入麴米每個階段的材料 階段 麴米 掛米 水 酛/酒母 10% 115g 7.5% 340g 7.8% 590ml 初添 20% 205g 12.5% 570g 8.3% 650ml 仲添 30% 320g 30% 1360g 27.6% 2070ml 留添 40% 500g 50% 2270g 56.3% 3790ml         總共 1140g 4540g 7100ml   25% 100% 156% 酛Day 1 酛：第0天 準備酵母和麴米 混合 水 600ml 乳酸 3.8ml 酵母營養 4g 浴鹽 0.7gm morton’s salt subsitute(氯化鉀) 7g 把120ml的混合水放入冰箱，其餘480ml置於15-18C過夜Day 2 酛：第1天 洗 340g 的米，泡1小時，滴水一小時 把酵母加入 480ml 混合營養劑、乳酸等等的水中，把 115g 麴米也加進去 溫度應該在21C以下 pH值應該在 3.6~3.8 蒸米 1 小時，之後用冰在冰箱的 120ml冰水降溫到22C 混合後攪拌5分鐘 12小時後，攪拌5分鐘Day 3 酛：第2天 升溫到23C， 早晚（間隔12小時）各攪拌一次Day 4~6 酛：第3~5天 維持23C， 早晚（間隔12小時）各攪拌一次Day 7 酛：第6天 攪拌一次後，逐漸降溫至15C ABV 6%, SMV-60/1.042/10.8PDay 8 酛：第7天 加入 205g 麴米 355ml 水 (650ml 一半左右) 溫度 15C 295ml 水冰在冰箱 洗、浸泡 570g 米Day 9 三段仕込：第1天 初添 晾米、蒸米 醪降溫到10C 蒸完米，平鋪約5公分厚，除了放涼，主要是讓蒸氣蒸發，可用湯匙攪拌 將已經乾的米放入消毒的2.5加侖桶中，加入冰好的295ml水 加入酛，輕柔地攪拌五分鐘 降溫到13C 接下來的48小時每12小時攪拌一次Day 10 三段仕込：第2天 踊り 每12小時攪拌一次 晚上 320g麴米加入主醪 1.2L 水加入 降溫到15~20C(愈低愈好) 870ml 水冰在冰箱 準備 1.36kg 米，洗米及浸米Day 11 三段仕込：第3天 仲添 初添的48小時後 蒸米 蒸米後平鋪5公分厚，等待20分鐘 輕柔地混合，加入冰的870ml水 降溫到9-20C 晚上準備隔天的米：洗米、泡米 2.27kgDay 12 三段仕込：第4天 留添 1.4L 水冰起來 滴水1小時後蒸米 蒸米完後，平鋪30分鐘，用湯匙或义子翻米 把米和冰好的水加入大發酵桶 降溫到32C以下後，加入之前的醪 接下來兩天每12小時攪拌一次 維持 10-16C（愈低愈好）Day 13 醪：第1天 溫度降到15C以下，最低可以到7C。 每12小時攪拌一次Day 14 醪：第2天 每12小時攪拌一次 ABV 3.5% - 75SMV/13.5P/1.053 第 14(醪2)天 和 19(醪7)天可以量一下比重：應該會從 1.045降到1.020Day 15~22 每天攪拌一或兩次 第22(醪10)天，ABV 11.5/9P/1.036約 Day 27(醪：第15天) 比重掉到零以下，發酵大約完成 食用米93%精合，ABV 20% &lt;70%精合， ABV 18-19% 可以加水調整為 16%左右 氣泡酒，降到11%以下 低於 0.993/SMV+10 會偏dry 建議在 0.993~0.998(SMV +10 ~ +3)之間 市售在 0.994~1.002(SMV +9 ~ -3)之間 據釀酒師說：精米步合對酒精度絕對有影響，磨得愈多，酒精度愈低，但清酒品質愈好約 Day 28～35 當比重到1.0以下即可以考慮過濾 用1/16″尼龍袋過濾，過濾完的是濁酒 過濾完的濁酒裝瓶至八方滿，要用水封約 Day 31～39 維持 7C，直到停止發酵(沒有泡泡)約 Day 40 ~ 48 移除水封，添滿至瓶頸。瓶蓋不能緊閉，置於冰箱2-3C 10天約 Day 49 ~ 58 過濾 巴殺，否則要放冰箱1加侖/三段仕込心得/感想/重點 時間行程與傳統做法大異其趣 先室溫糖化兩天 （酒母）加酵母後，降到15C，等待12～18小時，接著再到室溫 （初添）等2天後，添料後降溫到13度 （仲添）等5天後，添料後維持13度 （留添）等5天後，添料 發酵2週 只有做酒母時攪拌材料 米 (梗米) 5 杯 (1.25kg) 麴米 1 1/3 杯 (312g) 酵母 水 8杯 (2L) 乳酸 1mL 1/8 tsp DAP或酵母營養劑 1/8 tsp 浴鹽，1/8 tsp Morton’s Salt Substitute(氯化鉀)麴米 : 米 : 水 = 25% : 100% : 160% 水 8 cups = 8 *250ml = 2L步驟step 1 米泡冰水至少8小時，不多於12小時 將麴米(和米？)分成4份： 6.666% 21g 13.332% 42g 26.664% 84g 53.328% 165g 水分成： 1/2 cup 125ml 1 1/4 cup 312 ml 2 cup 250 ml 4 1/4 cup 1063 ml 階段 麴米 掛米 水 酛/酒母 6.66% 21g 83g 6.25% 125ml 初添 13.33% 42g 167g 15.6% 312ml 仲添 26.66% 84g 333g 25% 500ml 留添 53.33% 165g 667g 53.15% 1063ml         總共 312g 1250g 2000ml   25% 100% 160% step 2 把第一份水、麴米、米、酵母營養劑等加入，但先不加酵母 放室溫2天，一天攪拌2次step 3 加酵母，降到15度 等 12~18小時後，放到室溫3天，一天攪拌兩次 （初添）加入第二份麴米/米/水，降到13度，等五天，不攪拌 （仲添）置於室溫（不多於12小時），加第三份麴米/米/水，再放回13度C，等五天 （留添）置於室溫（不多於12小時），加第四份麴米/米/水，再放回13度C，等2週 過濾brewsake.org的 多個酒譜心得/感想/重點 只有原料的量和溫度控制" }, { "title": "家釀無線比重隨筆", "url": "/posts/WirelessHydrometer/", "categories": "釀酒筆記", "tags": "", "date": "2024-12-24 14:50:35 +0000", "snippet": "這只是一篇關於「家釀」用的「無線比重計」的經驗、心得、以及感想。結論先行，我現在用的是Kegland的Pill，如果你有在考慮，這是不會太差的選擇；它的優點是： 可以用Bluetooth/BLE或WiFi 價格相對便宜 可以無線充電 外殼設計不錯，而且容易買到替換品。外殼的接縫在中間，而高泡酵母留下的殘渣（Krausen ring）會在比較接近最上面，這部分剛好是沒有縫隙的，非常容易...", "content": "這只是一篇關於「家釀」用的「無線比重計」的經驗、心得、以及感想。結論先行，我現在用的是Kegland的Pill，如果你有在考慮，這是不會太差的選擇；它的優點是： 可以用Bluetooth/BLE或WiFi 價格相對便宜 可以無線充電 外殼設計不錯，而且容易買到替換品。外殼的接縫在中間，而高泡酵母留下的殘渣（Krausen ring）會在比較接近最上面，這部分剛好是沒有縫隙的，非常容易清潔。外殼銜接的地方有用兩個墊圈，也是讓人放心的設計。缺點： 用WiFi的話，要用Kegland的雲端服務。（但用Bluetooth/BLE則不用，但需要另一個設備讀取資訊） 外殼感覺有點薄。iSpindel是我用最久的東西，事實上我也有稍微貢獻一點東西；iSpinde的HTML版校正程式是我寫的。它的優點是： open source，可以自己搞；在可以自己搞的前提下，它的缺點其實在於製作者的能力限制；如果製作者的沒有任何能力限制，可以消除任何缺點。 正統的iSpindel是用ESP8266，用WiFi，但有已經有出現類似的改良版本GravityMon，除了支援ESP32，也多了許多功能.缺點： 自己搞很麻煩，買現成的價格和Pill差不多。 標準的外殼是保特瓶的胚，除了難買，每一批的大小型狀都有些差異，而且開蓋處正好是最容易累積殘渣的地方，即使可以做成無線充電，可能也需要開蓋清潔。iSpindel適合有能力且喜歡自己動手做的人。以我的經驗，保特瓶胚是最大的問題，因為有進麥汁的經驗，每次我都鎖太緊，結果後來把蓋子鎖壞了。但是已經有人設計出了可以用Pill外殼的PCB，用這個就可以用Pill的外殼。至於Tilt，我沒有用過，所以我沒有有用的資訊提供，要說的話只有一點：愈大和重的東西，受氣泡的影響愈小，量測到的值也就比較穩定，這是物理法則。另外，Tilt一直都是用Bluetooth/BLE，所以需要另一個設備讀取的小問題。那麼，這些無線比重計準確嗎？簡單地說，和一般的比重計一樣準確。這些無線比重計的原理和一般比重計是一模一樣的，靠的是液體的的浮力變化來測量比重，因為浮力會隨著比重而變化的。差別在於一般比重計用「眼睛」來看「高低」，而無線比重計用「感測器」來測量「傾斜角」。一般比重計在生產時已經把校正好的刻度標在上面，而無線比重計如果像Pill和Tilt都出廠時也已經有校正資料，但如果是自已做的，便需要自己校正。一般來說，我相信「感測器」會比「眼睛」準確，所以問題在於「刻度的正確」（無線比重器就是校正數據）；如果提供了精確而且足夠的數據，無線比重計會比一般比重計好。但是，因為無線比重計是放在發酵桶中隨著發酵進行同時測量的，發酵中產生的氣泡和高泡（Krausen）會附在比重計上，影響讀數。這是無法避免的問題，但是用大一點、重一點的無線比重器，可以減少氣泡造成的影響；Tilt後來出的Pro版其中一個改變就是變大變重。其實在無線比重器出現前，不乏有人想把一般比重器丟到透明發酵桶的，但通常試過一次就會放棄。「傾斜角」如何換算成比重？iSpindel官網有原理說明，就結論來說，浮力是「傾斜角」的反正切(arctangent)函式，而浮力和比重成正比，所以只要找出正確的函式就可以正確的計算出比重。但實務上，因為幾乎無法正確無誤地測量比重（例如，1.01001和1.0099999在數學上是不一樣的，但實際上無法分辨），加上感測器本身也是會有誤差，所以找出對應的反正切函式幾乎是不可能。我不太清楚Tilt或Pill原廠的公式如何計算，在iSpindel中，是採用迴歸分析的方式來得到一個接近的多項式。如果採樣的數值良好正確，大約4個點就可以得一個比一般比重器更準確的3次多項式。利用浮力來推算比重的一個問題是重心不能改變；傳統的比重器不能打開也不會打開，但無線比重器會有需要打開換電池或維護的情況，一旦重心有所改變，原本校正的數據就會產生偏差，結果就會變得不準。這個問題在自製的iSpindel上可能是最嚴重的，而Pill和Tilt可能因為是定製的產品，似乎不會有太大的偏差。當然如果有能力，也可以做出很完美的iSpindel。要避免重心跑掉的一個做法就是不要打開蓋子，避免重心移動，所以可以用無線充電會是比較好的方案。無線比重計最主要的優勢就是隨時監測比重，而以我使用Pill和iSpindel的經驗，它們的精細度比傳統比重計高上許多；下圖是我的某次拉格剛接種後的比重變化，右軸顯示的是比重少掉1.的數值，記錄開始的比重約在 1.0524，大約在時間軸08:00時，也就是接種後11-12小時的時候，己經可以看見比重開始變化了。而這個變化其實也才0.0005左右。下面這張圖則是發酵接近結束的比重變化，這張圖的時間跨度是4天多，比重變化是從1.0132到1.0127左右，如果以一般習慣來看，都是1.013，連續4天比重沒有變化？實際上卻有0.0005的變化，而這個差異以我的眼力，在我的0.002一格的比重計是鐵定看不出來的。即使受限於校正資訊的精確度，所計算出來的比重有誤差，但是比重變化這件事確實是可以測量的出來的，這是我認為無線比重計最實用的部分。事實上有些人根本不在意校正數據的準確度，他們只是用來看比重（或是傾斜角度）是否有變化。就這個功用來說，無線比重器是相當有用的。前方高能，閱覽小心底下的內容是我還在思考驗證的，可能存在錯誤或沒想清楚的部分，可以略過。到目前為止，無線比重計存在一個我沒有解決或解答的問題：溫度補償。(就寫到這裏，瞪著下面的圖表時，突然有了解決方案的靈感，不過，就先完成這篇。)無線比重計的物理原理和傳統比重計一樣，實際上都是測量浮力，而水的熱脹冷縮造成的浮力不同，當然一樣會影響讀數，不幸的是，除了水的浮力，溫度還影響了其他東西：感測器因為溫度變化產生的偏移以及（我猜想的）無線比重計本身的熱脹冷縮。只是套用比重的溫度補償，即使比重沒有變化，溫度的變化會讓無線比重器的讀數產生變化。有趣的是，溫度下降時，(我的)iSpindel的讀數會上升（即使在溫度補償後），但Pill的讀數則會下降。針對Pill我還做了一些測試，分別是放在水，以及只是固定在一個角度（放在一個乾的杯子中，用東西卡住，而且只看傾斜角讀數的變化；下面兩張圖是記錄Pill在空氣中及水中，傾斜角讀數相對溫度的變化。第一張是沒有放在水中，只是固定一個角度；第二張是放在水中。比重愈大，浮力愈大，傾斜角就愈大；水的密度因溫度下降而變大，所以浮力會變大，沒有其他因素在時，應該傾斜角會變大/上升。，但Pill很奇怪地在水中反而變小/下降，更奇怪的是Pill的感測器在溫度下降時，讀數是變大/上升的。照理說，溫度下降時，水的浮力變大加上感測器本身的偏移也是變大，讀數應該是變更大，但結果卻是相反，表示其在水中的偏移並不是只是來自感測器的偏移；我能想到的可能之一是無線比重計本身的熱脹冷縮。有沒有可能是軟體的”修正”呢？因為這個傾斜角讀數是沒有公開原始碼的Pill的軔體報出來，其實我們並不知道它是怎麼得到的。如果Pill有辦法辨別它是浮在水中還是被固定角度卡在空中，的確有可能有軟體介入修正，不過考慮到現實的複雜度，我認為這個可能性很低。為了得到更多數據，我又用水做了一次實驗，因為這幾天室溫在20度上下，但我希望取得30度左右的數據，所以加了一些溫水調成30幾度，再把放在室溫中的Pill放進去，結果又出現了出乎意外的結果：傾斜角一開始是上升的，過了幾個小時後，才隨著溫度下降。用熱脹冷縮的理論來解釋是：溫度下降，體積縮小的效應讓傾斜角變小，當在20度室溫的Pill放進35度的水中時，一開始體積是膨脹的 ，所以傾斜角上升，到了一個程度後，才又隨著溫度下降而縮小，傾斜角也跟著下降。如果不用熱脹冷縮的理論的理論，就有可能是感測器在30幾度左右的某個點，偏移方向會反轉。在夏天時再做一次實驗應該就能知道感測器會不會反轉。參考： compensate temperature drift of Acceleromete Homebrewtalk.com: Can it event be done? measure specific gravity using arduino or raspberry pi Homebrewtalk.com: Replacement firmware for iSpindel(GravityMon) Homebrewtalk.com: iSpindel- DIY Electronic Hydrometer Homebrewtalk.com: iSindel/Gravitymon Pill PCB iSpindel官網" }, { "title": "多酵母發酵", "url": "/posts/multiple-strians-of-yeast/", "categories": "釀酒筆記", "tags": "", "date": "2024-10-31 14:50:35 +0000", "snippet": "今年的自釀大賽中，我的Belgian Golden Strong Ale獲得不錯的成績，而這支啤酒比較特別的是同時用了Wyeast 1388和1968去發酵。在同一批啤酒中使用超過一種酵母並不是什麼新鮮事；反而在酵母純化的技術被發明前，所有的啤酒都是有很多種不同的酵母一起發酵完成的。當然，現在的主流以單一酵母為主，但其實用兩種或更多的酵母是非常常見的。例如，有些人會在發酵停滯時，另外加入其他...", "content": "今年的自釀大賽中，我的Belgian Golden Strong Ale獲得不錯的成績，而這支啤酒比較特別的是同時用了Wyeast 1388和1968去發酵。在同一批啤酒中使用超過一種酵母並不是什麼新鮮事；反而在酵母純化的技術被發明前，所有的啤酒都是有很多種不同的酵母一起發酵完成的。當然，現在的主流以單一酵母為主，但其實用兩種或更多的酵母是非常常見的。例如，有些人會在發酵停滯時，另外加入其他酵母幫助完成發酵，這便是一種多酵母發酵的作法。另外，像是比利時的酸啤(Flanders Red, lambic, 等等)，都是多種酵母混合的。另外，有小道消息指出，某些乾酵母其實是有兩種以上的菌株，常常是一些特性比較奇怪的，像是對發酵溫度範圍的反應，例如Mr. Beer的酵母有人說其實有lager和ale酵母，所以什麼溫度都可以發酵。除了酸啤，有商業廠用兩種以上酵母發酵同一支酒嗎？有的，可能有不少。據Homebrewtalk.com上有一個做生物科技相關的人分析，Tree House Julius可能有兩或三種酵母。其實，在Yeast book第3章就有一小段針對多菌株的發酵：大致來說，採用多酵母的兩個主要理由，一是增加高發酵度或高酒精度，二是增加風味複雜度。增加高發酵度或高酒精度就如前所提的例子一樣，通常會先讓主酵母完成發酵，在後段再加入能夠提高發酵度或耐高酒精的酵母。這種方式的酵母通常無法重複利用，因為酵母都混在一起來，回收的酵母無法重複先風味發酵後高酒精發酵的過程。因為啤酒風味大約決定在發酵的前三天，如果是為了增加風味的複雜度，應該在一開始就一起投入。很多人會覺得同時接種多菌株酵母會使彼此競爭，最後只有勝者出線，有趣的是，大部分的釀酒酵母並不會互相競爭而會有類似的成長曲線，而且最後回收的酵母比例也會和接種率差不多。不過，因為酵母沈降性不一樣，從底部回收酵母的比例會有比較大的偏向；在一個真實的案例中，只經過了五代，就從 50%-50%變成佔90%-10%；但有趣的是，這樣酵母比例仍然有表現出兩支酵母的特性。Wyeast 1388據說是Duvel酵母，White lab對應的是WLP570，是釀Belgian Golden Strong Ale常用的酵母。這支酵母產生的果酯中，有個梨子風味，我沒有在其他酵母中發覺到有類似強度的，而這個風味對我來說，就是Belgian Golden Strong Ale的風味。然而，Wyeast 1388也同時產生很強烈的酚味，強烈到像消毒水。為了降低酚味保留酯味，我嘗試了不同的接種率及發酵溫度，結果並沒有太大的不同。最後我甚至向Chatgpt詢問改善方式，Chatgpt回答了改變接種率和溫度或者改用其他酵母，這讓我決定了加入第二個酵母來沖淡酚味。決定加入第二支酵母後，要決定那支酵母並不難，首先要是沒有POF-的，然後也要果酯味比較強的，發酵度無所謂，因為1388是STA1+，可以發酵長鏈糖的。我想到了BE256這支被歸成比利時但是是POF-的酵母，不過手上沒有，就用了手邊有的英式酵母wyeast 1968。然後，我終於釀出接近我理想中的Belgian Golden Strong Ale。參考： Yeast, The Practical Guide to Beer Fermentation, by Chris White with Jamil Zainasheff." }, { "title": "Chico酵母", "url": "/posts/chico_strain/", "categories": "釀酒筆記", "tags": "", "date": "2024-10-31 14:50:35 +0000", "snippet": "Chico是位於加州首府Sacramento北方80多英哩的一個小城市，Sierra Nevada就成立於這座城市，Sierra Nevada也把他們用的酵母暱稱為Chico，而自從1980年推出的Sierra Nevada Pale Ale大為成功，開創了American Pale Ale類型的流行，Chico strain也跟著流行了起來。有人說Sierra Nevada的酵母是從Bal...", "content": "Chico是位於加州首府Sacramento北方80多英哩的一個小城市，Sierra Nevada就成立於這座城市，Sierra Nevada也把他們用的酵母暱稱為Chico，而自從1980年推出的Sierra Nevada Pale Ale大為成功，開創了American Pale Ale類型的流行，Chico strain也跟著流行了起來。有人說Sierra Nevada的酵母是從Ballantine酒廠得到的，不過據Sierra Nevada的人表示，他們是從西貝爾實驗室(Siebel Institute)買來的。而出自同樣Siebel Institute BRY-96的酵母就被稱為Chico Strain，包含了 Wyeast WY1056 White Labs WLP001 Fermentis US-05 RVA Yeast Labs RVA-101 Imperial Flagship A07 Omega OYL-004 Lallemand BRY-97 Mangrove Jack’s M44 Bootleg Biology BBUSA1 GIGAYEAST GY001所以說，這些酵母都是一樣的嗎？很遺憾的，沒有簡單的答案。只能說他們都很接近，但不完全一樣。有很大的機率沒有差異，但可能在某些特定的條件下，例如味覺比較靈敏的人，可以感覺到差異。因為酵母事實上是想像中還容易產生變化的生物，同一個來源在經過幾代後可能會有有些微的基因變異，在參考二有提到一篇論文，針對常見的Chico strain做基因定序，探討酵母基因的(不)穩定性；其中光不同年份的US-05有有些微的差異，而其中WLP001確實和其他US-05, Wy1056等常見的Chico Strain在不同的分支上。這符合在有些人的感覺：雖然有很大部份人認為都一樣，有些人認為WLP001和其他的有所不同。Brulosophy針對Chico Strain有三個實驗，分別是 比較 結果 連結 WLP001 vs US-05 15/23 可分辦 link US-05 vs Wy1056 5/20 無法分辦 link US-05 vs. bry-97 6/15 無法分辦 link 單看結果，WLP001還真的和其他的不一樣。常常有人覺得US-05有一個桃子味。US05也算是我用過最多次的乾酵母，個人覺得US05的確有一個特別的味道，我不太確定是不是桃子味，我的直覺是”乾酵母”味，可能因為我用最多的乾酵母就是US05，所以把它的這個特殊風味認為是乾酵母味。Lallemand BRY-97是除了US05外比較多人用的乾酵母，評價不差，但據說lag time比較久，使用的話要有耐心。WLP001應該是最受歡迎的，而White Lab也推出了WLP001的乾酵母，不過定價十分昂貴，和液態酵母的價格差不多。Homebrewtalk.com有幾個討論串，幾乎一面倒地認為太貴了，沒幾個人認真的討論乾的版本是否和液態酵母一樣。不過，有人做了簡單測試，比較 US-05、乾WLP001、液態WLP001、MJ M44、Apex San Diego Dry Ale，結果是液態WLP001最多人喜歡得到9分，而乾WLP001只有5分，比US-05的6分低一分。參考： The Complete Guide to the Chico Strain of Yeast Discuss of “Genomic stability and adaptation of beer brewing yeasts during serial rep itching in the brewery” on HBT exBeeriment WLP001 vs. US-05 exBeeriment US-05 vs. Wy1056 exBeeriment US-05 vs. BRY-97" }, { "title": "我的自釀器材", "url": "/posts/My_Brewing_Geer/", "categories": "釀酒筆記", "tags": "", "date": "2024-10-20 00:00:00 +0000", "snippet": "自釀發表會時有好幾個人問我的器材，雖然問的人不一定看到這裏，我還是分享一下。麥汁製作主要設備20L的Braumeister加上我自己做的控制器。我添購了Braumeister的10公升內桶，另外還買了BacBrewing的過濾網。疫情後酒消耗速度變慢，加上我比較喜歡各種不同的酒款，所以現在以10公升批次為主。只有可能會放一年的類型會釀20公升，但其實很少。其他設備一個10公升左右的婦品鍋，用...", "content": "自釀發表會時有好幾個人問我的器材，雖然問的人不一定看到這裏，我還是分享一下。麥汁製作主要設備20L的Braumeister加上我自己做的控制器。我添購了Braumeister的10公升內桶，另外還買了BacBrewing的過濾網。疫情後酒消耗速度變慢，加上我比較喜歡各種不同的酒款，所以現在以10公升批次為主。只有可能會放一年的類型會釀20公升，但其實很少。其他設備一個10公升左右的婦品鍋，用來釀測試的5公升批次，因為我的實驗性質的失敗率很高，為了減少浪費就釀4~5公升。這個批次大小就是BIAB，不過目前溫控沒有調整得很好。感想我用過保溫桶作的糖化桶、Grainfather、自己土炮的BIAC (直接在發酵桶糖化煮沸)、一般的BIAB。如果重新選的話，現在市面上的一體機都是很不錯的選擇，重點在熟悉適應器材，最終的產品幾乎沒有影響。另外，我還是會考慮買20公升但可以釀10公升的器材。以前家釀的標準批次是20公升，這幾年有下降的趨勢，不過5公升真的太少了，所以10公升是不錯的”小”批次。我這台Braumeister是很舊款的、二手的，它的控製器壞了，剛好我一直都在玩自己做的控制器，所以剛好買下來改裝。這個控制器其實對成品影響也不大，就像從台北開車到高雄，手排、自排、輔助駕駛，最終都是到達同樣的目的，差別只是過程感受有點不一樣而己。發酵設備主要設備發酵桶是我在淘寶買的一個底部是衛生級接頭(tri clamp)的15公升不鏽鋼漏斗，我請廠商在蓋子上挖兩個洞，然後自己買了蝶閥和Blichmann的酵母收集球，後來又找人焊了三支腳，就成了一個錐桶。溫控我是用一個二手紅酒櫃加上自製的溫控器。（這個說明是ESP8266的，我最近改用新版用觸控介面的BrewPiLessGx，不過核心是一樣的。）我現在用Kegland的無線比重器Pill來監控比重變化。其他設備在釀20公升的時候我用的是Spike CF10。我另外有一個加熱墊，寒流來時，有時候會用PP桶當發酵桶放在低於20度的室外，用加熱墊和自製的溫控器的來溫控。感想錐桶的主要優點是排渣，但其實我並不是太在意排酵母，主要是排酒花。另外，因為形狀的關係，錐桶的對流會比較旺盛，所以發酵速度會快一點點，啤酒風味會比較乾淨。在20公升的等級，我確實有觀察到錐桶的發酵速度會比較快一些，主要是發酵旺盛期會短個半到到一天：3天和3.5天的差異。在10公升這麼小的批次有多少影響，我是有點懷疑的。不過，再怎麼說，有選擇勝過沒得選，雖然不是每次都需要，但想排渣就可以排，還是很棒的。使用冰箱溫控的話，BrewPi的PID演算法是最好的家釀溫控系統，沒有之一。根據我的經驗，沒有用風扇對流的話，冰箱的上半部和下半部溫差非常大，以我的紅酒櫃來說，有超過8度以上的溫差，有用風扇會改善很多，但如果風扇不夠力，還是會有一點溫差，所以溫控冰箱內的溫度，光測溫點在哪裡就是一個問題。你或許會問，啤酒不會有溫差嗎？會的，在還沒發酵和發酵結束時，如果有溫度變化就會有溫差，但在進入發酵旺盛期，二氧化碳氣泡造成的對流會讓溫差消失。在我的發酵記錄中，Aux Temp就是無線比重計的溫度，在幾乎所有的紀錄中，發酵前和冷降時的數據都用用溫測器量的Beer Temp有比較大的差異，但在進入高泡期後差異就會變得很小。我因為發展BrewPiLess，有一位網友送了我一支iSpindel，開始使用後，我覺得這種無線比重計開啓了家釀的新時代。我從2017年開始使用iSpindel，因為是DIY的，在瓶口的密合度總是很擔心，最終弄壞了三、四支後，發現Pill的藍芽協定有公開資料後，轉而使用Pill。總體來說，我會推薦Pill，細節太多留待他日再說。當然無線比重計最大的優勢和用途就是隨時監控比重的變化，在我的使用情況下（包括iSpindel和Pill），我可以在接種的12小時以內、在還沒看到水封的泡泡前，就看到比重開始下降的趨勢，比方說在6小時的時候，可以看到下降了0.0005；在高泡期結束，發酵速度變慢時，可以很明顯的看到比重變化的轉折，必要時可以拉高發酵溫度；在發酵後期，我可以觀察到例如3天降低0.0005的比重變化，這個差距用我的比重計是看不太出來的。包裝主要是裝瓶。為了減少接觸氧氣，我用DIY的加糖器（#1,#2,#3）直接把糖水加到瓶子中，然後啤酒直接從發酵桶進瓶子。感想我用過keg，也試過等壓裝瓶，但等壓裝瓶我用得不是很穩定，所以目前還是裝瓶瓶發。其實我也是還沒完全放棄等壓裝瓶，尤其是拉格酵母的沈絮性很差，很容易揚起，本來是清澈的啤酒倒出來是混濁的，心情都變差了。其他乾投工具Kegland Hop Bong1.5吋。這個當然要配合發酵桶有Tri Clamp才能用，我的DIY小發酵桶有請廠商在蓋子上挖一個41mm的洞，裝上一個Tri Clamp轉接頭，就可以用這個Hop Bong。如果是20公升批次的，可以考慮買2吋的，再加一個1.5吋轉2吋的頭，容量會大一些。" }, { "title": "筆記：酯類與發酵", "url": "/posts/note_of_ester/", "categories": "釀酒筆記", "tags": "", "date": "2024-04-11 14:50:35 +0000", "snippet": "（這篇文的筆記，不是翻譯。因為有太多看了頭痛的化學名詞，所以用把幾個一直出現的化學名記翻成中文-只是好像也沒有比較容易懂…）-乙醯輔酶A（acetyl-CoA）-酰基輔酶A（acyl-CoA）酵母會產生酯類是在啤酒發酵過程中，酵母細胞內的酸和酒精反應所產生的。這些酯類可以分成兩群： 高級醇和 乙醯輔酶A（acetyl-CoA）/醋酸 反應而成的 乙酸酯（accetate esters）Fu...", "content": "（這篇文的筆記，不是翻譯。因為有太多看了頭痛的化學名詞，所以用把幾個一直出現的化學名記翻成中文-只是好像也沒有比較容易懂…）-乙醯輔酶A（acetyl-CoA）-酰基輔酶A（acyl-CoA）酵母會產生酯類是在啤酒發酵過程中，酵母細胞內的酸和酒精反應所產生的。這些酯類可以分成兩群： 高級醇和 乙醯輔酶A（acetyl-CoA）/醋酸 反應而成的 乙酸酯（accetate esters）Fusel Alcohol Esters 乙醇和 酰基輔酶A（acyl-CoA） 反應而成的 乙基酯（ ethyl esters）Fatty Acid and ethanol Ester一般相信酵母產生酯類有兩個原因： 吸引昆蟲以利傳播 可分解對酵母來說是有毒的高質酒精和醛類這兩種酯類都是在酵母細胞質內產生，然後滲透出細胞膜到啤酒中。增加氧氣會增加兩者的產生；乙酸酯（accetate esters）是一般發酵最常見的，而 乙基酯（ ethyl esters）的多寡受酵母品種影響。結論增加酯類的作法： 增加溶氧 正確的鋅及鎂含量增加酯類也可能產生不良風味的作法： 加增FAN 比較低的接種率 活性差的酵母 高比重麥汁 重複使用酵母(repitching)增加酯類含量 溫度：偏高或低或上下變化 糖（蔗糖或葡萄糖）減少酯類 發酵中增加CO2溶解量增加（高的發酵桶或壓力發酵） 低氧氣（也會導致比較多的高質酒精和醛） 比較高的接種率乙酸酯（accetate esters） 乙酸異戊酯（Isoamyl acetate）：香蕉味（德式小麥） 乙酸異丁酯（Isobutyl acetate）：普通酯類（英式） 乙酸苯乙酯（2-phenyl ethyl Acetate）：花香（拉格） 乙酸乙酯 (Ethyl acetate)：梨子/溶劑（比利時及其他）乙酸酯（accetate esters）是由高級醇和 乙醯輔酶A（acetyl-CoA）或醋酸，增加這兩個”原料”就可能增加這種酯類的產生。 增加乙酸酯（accetate esters）乙醯輔酶A（acetyl-CoA）是細胞代謝的必要物質，在有氧的情況下會比較多。它是由叫分解酯肪酸叫Beta-Oxidation的過程中產生的，如果有比較多的酯肪酸（存在麥汁中或酵母產生），就會有比較多的乙醯輔酶A（acetyl-CoA）和高級醇反應成乙酸酯（accetate esters）。在Beta-Oxidation和酯化反應中都需要鋅和鎂作為觸媒。 增加高質酒精不建議增加高質酒精。雖然感覺不到，通常啤酒中已經有夠多的高質酒精可以和乙醯輔酶A（acetyl-CoA）反應。 增加乙酸酯（accetate esters）的作法： 增加氧氣 正確的鋅和鎂 加糖。機制不明，但據說如此。乙基酯（ ethyl esters） 己酸乙酯 (Ethyl hexanoate)：茴香或蘋果 辛酸乙酯 (Ethyl octanoate)：酸蘋果 丁酸乙酯 (Ethyl butyrate)：鳳梨乙基酯（ ethyl esters）是由乙醇和 酰基輔酶A（acyl-CoA） 反應而成，更多的”原料一樣會產生比較多的酯，不同的是，酰基輔酶A（acyl-CoA）是乙醯輔酶A（acetyl-CoA）和脂肪酸結合而成，不同的脂肪酸會產生不同的酯類。脂肪酸是在細胞內產生的，雖然酵母吸收環境中(麥汁)的脂肪酸，但這些脂肪酸並不直接在產酯上沒有什麼直接作用，不同的酵母會產生不同的脂肪酸，也就會產生不同的乙基酯。影響脂肪酸的合成比就可以影響乙基酯的產生。如何增加脂肪酸的合成？簡單地說：氧氣、鋅、鎂、其他極少的營養及健康的酵母。 充足的乙醯輔酶A（acetyl-CoA）：健康的酵母和很多氧氣 正確的金屬離子，包括鋅、鎂、銅、鐵等等 游離磷酸對乙基酯（ ethyl esters）很重要，但機制不明；加入糖化的酸休止 (35–45 °C)可能有幫助。 據說麥汁中的渣(trub)比較多可能會增加乙基酯（ ethyl esters）。如何控制酯類產生 足夠的氧氣 正確量的營養 提高發酵溫度 如果因為發酵溫度提高而產生了比較多的高質酒精，有可能是氧氣量不夠。 游離胺基酸(FAN)的量 游離胺基酸是產生高質酒精所需要的，也就是產生乙酸酯（accetate esters）所需要的，比較高的游離胺基酸會產生比較多的高質酒精，如果有正確的充氧，大部分的高質酒精會變成 乙酸酯（accetate esters）；反之如果提高了游離胺基酸卻產生了大量的高質酒精，表示充氧不足。 單糖（及蔗糖）會增加酯類 使用回收酵母會增加酯類七夜怪譚我加了更多氧氣但覺得酯類減少了，怎麼回事？有兩個可能： 你之前覺得是”酯類”的其實不是真的酯類 如果是這樣，表示之前的氧氣不夠，你認為的”酯類”可能是醛或高級醇 產生了更多種的酯類，但每種酯類的含量都偏低 酯類需要一定的濃度才能被感受到，雖然因為充氧產生了比較多酯類，但種類變多了，每種的濃度反而降低了。 德式小麥 一直有人說比較低的溫度增加了香蕉味，香蕉味的來源是乙酸異戊酯，是由異戊醇（一種高級醇）和乙酸合成的。參考： https://escarpmentlabs.com/blogs/resources/decoding-ester-production-in-yeast-fermentation" }, { "title": "Koji", "url": "/posts/koji/", "categories": "釀酒筆記", "tags": "", "date": "2024-04-11 14:50:35 +0000", "snippet": "一麹・ニ酒母・三造り麴之錬金術 分散孢子：1:10， 1克孢子使用10克介質（麵粉、米粉）。 帶上口罩，避免空氣流動 小心剪開包裝，捏緊開口，將袋子完全放入罐底後再倒出孢子。確認孢子落定後輕柔取出袋子。 加入介質，輕輕覆蓋孢子。覆蓋住後即可將介質全部倒入 緊蓋搖晃混合。 如不馬上使用要乾燥及冷凍保存 平鋪米飯最好不超過...", "content": "一麹・ニ酒母・三造り麴之錬金術 分散孢子：1:10， 1克孢子使用10克介質（麵粉、米粉）。 帶上口罩，避免空氣流動 小心剪開包裝，捏緊開口，將袋子完全放入罐底後再倒出孢子。確認孢子落定後輕柔取出袋子。 加入介質，輕輕覆蓋孢子。覆蓋住後即可將介質全部倒入 緊蓋搖晃混合。 如不馬上使用要乾燥及冷凍保存 平鋪米飯最好不超過3.8公分，超過46度C，麴菌會開始死亡。 比例是1g麴菌1公斤米飯。 培麴最佳溫度為30度C(產生比較多蛋白質酶)和35度C（產生比較多澱粉酶） 基本米麴培養指南 浸水至少8小時 放涼至36度左右 混合麴種（1g對1kg米） 平鋪米，最好不超過2.5~4公分 30度C培養 12小時後取出攪拌後再鋪平 12小時後取出攪拌後堆成丘 完成或重複7 麴種種類 （清酒）Hikami吟釀（米麴菌）：比較多澱粉酶，比較少蛋白酶 （清酒）Kori（米麴菌）:香氣迷人。 （燒酎）大麥用本格燒酎菌（琉球麴菌）：檸檬酸和酵產量高；用米飯則酵素依然極高，但檸檬酸會降低。 （燒酎）黑麴菌（泡盛變種麴菌）：有獨特酒香；用米飯培養會產生和琉球麴菌一樣多的檸檬酸，但用大麥則降低。 （味噌）米味噌用BF1號菌（米麴菌）：適合淡色味噌和甘酒。澱粉酶多，蛋白質酶也多。 （味噌）米味噌用BF2號菌（米麴菌）：適合淡色味噌和赤味噌。 （味噌）麥味噌用菌（米麴菌）：適合赤味噌和甘味噌。這個變異種能引出大麥或黑麥等穀物的土質味。 （味噌）豆味噌用橋本菌（米麴菌）：有芒果香；澱粉酶中等，蛋白酶效果強。 （味噌）米味噌用白Moyashi菌（米麴菌）：白色孢子，適合甘酒和鹽麴。比較不會有顏色和異味。 （醬油）9號醬油麴菌（醬油麴菌）：適合淡色醬汁。蛋白酶產量最高，孢子產量低。 （醬油）12號醬油麴菌（醬油麴菌）：適合淡色醬汁。有芒果和鳳梨的香氣。 （醬油）Hi醬油麴菌（醬油麴菌和米麴菌）：用醬油麴菌和米麴菌混調配而成。甘酒 澱粉(米飯)：麴：水＝1:1:2 55-60°C下10-14小時鹽麴 麴:水＝1:1 鹽為混合物總重的5% 在室溫下接觸空氣，每天攪拌1～2次，連續7天即成。brewsake.org 培麴要素：溫度、濕度、氧氣。 比較高的溫度澱粉酶強，比較低的溫度蛋白質酶強。 第一天濕度需要比較高，接著降低濕度可以迫使菌絲向米中心伸展。 煮的米濕度太高，且容易黏成一團，不適合做麴。cheatsheet 準備 量重量；吸水量目標為30-32% 洗米：最好控制在5分鐘以內，尤其精米比較多的情況下。 浸漬：用冷水浸泡。目標吸水30-32%。 ザル上げ：排水。 からしい：將米晾乾，去除表面水。可能需要４５分鐘到10小時。 蒸米，　45分到1小時。米要外硬內軟。 冷卻；冷卻45°C，到35-40°C會比較安全 接種：在40°C以下接種。在降到30°C以前完成，然後包起來。 相對濕度80-90%，培養室29-30C(麴溫會在34-38C)，維持12-18小時。不要超過40C. 12-18小時 切り返し 攪拌。攪拌後升到32°C。 24小時 降低濕度到50-70% 盛り：如果麴溫升到36C，攪拌降溫到30-34°C。應該10-20%的米會有菌絲。 28-36小時 仲仕事：麴溫升到38.5°C時，攪拌。 30-50%的米會有菌絲。 溫度應該會降到32-36°C 32-34小時 仕舞仕事：當升溫到40°C時，最後一次攪拌。 60-80%的米會有菌絲。 溫度應該會降到36-39°C 做出”花道”幫助散熱及接觸氧氣。 維持40-43°C 48-60小時 出麴。 製麴名詞： 日文 漢字/中文 取込み / 引込み 在33-36°C將放涼的米飯鋪到養麴的板上。 床揉み   參考： http://www.kojiwiki.com/index.php/Koji_making_for_sake_glossary" }, { "title": "清酒釀造", "url": "/posts/SakeBrewing/", "categories": "釀酒筆記", "tags": "", "date": "2024-03-08 14:50:35 +0000", "snippet": "年初去了日本越後湯沢，在越後湯沢駅的清酒試飲試了幾款，驚艷於清酒的的風味，對釀造過程感興趣，便稍微找了一些網路上的資訊來看。關於清酒的的釀造過程，網路上的資訊多如牛毛，但幾乎都是從”飲者”的角度出發，實務釀造-簡單來說，就是數字-反而在英文的網站比較多。可能是因為日本禁止自釀或我沒去找看不懂的日文，而中文的世界喝的人遠比釀的人多，而釀的人也不太需要從網路上汲取資訊。釀清酒和自發麥芽一樣列入我...", "content": "年初去了日本越後湯沢，在越後湯沢駅的清酒試飲試了幾款，驚艷於清酒的的風味，對釀造過程感興趣，便稍微找了一些網路上的資訊來看。關於清酒的的釀造過程，網路上的資訊多如牛毛，但幾乎都是從”飲者”的角度出發，實務釀造-簡單來說，就是數字-反而在英文的網站比較多。可能是因為日本禁止自釀或我沒去找看不懂的日文，而中文的世界喝的人遠比釀的人多，而釀的人也不太需要從網路上汲取資訊。釀清酒和自發麥芽一樣列入我未來想做的事情之一，就把一些找到的資訊（數字）整理一下。清酒的釀造分成兩個階段，第一階段是養”酒母”（酛），類似yeast starter（有些英文網頁就直接用這個詞），雖然有生酛或山廢這種很炫的做法，初學或家釀大多是用速釀，也就是加乳酸和酵母。 第二階段是做醪，也是主要的釀造，標準的流程是分四天三次添料（第二天休息），每次投料的量是前次的兩倍左右。酒母階段就是培養酵母，又加上分次投料，酵母的初始接種率常常沒有提到（考慮到生酝，沒有什麼接種率的概念。），以家釀的量，可能酒母是非必要的，但酵母的接種率會影響風味。清酒的主要材料麴、米、水、酵母；前三者的比例一般是25:100:160，麴比例不少於15%，也可能高達35%，可以視為「酒譜」的參數。BrewSake.org的水通常都用130%。如果以米的含水量通常是30%算會剛好是160%，但這個數據的來源真的就用160%。原料準備 水 軟水會比較柔和，硬水比較有礦物感；不過很多家釀說明都強調用軟水。 鐵離子是絕對要避免的。 米 精米步合和米的選擇網路上很多資訊；除了吟釀以上及比賽用酒，其實很也常用一般的粳米。 傳統的做法用蒸的，而不是用煮的；用煮一般含水率較高，另外用蒸的，米比較不會黏在一起，麴比較容易吃進去。含水率理論上會影響最後的酒精度，對風味也有些微的影響。據說酒廠會嚴格控制含水率，但家釀似乎比較不在意。 泡冷水 8 - 12 小時（放冰箱），吸水率約 25% - 35%；據這個網頁說明，60%精米步合泡1小時，普通煮飯的白米約90%精米步合泡兩小時就差不多了。 晾乾一個小時。精確控制含水率。 蒸45～60分鐘，會另外吸收 10% 水份。 放涼後製麴或添料. 放涼後含水率會降低 用煮的日文叫「融米造り」或「姫飯造り」，也有網頁說含水率不會差太多的。 搜尋「融米造り」會找到是月桂冠採用的一種先把米糖化的做法，不確定是舊詞有新意或是上述定義有誤。 做麴用的「麴米」和主釀造用的「掛米」在要求上會有些不一樣。感想：如果水份能掌握，掛米用煮可能不會差很多，反正加水後也不怕結塊。 麴 麴製法並不難找，但直接購買現成的是比較簡單的做法。 酵母 生酛系的基本是野生酵母，日本雖然有一些協會酵母，自釀最容易找到的是協會7和9號。 協會7號(kyokai no.7)「真澄酵母」: WLP705:使用最多的酵母，從本釀造到吟釀都可以用。 協會9號(kyokai no.9)「熊本酵母」；WLP709，wyeast 4134:比較多用在吟釀，YK35(山田錦、熊本酵母、35%精米步合)是著名的得奬公式。 酵母營養 浴塩(硫酸鎂) 氯化鉀（Morton’s Salt Substitute） 流程： 酒母或酛 約 6.66%或取整數7%的麴/米/水 有些酒譜會先用比較高比例的麴，例如酒母用30%，初添用25%，留添用18%。 酵母接種率通常是用全部用米的數量算（每公克米多少酵母）： 依這裏的說明，酒母最終的酵母量是 10^8個/ml 乳酸：目標pH值在3.6~3.8， 3.0~3.5可能更好？論文(待研究) 650ml~700ml 每100公升糖化水 7~14天。（家釀版的大多說7或8天，但pro版的會說14天；生酛要28天） 省略酒母階段，直接把酵母和乳酸和初添一起投入的的釀造叫做「酵母仕込」。 「酵母仕込」的接種率一般是 400-600g酵母每1000kg米（全部的米），乳酸添加量則是300-500ml每100公升水。 高溫糖化酒母，又稱甘酒速釀 用料： 100kg 米 ： 50kg 麴米 ： 270-300L水 維持55～58°C 5～8小時 降到 40°C，加乳酸 25°C接種 20°C發酵5~6天 製醪或主釀造 初添：13.33%或取整數13%的麴/米/水 踊：休息 仲添：26.66%或取整數30%的麴/米/水 留添：53.33%或整數50%的麴/米/水 發酵時間約14~28天或更久 發酵溫度 4~15度。似乎會先低溫再升溫。 依A/B line(酒精度/波美度)的線形調整溫度或加2%以下的水。 發酵後期也有為了增加甜味，加入己經糖化的糯米，稱為「もち米四段」（四段糯米?） 用比較粗的過濾就會成為「濁り酒」(Nigori sake) 最後的酒精度可以最高達20%~22%，為了易飲性通常會調整到18%。網路上找到簡單的釀造方式一次把所有料和酵母加進去的做法，有人稱之為どぶろく(Doburoku)，這是一個冷門的詞彙，沒有找到漢字或中文翻譯，曾經是日本的家釀方式，但在明治時期禁止私釀的法規下，只剩下少數的寺院以祭祀的名義可以合法釀造。不過近年來有復甦或再起的跡象，已經有一個Japan Craft Sake Association想推廣這個做法，並增加許多變化。另外，也有人將「一段仕込」的做法稱為どぶろく，而私釀通常只會除去酒粕不會過濾巴殺，所以也有把沒有過濾巴殺過的酒稱為どぶろく的。在sakebrewing.org中把一次加料和酵母的做法稱之為 One step wonder，如果套用術語，應該稱為「酵母仕込、一段仕込」。英文/漢字對照表： 英文 漢字/中文 ginyo 吟釀 daiginyo 大吟釀 shubo 酒母 moto 酛 sokujo 速釀 yamahai 山廢 kimoto 生酛 moromi もろみ(醪) hatsuzoe 初添 odori 踊り nakazoe 仲添 tomezoe 留添 nigori 濁り seimai buai 精米步合 參考： 2加侖三段加料 2~3升Doburoku釀法 https://www.homebrewtalk.com/threads/brewing-sake-for-beginners.678671/ https://www.homebrewtalk.com/threads/homemade-sake-making-koji-rice.679251/ https://www.houraisen.co.jp/zh/sake-brewing-c.html https://japansake.or.jp/sake/en/professional/sake-brewing-processes-flavor/ https://homebrewsake.com/preparing-your-rice-for-sake-brewing/?doing_wp_cron=1709794799.1275548934936523437500 灘酒研究會-用語集 高溫糖化酒母" }, { "title": "美索不達米亞風格", "url": "/posts/SumarianAle/", "categories": "釀酒筆記", "tags": "", "date": "2024-02-06 14:50:35 +0000", "snippet": "最近在Youtube上滑到一個釀造4000年前蘇美人的啤酒的影片，片中介紹了從考古中得到的關於4000年前，蘇美人留下關於啤酒相關的資料，他根據這些有限的資訊，釀出了啤酒。這個影片非常有趣。我稍微google了一下，有不少人做同樣的事。由於沒有找到一個真正完整的配方，可能對古蘇美楔形文字的解讀不完全，每個人的做法都有一些出入。不過，所有人都同意，根據酒神讚歌的說明，主要材料是麥芽、bappi...", "content": "最近在Youtube上滑到一個釀造4000年前蘇美人的啤酒的影片，片中介紹了從考古中得到的關於4000年前，蘇美人留下關於啤酒相關的資料，他根據這些有限的資訊，釀出了啤酒。這個影片非常有趣。我稍微google了一下，有不少人做同樣的事。由於沒有找到一個真正完整的配方，可能對古蘇美楔形文字的解讀不完全，每個人的做法都有一些出入。不過，所有人都同意，根據酒神讚歌的說明，主要材料是麥芽、bappir、以及椰棗糖漿。儘管如此，bappir是什麼東西卻沒有人知道，普遍認為是麵粉做成的類似麵包的東西，有的則稱其為啤酒麵包。因為實在有趣，不禁讓人想試著釀釀看4000年前的蘇美口味啤酒。只不過，個人以為，去找尋一個完整而詳細的配方是沒有意義的，因為這就好像在幾千年後，要找一個粽子的配方一樣；並不是說沒有配方，而是存在著各式各樣的做法，只要是米用葉子包起來的，大約都有人會稱之為粽子。同樣地，在4000年前，有多少蘇美人釀啤酒，大概就會有多少種”配方”，或者更多。只要風味感受在眾人可以接受的範圍，就可以稱之為啤酒了。再說回來，現在我們可以取得的原料跟當時大約是不一樣的，而且現代人的口味肯定跟當時的人不一樣，”重製”或復原4000年前的啤酒也不太實際。所以我想做是以蘇美人的配方精神，用現代釀酒技術做出來的啤酒。材料方面，首先是麥芽。在酒神讚歌中有發麥芽的說明，一些youtube的影片都是從發麥芽開始做起。從描述的酒的顏色是金黃色，加上考慮到自烘麥芽的烘焙程度控制難度，我認為當時有的人會用像是Wind Malt一樣自然風乾的麥芽是有可能的，而即使有進行烘乾，大概也是淺淺地烘烤，當然應該是毎個人烘得程度都不一樣；做為一位家釀者，採用烘烤程度最低的pilsner malt就簡單地解決了。神秘的bappir，大部份人都認為是類似麵包，用麵粉加水，再加一點酵母及很少量的糖發酵後烤製應該就差不多。加糖是給酵母吃，而如果不使用酵母或至少進行發酵，純麵團烤出來會是一個硬塊，要撕成小片糖化會有點難處理。烘烤的動作除了熟化麵粉有利糖化，也會增加梅納反應物，讓成品有”烤麵包”風味。直接使用現成的麵包我覺得可能是會有一些問題的，因為即使是最單純的麵包，也幾乎都都有加奶油和塩，我認為這兩個對啤酒風味都有負面的影響。最後的的原料是椰棗糖漿和蜂蜜，我認為這是是當時的人少數能取得的糖，如果有蔗糖，他們八成會用蔗糖。因為椰棗乾很容易買到，所以原本打算在煮沸時加入一些椰棗乾，增添風味。不過，後來實際買了一包椰棗乾來吃，覺得風味其實很淡，隱約的梅納和焦糖風味不是太明顯，差不多是二級砂糖的程度，所以決定省略椰棗乾。有需要的話，加點淺色的水晶麥可能也是不錯的替代方案。4000年前的人肯定不知道酵母，所以也不會有說明。有些人認為bappir可能是類似酸麵包，所以有酵母，或者就是自然發酵。在酒神讚歌中有提到加酒，當時的酒是蒸餾酒的可能性和發現外星人提供酵母的可能性差不多，是釀造酒的可能性很高，酒中也就有可能還存在酵母。不過，依現代的技術，使用酵母會是比較合理的做法。考慮到比利時酵母是最接近野生酵母的，所以考慮使用比利時系的酵母。回頭看了一下原料：麥芽加小麥麵粉做的麵包，看起來就是把麵粉烤過的比利時小麥啤酒的原料，所以比利時小麥啤酒酵母就成了理所當然的選擇。決定了比利時小麥啤酒的方向後，就要考慮到香料。蘇美人沒有理由完全不加香料，只是不清楚會用那些。依照我的猜想，當時他們能取得的都可能會有人用。既然是比利時小麥，芫荽籽是理所當然的選擇。雖然古代蘇美人不太可能會用啤酒花，現代的啤酒卻缺不了酒花，所以還是使用少量的酒花，但苦度設定在很低程度。因為描述上，喝起來是會覺得甜的，所以除了糖化溫度略高外，苦度也要儘量低。結論是一個把小麥替換成烤麵包的比利時小麥：OG: 1.050FG: 1.012IBU: 10穀類： Pilsner Malt 60% Wheat malt 20% 麵粉 20%酒花： Saaz 60min, 8~10IBU其他： 芫荽籽 少許，最後5分鐘酵母： WLP400糖化 麵粉加水及速發酵母，少許糖，做成麵包 麵包撕成小片加入麥芽糖化 糖化溫度 68 度發酵： 18度接種，緩步升溫至22度。製作過程：首先麵粉應該要用全麥的，不過因為懶得去買，就用了低筋的，因為不是真的想做土司，所以不用高筋麵粉。我有台小麵包機，所以可以方便地用麵包機來做土司，也因為不想度攪拌產生筋性（這是什麼原理我不太了解），所以用手動的行程，先發酵2小時，然後烤40分鐘。不知道是速發酵母加太少還是其他原因，做出來像「發糕」，中心是鬆軟的，但並沒有膨脹得如同平常一樣。另外，不知道是不是蛋白質比例比平常少（一般會加奶油或牛奶），梅納反應不如正常土司。其他釀作過程，除了把麵包撕成小塊，就如同一般的釀酒行程；不過，在撕麵包的過程中發現麵包皮有點硬，很難弄成很小塊，下次應該用果菜汁機打碎比較好。煮沸前去吃完午餐回家前，在超市看到了熊本的橘子，順手買了回來，心想不如就削些皮加了進去；於是就更像比利時小麥了。發酵結束後，因為沒有用椰棗乾，所以決定瓶發使用二級砂糖。在我剛開始自釀時，聽前輩說用二砂會有酸味，我一直很好奇，反正如果是4000年前的家釀技術，帶點酸味才正常。說最後出現的：味道就是熟悉的比利時小麥酵母-或者說WLP400-風味還帶點甜甜的感覺；完全沒有麵包的感覺，就一般的比利時小麥，不過味道還不錯。沒有明顯的酸味，在WLP400的資訊中有寫到pH值可能會比英式啤酒還低，但沒有明顯的酸感。有一點像1664的味道，這個類似1664的味道我之前有有釀出來過一次，但後來想重現卻沒有成功，香料風味強弱是我一直沒辦法掌握的。總而言之，這是個有趣的經驗，雖然烤吐司的風味不明顯，倒也是一種糊化麵粉的方式，可以列為下次做比利時小麥的做法之一。參考： 酒神(Ninkasi)讚歌" }, { "title": "Open Fermentation-開放式發酵", "url": "/posts/OpenFermentation/", "categories": "釀酒筆記", "tags": "", "date": "2023-12-31 14:50:35 +0000", "snippet": "雖然現代大部分的都採用密封式發酵桶，甚至就如同常識般，發酵時要隔絕外面的空氣，但在漫長的啤酒歷史中，密閉的不銹鋼錐形桶只有100~200年左右的歷史，在此之前，Open Fermentation是普偏採用的方式。相對於使用密閉的錐桶會得到比較乾淨的風味，Open Fermentation據說會展現出比較多酵母風味，也就是比較多的酯類和酚類。即使在今日，仍有一些的酒廠會採用Open Ferme...", "content": "雖然現代大部分的都採用密封式發酵桶，甚至就如同常識般，發酵時要隔絕外面的空氣，但在漫長的啤酒歷史中，密閉的不銹鋼錐形桶只有100~200年左右的歷史，在此之前，Open Fermentation是普偏採用的方式。相對於使用密閉的錐桶會得到比較乾淨的風味，Open Fermentation據說會展現出比較多酵母風味，也就是比較多的酯類和酚類。即使在今日，仍有一些的酒廠會採用Open Fermentation，例如著名的Pilsner Urquell。Russian River和Siera Nevada也是擁有、也會使用Open Fermentation設備。（以及已經關閉的Anchor Brewing。）除了發酵容器不密封以外，相對於瘦高的錐形桶，Open Fermentation通常用的是比較扁平的容器，在這種條件下，接觸空氣的面積比較大，而且水壓也比較小。以發酵條件來說，和密封式的發酵相比，Open Fermentation主要差異在於：1、接觸空氣，酵母能接觸氧氣。2、發酵桶的形狀。對大部分的酵母，提供氧氣確實會產生比較多的乙酸酯和乙基酯。發酵桶的形狀似乎是一個很複雜的問題，有個說法是比較淺的發酵桶，二氧化碳比較不會把風味帶走，但另一個說法是比較淺、相對面積比較大的發酵桶有利於揮發性物質揮發；另外就是比較高、深的發酵桶形成的壓力會抑制酯類的產生。不過，發酵產生酯類的成因本身就是一個變數很多的複雜問題，難以深究。大致而言，就是Open Fermentation會有比較多的酯類。儘管在兩百年前，不管使麼類型的啤酒都是用Open Fermentation，對家釀來說，最有興趣採用Open Ferementation的類型，大概就是強調酵母風味-主要是酯類和酚類-的德式小麥以及Saison了，尤其是徳式小麥是網路上找到家釀嘗試Open Fermentation的最常看到的。在Homebrewtalk.com上，就有一篇對照實驗，原PO還把結果送到實驗室化驗各種酯類的實際數據：大部分都差距不大，但乙醛和辛酸乙酯則相差甚多，前者都在人能夠感測的範圍內，後者則是都超出感測的範圍。Brulosophy針對Open Fermentation做了多個對照實驗，包括APA(7/23：無法分辦)、Czech Premium Lager（4/10:無法分辨）、 Saison（12/21：可分辨）、Kettle Sour(3/18:無法分辨)、British Golden Ale（13/24:可分辨）。密閉的發酵會取代開放式的發酵方式，很有可能的其中一個原因就是密閉式用水封隔絕了外界，大幅地減少了空氣中細菌進入酒中而造成感染。在酒廠中，通常是在一個可以容易清潔及保持乾淨的發酵室內，甚至在現代更有專門的空調系統，這對家釀來說，是比較難達到的要求。儘管如此，國外嘗試Open Fermentation的家釀者也不在少數，有些是在發酵桶上面蓋上紗布，有些則是蓋子不蓋緊，防止空氣中的細菌和灰塵掉落，還有一些是真的完全上空的，其中最猛的是Brulosophy show在浴缸內發酵。台灣氣候潮濕，落塵很多，要在開放的環境中不加蓋，風險很大；如果需要使用使用冰箱溫控，冰箱清潔不到的死角很多，冷凍櫃會好一些。像我的冰箱即使常常用漂白水稀釋擦拭，也還是有摸不到、擦不到的地方，要在這樣的空間發酵，感覺會很容易感染。幾經考量之下，我決定創造一個容易維持乾淨、容易消毒的小空間，用最容易加工的塑膠瓦楞板把上、左、右、後面圍起來，正面則用透明塑膠袋蓋住，形成一個半開放的小空間，在打開蓋子前，在這個小空間內噴灑消毒液，減少感染的可能性。在發酵容器的選擇上，雖說家釀規模可能不會有什麼多大的水壓，但採用淺平的發酵容器感覺更像傳統做法，所以找了一個12公升的食品冷凍盒當發酵容器。接下來是我第一次嘗試Open Fermentation做德式小麥的簡單記錄：接種前幾個小時，完全看不到任何發酵的現象，令人擔心，不過在12時時，表面開始出現明顯的發酵泡沫：在24小時的時候，已經有一層Krausen：根據網路上看到影片，這時候要把表面的深色泡沫刮掉。 目前沒有看到明顯的深色Krausen，不過我還是照著把泡沫刮掉：泡沫刮掉後一兩個小時，又恢復成刮之前滿滿泡沫的狀態，因為本來就沒有太多深色泡沫，跟刮之前看起來差不多。接種後36小時，深色krausen出現，是底層的渣被帶上來，看起來可能是因為接種溫度很低(12度)，溫度也控制在相對低的18度，所以發酵速度慢了一些：因為看起來也快滿出來了，所以決定再刮一次。看起來12公升是偏小了，雖然這是我能找到的有標示食品級的最大塑膠盒。這次刮的感覺和前次比，泡沫比較濃稠，含了不少酵母；前次感覺像啤酒上的泡沫。接種後60小時，看起來似乎發酵變緩了，試著從上層回收酵母，並測量比重。量得比重為1.018；OG是1.048，預期FG是1.012，所以把啤酒轉移到密封的容器內，讓發酵完成，避免氧化。取得少量的樣本試了點味道，沒有感染的感覺。轉移至密封式發酵桶後，沒有很久就開始冒泡，應該還是繼續發酵中。感想及心得：和使用密封式發酵桶相比，Open Fermentation的確需要比較多的處理，也比較需要注的。而以這次的成果來說，可能是因為發酵溫度偏低，並沒有爆發性的香蕉味，但風味上並沒有問題，只是缺乏對照，無法確認差異有多少。有機會我會再試試看用比較高一點的溫度發酵。我收集了一些Open Fermentation相關的影片，有興趣可以看一下，看完應該就會很想試試看： Youtube:Open Fermentation w/ John Palmer/Brulosophy SHow Youtube:Open Fermentation Home Brewing/BrewinTV Youtube:The Benefits of Open Fermentation/Craft Beer and Brewing (Vinnie Cilurzo) Youtube:Celebration Ale Unleashed:Ken Grossman on Sierra Nevada Brewery’s Craft Beer IPA Masterpiece (8:58左右)Reference: Open Fermentation everything you need to known Open Fermentation- A process that continues to captivate some beer lovers Homebrewtalk.com: Open Fermentation in a plastic DIY coolship Escarpment labs:Decoding ester production in yeast Fermentation" }, { "title": "Dip Hopping", "url": "/posts/DipHopping/", "categories": "釀酒筆記", "tags": "", "date": "2023-12-12 14:50:35 +0000", "snippet": "Dip Hopping據說是Kirin發明的，這個方法據說可以增加酒花的香氣而且抑制不良風味的產生。儘管Kirin在2018年發表了一篇論文，說明Dip Hopping-在whirpool之後、發酵開始之前加酒花-可以減少一種有著類似洋蔥的不良風味叫2M3MB物質的產生，但Kirin似乎沒有完整地公開他們的Dip Hopping流程。但一家位於Portland,Oregon的酒廠Gigant...", "content": "Dip Hopping據說是Kirin發明的，這個方法據說可以增加酒花的香氣而且抑制不良風味的產生。儘管Kirin在2018年發表了一篇論文，說明Dip Hopping-在whirpool之後、發酵開始之前加酒花-可以減少一種有著類似洋蔥的不良風味叫2M3MB物質的產生，但Kirin似乎沒有完整地公開他們的Dip Hopping流程。但一家位於Portland,Oregon的酒廠Gigantic Brewing的釀酒師在拜訪屬於Kirin、位於東京惠比壽的酒廠Spring Valley時，驚艷於其中一款Pale Ale(*1)的酒花風味，在問了許多問題後，大致得知其架構，然後發展出他們Dip Hopping的方法。Gigantic Brewing的Dip Hopping的流程是，酒花先放到發酵桶，以11磅加入半桶77°C左右水的比例，浸泡一小時後，把冷卻後的麥汁加入發酵桶，然後進行一般的接種發酵。Gigantic Brewing不藏私地將這個方法流傳開來，所以雖然發明是Kirin，在美國流傳的方法是源自於Gigantic Brewing。2019年 John I. Haas公司發了一篇文，宣稱Dip Hopping有這些好處 酒花的酶不會參與到發酵 Myrence(月桂烯)在成品含量極少，是好事 因為比較低硫化氫，衍生於iso-alpha酸的2M3MB的產生會被抑制雖然乍看之下，Dip Hopping和Whirlpool很類似：都是略低於煮沸溫度，都是在發酵前浸泡酒花。許多釀酒師在試了後認為Dip Hopping產生了不同的風味。實務來看，Dip Hopping比Dry Hopping簡單，也比Whirlpool簡單，但衍生了兩個問題：1.酵母混著酒花，基本無法回收、2.如果沒有辧法排渣，酒花會浸泡整個發酵週期。從Homebrew的觀點來看，不回收酵母不是太大的問題，至於酒花浸泡如果有錐桶就不成問題，即使不是用錐桶，也可以轉桶；或者即使是乾投也有人讓酒花浸泡7天或更多的，多泡個幾天或許也差不了多少？如同Whirlpool和Dry Hopping有溫度、時間的變化一樣，Dip Hopping有著三個變數可以選擇：浸泡溫度、水（或麥汁）和酒花的比例、浸泡時間。但從家釀實務來說，用熱水可能會稀釋麥汁，所以取出部份麥汁應該是比較好的選擇。然後如果是使用不銹鋼的發酵桶，直接在煮沸完取出麥汁，和發酵桶圴溫後，麥汁會降到適當溫度或更低。如果是用不耐熱的發酵桶，可能要另外浸泡再加進去，消毒方面要注意。酒花和麥汁的比例，在Gigantic Brewing用的比例換算大約是每1oz(28g)用0.34公升的水，但這不是一個必須遵守的固定比例（而且這用的是水），比較多的Homebrew採用的是1oz(28g)用1公升上下的麥汁。對我來說，乾投是很麻煩的事，如果能不乾投而能增加酒花的風味，求之不得。於是在釀一批SNPA配方時，就試了Dip Hopping。10公升的批次，我在消毒完的發酵桶內放了14g的酒花，煮沸結束後，直接取出500~800cc的滾燙麥汁加入發酵桶，搖晃發酵桶該酒花充份混合。接著冷卻麥汁、Whirlpool，到可以把麥汁進發酵桶時，也差不多40~60分，把冷卻後的麥汁加入發酵桶，接下來就是一般的流程。那個批次在第三天就看到酵母（及酒花）沈澱，得利於使用錐桶，我在第三天進行了一次排渣。風味上，我確實有感覺到一個特殊的風味，我覺得比較偏Flavor而不是Aroma。因為沒有對照比較，我也很難清楚地說出是什麼。然後就釀好沒多久，我到日本時就喝到了Spring Valley的496， 我覺得我也有嚐到我在我Dip Hopping的SNPA中感受到的味道。另外，我在友人惠賜的Tuatara IPA中，也有感受到類似的風味；後來我試著搜尋，並沒有找到Tuatara Brewery如何使用酒花的資訊，但有趣的是，在untapped上有一款他們家的酒，上面寫著有Dip Hopped。雖然可能只是我的錯覺，以Homebrew來說，這應該是值得嘗試的方法。附帶說明：最近全家引進了Spring Valley的豊潤＜496＞，有機會可以去試試看。附帶說明二：Jamil Zainasheff在一個podcast中回答聽眾問題，他說他不能接受酒花和酵母混在一起，所以他不完全不考慮Dip Hopping。註*1:在Wild About Hops的文章中，寫的是”496”的Pale Ale，但Spring Valley的496是Lager，而且在他們的網站清楚寫著使用Dip Hopping的技術；“「SPRING VALLEY 豊潤＜496＞」は、ホップを7日間漬け込む「ディップホップ製法」を採用。” ディップホップ就是DIP HOP。順便一提，從我看得懂的漢字看來，他們泡了7天。參考連結： Wild About Hops Spring Valley Brewery" }, { "title": "Bottler-There And Back Again", "url": "/posts/ThereAndBackAgain/", "categories": "釀酒筆記", "tags": "", "date": "2023-11-18 14:50:35 +0000", "snippet": "開始自釀的時候，我和大多數人一樣用裝瓶，隨著開始厭煩裝瓶洗瓶，弄了一個直立式的冰箱(kegerator)，改了三孔酒柱，好不威風，但也不全然沒有問題。因為體積大，搬家時就處理掉了，然後又開始裝瓶，裝了一陣子，又開始覺得有點不痛快，就自己用冷凍櫃做了一個keezer。用了一陣子後，我放棄了keg，又開始了裝瓶。偶而還是想用keg，但用了幾次，總還是覺得裝瓶其實比較簡單。魔戒前傳的哈比人，副標題...", "content": "開始自釀的時候，我和大多數人一樣用裝瓶，隨著開始厭煩裝瓶洗瓶，弄了一個直立式的冰箱(kegerator)，改了三孔酒柱，好不威風，但也不全然沒有問題。因為體積大，搬家時就處理掉了，然後又開始裝瓶，裝了一陣子，又開始覺得有點不痛快，就自己用冷凍櫃做了一個keezer。用了一陣子後，我放棄了keg，又開始了裝瓶。偶而還是想用keg，但用了幾次，總還是覺得裝瓶其實比較簡單。魔戒前傳的哈比人，副標題(或另一個書名)是「去而復返」(There and Back again)，而我從裝瓶到keg，回到裝瓶後，又再次用keg，最後又回來裝瓶，已經不只是「去而復返」，而是「去而復返，又去再復返」。就來說說用keg的一些體驗和心得，以及和裝瓶的比較。在對岸-大平洋的對岸，原本就是設計用來放keg的冰箱通常是直立式的，所以把真立式冰箱加上酒頭改成放keg的也都會稱為kegerator。我的第一部keg冰箱是一個原本只有一孔的的kegerator，但它的空間其實放得下三個可樂桶，所以我買了一個三孔酒柱，把它改成三個出酒頭的。我的第二個冰箱是自己改的keezer。用冷凍櫃改的，在對岸-大平洋的對岸，習慣上稱為keezer。keezer的改法有幾種，最常見的是在蓋子和櫃體之間加一個木框，就可以在這個框上裝龍頭；這也是我採用的方法。第二個做法是直接在蓋子上鑽頭，然後裝酒柱。第三個做法是在蓋子上做一個箱子，龍頭裝在這個箱子上；通常採用這個做法的人都有某種程度的木工能力，所以都會做個木箱把整個酒櫃裝起來，也通常做得很漂亮。不過，把冷凍櫃整個包起來會影響散熱，會影響冷凍櫃的壽命，要考慮一下。後面這兩種做法，除非有特別設計，存在一個小問題：冷凍櫃的的蓋子是向上掀開的，裝在蓋子上的東西會向後倒，所以後面需要淨空，換句話說，不能靠牆。第一種做框的方式除了簡單一點，因為沒有破壞蓋子，可以完全復原。kegerator和keezer相比，最大的優點一是開門方式，二是體積緊湊。側開的門除了keg桶進出方便，清理積在底下的冷凝水或有時不小心滴下的酒，比起上開的keezer，都方便很多。因為keezer由不是為了裝keg的冷凍櫃改裝，體積不會很緊湊，例如一般的200L冷凍櫃，通常只能放下三桶，頂多在壓縮機的突起多放一個小桶的，但體積上會比可以放4桶的kegerator寬。keezer的優點相比之下是便宜、取得容易，不過如果加上施工的成本，價差會縮少許多。撇開因為很強的DIY能力，然後自己改裝超炫keezer的情況，有些人用keezer的理由是為了放超過4桶以外。Kegerator應該只有商用的才有超過4桶的容量，keezer則不難找到大還有更大的冷凍櫃。商用的價格不在家釀的討論範圍，所以我也不(想)知道有多貴。kegerator和keezer還有另一個差異，kegerator通常是用酒柱，keezer加框則不需要酒柱。前面提在也有人在keezer上面架酒柱的，另外也有人用直立式冰箱鑽孔裝龍頭的，所以不管是kegerator或keezer，只討論酒柱的問題。酒柱的最大優點是酷、炫、以及很酷炫。它問題是：酒柱是在冰箱主體外的一個獨立小空間，加上又在上方，酒柱內的溫度會高許多，所以打酒時，除了留在酒管中的酒可能風味不佳，前面也會有許多泡沫，直到溫度被出來的酒冷卻降下來。有些人把用小風扇把冷空氣打到酒柱去，這個做法會改善一些，但在潮溼炎熱的台灣，可能需要在酒柱下放水盆接冷凝水。不過，不用酒柱，其實也有類似的問題，因為龍頭在外面，只是情況會好一點點。曾看到有人說，如果你到一家酒吧，打酒的人如果直接把酒打到杯裏給你，除非那是第二杯，否則那是個不合格的員工，理由就是啤酒龍頭的溫差。除非是開party，大部分的時候，每次都是第一杯的的情況，都要倒掉一點酒。接著進入主題，如同我開題說的，我從裝瓶轉用keg，又回到裝瓶，所以我用「裝瓶缺點、keg優點、keg缺點」，再加上我的看法的順序來說明，看倌儘量撇開”我”的主觀因素，自行對照優缺點。首先來說裝瓶的缺點： 洗瓶子很麻煩。 一瓶一瓶裝，還要封蓋，很麻煩。 裝瓶過程中比較容易接觸氧氣。 瓶發會留下底泥，很不專業，有時候影響飲用體驗。 爆瓶。然後因為keg有這些優點，所以資深的自釀轉向keg的人很多： 一次只需要洗一大桶。 裝桶很簡單，只要接上管線等酒流完就好了。 裝桶過程可以有很多方法最大限度避免接觸氧氣。 小部分底泥會在最開始出來，後面幾乎不會有底泥。 要喝多少打多少。 可以強制充氣，可以快速碳酸化。-（對不是業內的人來說）酷、炫、有趣。keg缺點： 進入門檻高，成本上及空間上都是。 維護成本高，家釀來說，CO2比瓶發糖貴許多。 keg桶很佔空間，可以「同時」享用的酒受限於龍頭的數目，通常不超過4個。 要帶出門分享不容易，需要有其他的道具。不過這點現在有很多小keg或保特瓶之類的可以解決。對我來說，同時最多只有4種選擇是最大的問題，而且當酒剩下不多時，keg的大小也是不會變，也是需要佔用一個龍頭和一個桶的冰箱空間。在太平洋對岸，在一桶酒剩下不多又沒少到一個人可以喝完時，會呼朋引伴到家裏辦party，稱為「keg kicking party」或「kick the keg party」，就是叫一群人來幫忙喝完。在台灣，因為沒有住豪宅而是住得”好窄”，要時不時招待客人負擔太大；至於要怎麼知道桶內還剩多少則又是另一個問題。除此之外，我常遇到的一個問題是漏氣，有時候是keg(蓋子、出酒口、入氣口等等)，有時候是快速接頭，也有時候是管線；不管是那裡，一漏就一桶二氧化碳沒了。另外，雖然洗keg只有一桶，洗這一桶卻比洗瓶子麻煩多了，因為它有一些部件，如果每次都要拆下來清，花的時間也不少。還有就是啤酒管線和龍頭本身也是需要定時清洗，一樣麻煩又耗時。我一點都不覺得比洗瓶子輕鬆。對照keg的缺點，裝瓶的優點也就很明顯了，裝瓶可以化整為零塞到家用冰箱，不管是要長期熟成還是留下小部分都很簡單。瓶子如果每次喝完就洗，化整為零，就不會需要一次洗一大堆。至於氧氣對策，我在裝瓶詳解有提到，雖然可能比不上實行良好的keg，成果是達到了我可以接受的範圍；相對來說，我的經驗是，等壓裝瓶如果沒裝好，比瓶發還糟糕。對我來說，裝瓶只有這幾個問題是目前無法克服的： 底渣 壓力發酵 事後調整事後調整並不是很常需要的，但是keg保留了這樣做的可能性。壓力發酵的結果是帶壓的啤酒，這樣的啤酒要裝瓶比較麻煩，但壓力發酵不是必要的選項。所以底渣就是裝瓶對我來說唯一的問題。利用keg設備，等底泥都沈澱後再等壓裝瓶是一個方法，只不過我試過等壓裝瓶器、泡沬飛馬，結果好壞參半，還沒有找到、調整到可以有穩定的結果，而且等壓裝瓶比瓶發麻煩很多。目前雖然還沒有完全放棄，但已經有產生能不要就不要的抗拒心理了。通篇說來，都是「我」個人的經驗，這裡僅提供個人經驗和感相提供自釀同好參考，也算是有人問我為什麼不用keg的答辯書。每個人條件和喜好不同，假如我能找到穩定的等壓裝瓶方法，或許我也是會考慮使用keg來處理lager。題外：小型keg是可能是一個解決方案。小型keg可以視為一般的keg和酒瓶的中間地帶，它既是keg，又可以有酒瓶體積小的優點。但它的問題是以同樣容量相比，總價格會貴上不少。現在開始出現PET做的小型keg，大幅下降了成本。或許這是將來一個可行的方式。" }, { "title": "酵母擴培", "url": "/posts/yeastpropagation/", "categories": "釀酒筆記", "tags": "", "date": "2023-10-25 14:50:35 +0000", "snippet": "在啤酒的四大原素：水、麥芽、酒花和酵母中，做為活的生物的酵母，可能是最難掌握的變數；因為除了數量，活性以及不同代數也影響酵母的表現，更別提不同狀況的酵母在不同的環境（營養、糖度、溫度等等）下，表現也會有所不同。從數量和狀態來說，乾酵母是比較容易掌握的，不過，除了因為乾燥過程中酵母的細胞膜會受損，風味會有些不同外，並非所有酵母都能承受乾燥過程，所以乾酵母的選擇通常不如液態酵母的多。再則，如果乾...", "content": "在啤酒的四大原素：水、麥芽、酒花和酵母中，做為活的生物的酵母，可能是最難掌握的變數；因為除了數量，活性以及不同代數也影響酵母的表現，更別提不同狀況的酵母在不同的環境（營養、糖度、溫度等等）下，表現也會有所不同。從數量和狀態來說，乾酵母是比較容易掌握的，不過，除了因為乾燥過程中酵母的細胞膜會受損，風味會有些不同外，並非所有酵母都能承受乾燥過程，所以乾酵母的選擇通常不如液態酵母的多。再則，如果乾酵母回收使用，也就和液態酵母一樣了。換而言之，酵母的處理就像一顆路上的大石頭，如果避開了，釀酒的路就會變得狹窄了。(最近White lab推出幾支受歡迎的酵母的乾酵母，例如WLP001，但是除價格昂貴-甚至比液態還貴，目前還沒有太多的使用者評價。)提到液態酵母，馬上想到「擴培」。原本液態酵母廠提供給家釀的酵母包裝大多略有所不足，另外因為運送及新鮮度的關係，使用液態酵母必須「擴培」是一種常識。不過，近來有些酵母廠，例如Imperial Yeast，提供的酵母量足以直接接種，或是White Lab使用了新型更能存放的包裝，在美國已經有部份家釀者開始直接使用而不「擴培」。不過，在台灣的家釀者似乎還沒能享受到這種服務，「擴培」還是不可避免。中文的家釀界常說的「擴培」，意義上應該是培養繁殖，也就是把酵母的數（質）量變多。然而，在英文社群中，比較常用的是”starter”這個詞，雖然看起來是同一件事，而酵母（質）量通常也是會大，但意義上有點不一樣。在使用「Starter」這個用詞意義上，感覺更多是確定或喚醒酵母，而非增加酵母數量。我並不是對用詞吹毛求疵，只是Starter的目標不一定是讓酵母（質）量變大，如果直接在套用中文「擴培」，意義上會變得奇怪。另外，我不是專家，不確定某些英文詞彙的正確翻譯，所以下面容我使用Starter，而不用中文。Starter怎麼做？其實很簡單，準備小量的麥汁，把酵母投入，讓酵母成長起來即可。不過，這個過程有很多選項，這也是這篇想要討論的主題。 準備適量的麥汁；最簡單的做法是使用麥芽精和水用1:10的比例混合，煮沸10分鐘後，用鍚箔紙封住，然後冷卻。 冷卻後接種酵母，用鍚箔紙封蓋住瓶口。 將培養瓶置於攪拌器攪拌，直到完成。如果是採用可以耐熱的錐型瓶，可以直接用錐型瓶煮，順便消毒錐型瓶。但錐型瓶因為形狀的關係，容易沸湧，一來不能麥汁不能太多，二來火不能太大。切記很多便宜的錐型瓶是不耐熱的，不確定請勿嘗試。糖水在討論麥汁的濃度之前，會有人問到，可不可以用糖水養酵母。簡單地說，不建議。酵母”成長”需要的不只是”糖”提供的”能量”，還需要像是胺基酸等等其他的營養。用糖水養酵母，可能類似讓人只吃白飯一樣，會有營養不良的問題。有些文獻，例如Design Greate Beers，說如果酵母用糖水中培養，因為吃糖和吃麥芽糖的方式不同，酵母可能失去吃麥芽糖的能力，雖然這種說法我半信半疑，但仍然完全不建議用糖水來養酵母。Brulosophy有做過實驗，比較糖水和麥汁的Starter，結果用糖水養出來的不僅發酵變慢，而且似乎有酵母自溶的味道。當然會有一種情況是，原本的酵母量或健康狀況就不差，用糖水讓酵母”啓動”了，結果發酵完全沒問題，但這種情況下，或許做Starter也是沒必要的。題外話，很多酵母廠其實是用糖蜜養酵母的，但還另外加了什麼營養以及是在什麼條件下培養，似乎都是商業機密；也因為，我懷疑”酵母用糖水養會喪失吃麥芽糖能力”這種說法。如果你有辦法用和酵母廠一樣的條件去培養酵母，請不吝分享。濃度全麥麥汁含有酵母需要的大部分養份，是很恰當的培養基。最佳的濃度大約在1.036~1040之間。有可能滲透壓或是形成的酒精度的關係，高於1.040太多的濃度會造成酵母的活力下降。而比較低的濃度則有效率比較低，也就是需要比較多量的問題。最近有一個研究實驗，使用1.008低濃度麥汁但相對比較高的氮(胺基酸)可以得到比較有效率的單位糖增長率，但考慮到酵母營養劑的成本及麥汁量的大小，這種方法在家釀似乎不太實際。在家釀的實際應用，也還沒有定論。所以目前還是以1.036~1.040為最佳濃度。使用麥芽精是最簡單方便的做法，100g麥芽精加上1000cc的水，濃度會在100/(100+10000)=9.09%，也就是1.036.酒花酒花有抗革蘭式陽性菌的效果，12IBU以上會抑制乳酸菌，但是其實也有耐酒花的菌，靠酒花來抗菌是不切實際的作法，而且酒花其實也會影響酵母；酒花精油會附著在酵母的細胞壁上，酵母也會吸收阿法酸（所以釀過啤酒的酵母是苦的）。如果是用麥芽精，沒有必要添加酒花。但如果是使用多餘的麥汁，根據Braukaiser的實驗，酒花對酵母的影響並不是很大，如果不是超高IBU，多餘的麥汁也可以調整濃度後使用。供氧和發酵啤酒不同，做酵母starter的目標是培養酵母，所以儘可能持續提供氧氣對酵母成長會比較好，千萬不要用水封。持續打純氧是不太經濟也不太可能的事，打進過濾過無菌的空氣是比較常見的做法。不過如果是用攪拌器，瓶口錫箔紙包起來，效果就相當不錯了。溫度雖然Ale通常在20度、Lager在10度上下發酵，最佳的Stater培養溫度是在25度上下。所謂的最佳發酵溫度是釀酒人覺得風味最佳的溫度，並不是酵母喜歡的溫度。雖然無法感受酵母的情緒，但要說的說，酵母可能比較喜歡30幾度。愈高的溫度，酵母成長愈快，但成長太快可能會形成比較不健康的酵母，另外，有一些lager酵母在超過30幾度時會停止生長，所以在25度會是最恰當的溫度。接種率需要的麥汁量取決於成長率及想要擴培的目標數。換個角度來說，就是原本有X數量的酵母，用某體積的麥汁培養後，酵母數量變成 （X + n），而這最後的X+n酵母量是釀這批啤酒所需要的酵母量。這兩個都是很複雜的問題，先討論一下相對簡單一點的酵母量。酵母量取決於接種率，也就是每單位麥汁需要多少的酵母量。太低的接種率，會有酵母過度生長而產生的太多風味物質或發酵不完全的問題；而太高的接種率，則是酵母生長太少，可能有風味不足或酒體太輕的問題。一般來說，”過高”很難，太少則很容易，但酵母是活的生物，在符合條件下，只要2-4小時，個數就可以增加一倍，所以是有個容忍範圍。Ale的建議值是每ml每糖度(Plato)0.75百萬個，而Lager因為發酵溫度低，需要兩倍也就是1.5百萬個的量。舉例說明，20公升，比重1.050（糖度12.5plato）的Ale，需要接種約 0.75 * 20*1000 * 12.5=187,500百萬 ，也就是將近200十億(Billion)個數的酵母。要注意的是，0.75這個數字是用在回收酵母，如果是酵母廠養出來的酵母，因為特殊的培養方式，只需要大約一半的量，0.35左右（Yeast書122頁）。如果有注意到，一般的乾酵母一包11g大約是100billion，但可以用在20升；例如根據Fermentis的資料，US-05一克是 &gt; 1* x10^10,也就是10billion，家釀包11g也就是&gt;110billion左右。如果需要計算接種率的，可以用Brewer’s Friend的計算器計算。不過，其實以上的數字只是一個概念，不同的酵母，大小不同，有些酵母例如比利時系的酵母就比較小，如果真的要計算數目會很困難，所以把這個數字當成一個概念就好。回過頭來，要計算接種率的理由是穩定性或一致性：每次用一樣的量，以求達到同樣的風味。在酒廠或比較專業的書上，用的數字通常是酵母泥的體積。家釀的用量比較少，而且操作上很難清楚知道混了多少渣，測量的誤差會比較大。另外，有些人覺得德式小麥用太約0.5會比較有香蕉味，但很多人並不建議如此，因為可能會有發酵不完全的狀況。成長率提供成長率，我不禁想到「人口論」，還記得小時候很常提到「人口爆炸」，但現在過低的生育率卻是先進國家的通病；生物常常不是用簡單的數學。酵母也一樣。酵母的成長率比較常用的有兩個模型，一個是Yeast書中的，另一個Braukaiser的。Yeast書中的成長率是根據他們實驗把100B的酵母加到麥汁中，估算最終酵母數量做成的模型，在這個模型中，隨著麥汁量變多，酵母成長倍數增加變緩，最終停留在6倍左右。然後再根據這個模型，把數字放大，做為有攪動酵母的話算模型。Braukaiser認為這個模型有問題，因為大多數人是用攪拌器，和不去攪拌酵母的環境不同，他做了幾個實驗，得到一個簡單的模型和公式，在的接種酵母數在1.4B/g(每公克糖接種1.4B酵母)以下時，成長大約是每克糖成長1.4B，大於1.4B時，成長率會下降，直到接種率大於3.5B/g時，酵母數量就不會增加。細節可以到Braikaiser.com看。這邊只是想說明一個概念：沒有持續攪動酵母，成長有六倍的上限；接種酵母太多或麥汁太少，酵母可能不會成長。在Brewers’ Friend的計算器中有一個選項是計算的模型，可以依照實際情況選擇。剪力用攪拌器的理由第一、是造成酵母懸浮，讓酵母各有機會吃到糖，第二、把CO2從麥汁中趕出去，CO2會妨礙酵母代謝，第三、增加接觸空氣面積，增加溶氧。理論上攪拌速度愈快，似乎愈好，不過在各大自釀社團，討論到攪拌器，常會有人跳出來說速度不能太快，會有剪力傷害酵母。但多快才算太快？我找了很久，都找不到答案，反而找到了有人做了轉速和酵母成長率的實驗，結果速度愈快，酵母繁殖愈多。我並不否定剪力的存在會傷害酵母，事實上，已經被證明在乾酵母水化過程中，如果去搖晃或攪拌，剪力就傷害酵母，造成存活的酵母數減少的現象。因為乾酵母的細胞壁有受損，水化復水時很脆弱，即使很弱的剪力都會造成傷害。但液態酵母對剪力有多大的抵抗力，我還是找不到答案。接種時機可以在酵母高泡時接種，或者也可以在等酵母沈澱後再接種。後者接種時可以把上清液倒掉，只接種底下的酵母泥，書上建議starter的量超過釀造批次的5%，最好這樣不要把starter的全部麥汁倒進去。高泡期接種的話，則酵母不會沈澱，只能全部接種。高泡期接種的優點是：酵母在活力最強的時候接種，而且已經是生長週期中，接種後的lag time(從接種到發酵的時間差)會比較短。如果是為了重啓停滯的發酵(stuck fermentaion)，例如目標1.010停在1.025的，接種高泡期的酵母是唯一解。（前題是經FFT證明不是麥汁發酵性的問題）不過，接種高泡期starter要注意溫差的問題，starter和麥汁的溫差要在3-6度C以內，如果溫差太大，酵母受到驚嚇，會有不利的影響。除非溫控Starter，以台灣的天氣，在冬天養Ale可能還好，其他的組合要控制溫差有些難度。另外，一般starter的高泡期會出現在12-18小時左右，時間的掌握對家釀也是一個難度。等酵母沈澱後倒掉上清液的方法中，酵母會進入休眠的狀態，但做好starter後可以放進冰箱，一個星期內使用通常都不成問題。至於Starter什麼時候算是”完成”？根據Yeast書上說明，大部分的情況下，12-18小時酵母量就會達到最大，如果接種的酵母量相對麥汁很少，可能會到36小時，不過最大量成長應該在24小時內。另外，如果要於進冰箱存放，在酵母吃完糖後，可以多放8到12小時，該酵母有機會形成glycogen（糖原）儲存，以便過冬。結論是接種後兩到三天就可以收起來放冰箱了。注意一點，養酵母，圖的是酵母的肉體，和發酵啤酒要的是酒不一樣，糖有沒有全吃完其實不重要。雖然書上說大於5%的Starter最好有上清液倒掉，大部分人也都覺得starter的麥汁風味不好，但從Brulosophy做的實驗，即使把超過2公升的starter全部倒進去，大部分人也分不出來。另外有點要考慮的是，全部倒進去的做法多少會稀釋原本的麥汁濃度。Vitality Starter vs. Viability StarterVitality指的是酵母的活力，而Viability指的是酵母的數量：Vitality Starter的概念是”活力”夠的話，數量不足也不是問題。所以做Vitality Starter不需要太多的麥汁，因為只是要喚醒酵母。為了強調活力，當然是在高泡期接種。Brulosophy針對Vitality Starter做了幾個實驗：其一，二、三、四，在Ale的情況下，差別似乎有限（但不是完全沒差），但在Lager，酵母數量不足卻造成發酵遲緩的問題。我不知道Vitality starter效果怎樣，不過，很多時候，可能原本的酵母數量就足夠，只用少量的麥汁，雖然酵母沒有成長也不是問題，在這種情況下，或許starter也不是必要的。Shaken, Not Stired Starter雖然用撹拌器是一個類似常識的做法，也有人不認同的。有人主張，攪拌器的剪力讓酵母有壓力，所以starter的風味很差。他主張用麥汁4~5倍大的小口容器，接種後偶而就把瓶口轉緊，用力搖晃，接著再鬆開瓶口，釋出氣體，然後在高泡期全部倒入啤酒中。簡稱為SNS Starter。我沒有看到有人對這個方法做什麼科學證明（數酵母或者對照實驗之類的），但也是有一些人相信這個做法很好。我個人並不覺得這做做法會比攪拌器好，一來搖晃難道就沒有剪力？二來我不喜歡把starter的麥汁加進啤酒。不過，沒有攪拌器時，這是個簡單實用的方法。在Yeast書上有介紹澳洲人會用2公升的保特瓶像這樣做starter，也得到不錯的效果。高OG高酒精隨著OG提高，需要的酵母就愈多，但通常用來擴培的容器-通常是錐形瓶-大小有限，另外要做很大的starter也是其他的問題：費用。資深家釀甚至商業釀酒有一個方法，那就是先釀一個比重低的啤酒，然後把酵母回收，用來釀高比重的。例如，想釀Barley Wine，先釀一個Blonde或Pale Ale之類的、想釀Belgian Dark Strong或quad，先釀一個Belgian Pale Ale、想釀Imperial Stout，先釀一個5%的Porter之類的。另外，雖然說，過度接種很難，實際上卻是有可能的，其中最常見的例子就是把回收酵母全部拿來釀批量一樣、比重接近的啤酒。用來釀比重高很多的酵母應該是沒問題的，當然也可以依照計算的量使用，而不是使用全部的酵母。一般而言，正常的啤酒發酵，酵母大約會變成4~6倍。參考資料： [Brulosophy: EXBEERIMENT REAL WORT VS. DEXTROSE YEAST STARTER IN AN AMERICAN AMBER ALE](https://brulosophy.com/2015/06/05/real-wort-vs-dextrose-yeast-starter-exbeeriment-results) SuiGenerisBrewing: Optimizing Yeast Starters and Large-Scale Yeast Production [Brulab Podcast Episode 062 Impact Of Nitrogen On Yeast Propagation w/ Dr. Maria Moutsoglou](https://onlinelibrary.wiley.com/doi/full/10.1002/jib.621) Shaken, not Stirred: The Stir Plate Myth Buster Yeast Growth in Hopped Wort Yeast, The practical Guide to Beer Fermentation, Page 132-145 Homebrew Propagation Yeast Growth in Hopped Wort Brewer’s Friend: Yeast Pitch Rate and Starter Calculator [Brulosophy: EXBEERIMENT Decated vs Full Yeast Starter](https://brulosophy.com/2016/10/10/decanted-vs-full-yeast-starter-exbeeriment-results/) [EXBEERIMENT YEAST PITCH RATE: VITALITY STARTER VS. VIABILITY STARTER IN A CZECH PALE LAGER](https://brulosophy.com/2016/08/15/yeast-pitch-rate-pt-4-vitality-starter-vs-viability-starter-in-a-lager-exbeeriment-results/) Braukaiser.com: Stir speed and yeast growth" }, { "title": "ChatGPT v.s. Grand Master Homebrewer", "url": "/posts/ai_vs_human/", "categories": "釀酒筆記", "tags": "", "date": "2023-08-18 00:01:35 +0000", "snippet": "ChatGPT可以說是AI的一個哩程碑，自發表以來，各行各業都試著應用在他們各自的領域內，自釀界自然也不例外。故事的開始就是Youtube頻道Brulosophy Show用許多酒譜餵給ChatGPT，然後叫ChatGPT設計了一個酒譜，結果引來了以分析得奬酒譜並設計出酒譜的meanbrews頻道主叫陣；於是便有了這場AI(ChatGPT)對決人類的對決。做為對決的主題類型是深色Weizen...", "content": "ChatGPT可以說是AI的一個哩程碑，自發表以來，各行各業都試著應用在他們各自的領域內，自釀界自然也不例外。故事的開始就是Youtube頻道Brulosophy Show用許多酒譜餵給ChatGPT，然後叫ChatGPT設計了一個酒譜，結果引來了以分析得奬酒譜並設計出酒譜的meanbrews頻道主叫陣；於是便有了這場AI(ChatGPT)對決人類的對決。做為對決的主題類型是深色Weizenbock；Weizenbock簡單地說就是Weizen（德式小麥）做到bock的強度(16°P或1.065以上)。Weizenbock也分深色和淺色的版本，但或許是深色比較容易藏酒精感，比淺色的更常見。做得比較濃的德式小麥約莫可以想像和形容它的風味。根據BJCP的說明：… 中等至較高的麥芽豐富風味，並伴隨著顯著的麵包榖物的小麥風味。…而較深色的版本則會帶有更深、更豐富的麵包或烤麥芽(toast)風味，以及顯著的美納 反應產物，可以有焦糖風味。微至中度的香蕉和香料（丁香、香草）酵母特性。較深色的版本隨著陳年可能會有一些深色水果風味（李子、西梅、葡萄、葡萄乾）。深色版本可以選擇添加輕微的巧克力風味（但不是烘烤roast）。不含啤酒花風味。低的啤酒花苦味可以給人輕微的甜味口感，但啤酒通常收尾乾爽（有時會因輕微的酒精特性而增強）。麥芽、酵母和酒精之間的相互作用增添了複雜性和趣味性，這通常會隨著陳年而增強。接下來，介紹比賽雙方。操作ChatGPT的是Martin Keen。Martin Keen本來主持著一個The Homebrew Challenge的頻道，這個頻道的主題是每週釀一個類型，用了99個星期釀了99個類型，用這種頻率把所有類型釀過一輪，可以說是一個創舉。之後，Martin加入了Brulosophy團隊，成立了Brulosophy Show頻道，就在這個頻道中挑釁了meanbrews的Matthew Herrold，展開了這場對決。Matthew Herrold是住在德州的的一個Homebrewer，他除了是BJCP的評審和合格的Cicerone，也是Master Homebrewer Program的Grand Master IV，我對這個Master Homebrewer Program並不了解，簡單地看就是他得過不少奬。他主持的Meanbrews頻道，每一集會針對一個類型來分析得奬配方，也是分析歷年來的趨勢，並在最後給出一個配方。比賽方式：Martin用ChatGPT設計出一個配方，Matthew也設計一個配方，然後由Martin來釀兩個配方後比較。由同一個人釀，排除了釀酒人和器材的差距，純粹比較配方。以下是兩個配方：（同時加映Brewing Classic Styles的配方）   ChatGPT4 meanbrews Jamil OG 1.066 1.076 1.081 FG 1.016 1.018 1.021 ABV 6.6% 7.6% 8% IBU 27 23 23 Color 23.5 18.5 16 Water Ca 62 / Mg 10 / Na 8 / SO4 100 / Cl 69 Ca 44/ Mg 9/Na 20/ Cl 59/ SO4 90/ HCO3 16   Malts • Dark Wheat malt - 6lb 3oz (40%) • Munich Malt - 4lb 10oz(30%) • Vienna Malt - 3lb 2oz(20%) • Caramunich I 12oz (5%) • Chocolate malt - 7oz (3%) • Melanoidin malt - 5oz (2%) •Wheat Malt - 3lb 9.1oz(25%) •Wheat Malt Dark - 3lb 9.1oz (25%) • Pilsner 3lb 1.1oz (21.5%) •Munich Malt - 2lb 15.5oz(20.8%) •Caramel 20L - 5.8oz(2.5%) • Caramunich III - 4.1oz(1.8%) •Carafa Special I - 3.9oz(1.7%) •Special B - 3.8oz (1.7%) • Dark Wheat Malt - 10lb • Pilsner - 5 lb • Munich Malt - 2lb •Special B - 0.5lb • Crystal 40L - 0.5lb • Pale Chocolate 0.25lb Hops • Hallertauer Mittelfrueh 60min 21 IBU • Tettnang 20min 6 IBU • Hallertauer Mittelfrueh 60min 18IBU • Hallertauer Mittelfrueh 15min 5IBU Hallertau 60min 22.7IBU Yeast Imperial Yeast G01 WLP300 WLP300, Wyeast 3068 Mash • 50°C 20min • 66.7°C 60min • 42.2°C 10min • 52.8°C 15min •63.3°C 30min • 67.8°C 45min • 76.7°C 15min 67°C Boil 60 min 80 min 90min Fermentation 17.8°C - 14 days 22.2°C - 3 days 17.2°C - 7 days 21.1°C - 7 days 1°C - 1 days 17°C Carbonation 2.4 vol 3.1 vol 2.5~3 Vol 在我整理這些資料的時候，酒應該都釀好了，也給雙方盲測了，結果應該出來了。不過，可能是因為影片還沒好，所以還沒公佈。剛好我最近因為覺得釀完德式小麥的酵母丟掉很浪費，就釀了一批Weizenbock，就用我粗淺的看法來分析這兩個配方。聲明： 我沒有喝過這個類型的產品，連我自己釀的也還沒喝到（瓶發一週中），只是從我參考的Jamil的配方和個人對BCJP的認知來分析。先說結論：我覺得Meanbrews的配方比較好。先從大同小異的點說起；水質的設定是很相似的，以感官可以感受的差異來說，可以說是一樣的：SO4比Cl是2:1左右，也就是中性偏dry的口感。依我的淺見，這是很理想的水質，可以平衡因為原始比重高帶來的濃厚感，提高易飲性。ChatGPT的OG比較低，但Martin在影片中有說效率比預期應該要低一點的，所以原始目標其實應該是很接近的，我猜測稍微比較高的IBU也是因為原始比重低了點而變高了一點點。所以，在這些數據上應該可以視為很接近的，不過ChatGPT的配方顏色有深一點。酵母基本都是Weihenstephan(Wy3068，WLP300…)，只是不同廠商。有一個有趣的相同點是兩個配方都有15-20分鐘的酒花（我也有加！），在以麥芽（和酵母）風味為主，酒花基本沒有的類型，只用少量的苦花是比較常見的，加入這個可以歸於香花的理由，我覺得是因為BJCP有一句話：（粗翻）”麥芽、酵母和酒精交織產生了一種複雜且引人入勝的顯著花香”。（我個人在釀之前沒看到這一段，不過我注意到酒精度比較高的啤酒常會出現花香，所以決定在15分左右加入我認為有花香的Tettnang。）發酵溫度也可以說很接近，在17度發酵，後期拉高溫度，不過ChatGPT拉高溫度的時間點應該是偏晚了點。比較明顯的差異，首先是糖化行程，Matthew的糖化行程是比較標準和經典的德式小麥糖化行程，主要是有42~43°C的酸休止，這個溫度可以最大地解離ferulic acid，可以產生有丁香風味的4VG，少了這個行程直接從50幾度開始理論上會比較偏香蕉風味。Matthew有Mashout，ChatGPT沒有，理論不會有太大的差異。煮沸時間上，小麥啤酒通常是90分比較多的，ChatGPT可能是因為沒有用Pilsner就認為不需要90分鐘（也有可能就是用預設的60分）；我認為小麥用量比較多，用90分的煮沸可以比較好地降解和變性蛋白質，另外比較長的煮沸時間也對效率比較有利。碳酸化方面，如果照BJCP是”Moderate to high”，ChatGPT用的2.4是偏低的。最後是差異最大的麥芽；兩個配方的麥芽都有點複雜。我依照基礎麥芽、水晶麥和燒烤麥芽來說明我的看法。基礎麥芽：ＣhatGPT用了深色小麥芽、Munich和Vienna；Matthew 則用了深色及淺色小麥芽、Pilsner和Munich。很明顯地，都在強調麥芽風味及所謂的”toasted”風味。老實說，我不確定在用了不少水晶麥和燒烤麥芽的深色啤酒中，這樣的基礎麥芽組成會有多少差異，所以就只能列出來讓看倌們自行想像。不過，ＣhatGPT的配方組成有一個潛在的問題：糖化力。一般來說，Munich麥芽的糖化力大概剛好可以糖化自己，而深色小麥芽的糖化力雖然我不清楚，但依其顏免判斷，糖化力應該也是偏低的，唯一糖化力比較高一點Vienna只佔20%。糖化力偏弱，結果就是Martin在影片中說的原始比重比預期的低。水晶麥：ChatGPT用了Caramunich I(5%)；Matthew用了Caramel 20L和Caramunich III，合計4.3%，另外有Special B 1.7%。我其實也不能從字面上看出水晶麥對風味的影響，只能膚淺地說多種的混合理論上會有比較複雜的風味，而”複雜”有時候是正向的，有時候是負向的。比較值得注意的是Special B，Special B在Malt書中的歸類上其實不是水晶麥，因為它是水晶麥的製程後再去烘烤過的，它的特點就是葡萄乾的風味。在BJCP的說明中，這個風味是可有可無的。在Meanbrews的影片中有提到Special B的使用有逐年上升的趨勢，所以他也用了。我個人的看法是：如果要說這個跟Brewing Classic Style無關，我是不相信的。分析燒烤麥芽之前，先來討論BJCP中提到的toast和roast： 「更豐富的麵包或烤麥芽(toast)風味」「深色版本可以選擇添加輕微的巧克力風味（但不是烘烤roast）」。這兩個詞我覺得沒有很好的中文翻譯，很不巧地，我也沒有看到比較肯定的定義。在Malt這本書中，”烤”麥芽只有兩種：kiln和roast，前者是是鋪平烘乾，後者是用滾筒烘烤。在我所看到的有限資料中，通常Black malt、Roasted barley和Chocolate Malt通常會被歸為Roasted，而Biscuit Malt則是”Toasted” malt的代表。有看過有些人會把toast說成”烤土司”的風味，我認為這是很接近的說法和概念。如果我的認知是正確的，ChatGPT用了8oz的Chocolate就有點過量了，我猜測是因為BJCP中說有”巧克力風味”的關係；相對地Matthew用了比較少的Carafa Special I，Carafa Special系列是去殼的版本，會減少燒烤和澀味，我認為是比較正確的選擇。最後是沒有提到的Melanoidin malt；Melanoidin malt屬於Brumalt，在Malt書中的說明，它的製程和基礎麥芽類似，顧名思義，Melanoidin malt主要是提供了梅納反應物的風味，通常用在取代decoction或提高麥芽風味。不過，在己經用了不少含有很多梅納反應物麥芽的深色啤酒是比較少見的。我猜測是因為BJCP的文字中有強調梅納反應或是傳統德式小麥會做decoction，所以ChatGPT就加入了Melanoidin Malt。最後同場加映Brewing Classic Styles配方的個人分析。Brewing Classic Styles這本書的配方據說幾乎都有得過奬，也是我在第一次釀沒釀過類型時會先參考的；我甚至認為這本書的配方影響了眾多家釀甚至是BJCP評審對一些類型的風味認知。這個Weizenbock的配方除了在書中出現，也有在BYO雜誌的2012 1-2月刊出現過。Matthew的麥芽配方和這個配方比較相似-我猜使用Special B的上升趨勢和Brewing Classic Styles可能多少有關，在BYO中，Jamil有強調使用大於200L以上深色麥芽時，要注意用量不用過度，顯然ChatGPT沒有讀到這本書或是沒有採用這個說法。在糖化行程方面，Jamil一直是單一糖化溫度的擁抱者，即使是傳統階段糖化的小麥，他也是用單一溫度。17°C的發酵溫度是Jamil很強調認為香蕉和丁香風味可以平衡的溫度，看來兩個配方不是受到影響，就是英雄所見略同。應該不到一個星期就會有結果的公布，我當然是看好Matthew的配方，不過口味一向是很見仁見智的問題，不管是那邊獲勝了，這都是一個有趣的主題。結果更新:Martin請了三位BJCP評審評分比較，另外也把酒寄給Matthew；Matthew”盲飲”比較，挑中了自己的配方；而BJCP的評審一致認為ChatGPT的比較好。其中的一個理由是ChatGPT的香蕉味比較明顯，而Matthew的配方結果香蕉味不太明顯，相對地丁香味比較明顯，讓評審認為偏比利時風味。從配方來看，Matthew很明顯的就會比較有丁香味：第一，他的糖化多了酸休止，第二，他強調要用3公升的擴培量，第三，他的發酵溫度稍微低一點（17.2°C vs ChatGPT的 17.8°C）。雖說如此，幾乎沒有香蕉味是有點奇怪。另外，Martin在釀Matthew和ChatGPT的配方時都有一點失誤：比重比預期低，ChatGPT的配方沒有處理，而Matthew的有加麥芽精，但煮沸完結果OG比預期高，理論上OG比高，香蕉味會比較高，但或許是酵母接種率比較高蓋過了這個因素。我的預測失準，不過仔細看了這三個影片，頗有獲益。建議對這個類型有興趣的人，可以仔細觀看，一定會對你設計配方有幫助。參考連結： Brulosophy Show https://www.youtube.com/watch?v=JFWvRu1psyY 配方： https://web.brewfather.app/share/0Ha9QnoPAnK2Xh Meanbrew https://www.youtube.com/watch?v=2I4WYwiJy7E 配方： https://web.brewfather.app/share/gu4tO3fUgqiMHswRwgK0HIkY8EXvdt 結果： https://youtu.be/F9WstUQwIW4?feature=shared" }, { "title": "Quick Sour(Kettle Sour)", "url": "/posts/quick-sour/", "categories": "釀酒筆記", "tags": "", "date": "2023-06-11 00:01:35 +0000", "snippet": "前陣子去參加了Fermentis開的課，加上最近Brulosophy又討論了kettle sour，想到了我幾年前有搜集整理過一些資料，稍微整理排個版，分享給大家。這些資訊基本上都不是我原創的，只是搜集資料整理的，如果英文能力允許，推薦Dr. Lambic的Sour Beer Blog，以及資訊又多又細到令人髮指的Milk the Funk。因為是幾年整理的，比較新的產品像Philly So...", "content": "前陣子去參加了Fermentis開的課，加上最近Brulosophy又討論了kettle sour，想到了我幾年前有搜集整理過一些資料，稍微整理排個版，分享給大家。這些資訊基本上都不是我原創的，只是搜集資料整理的，如果英文能力允許，推薦Dr. Lambic的Sour Beer Blog，以及資訊又多又細到令人髮指的Milk the Funk。因為是幾年整理的，比較新的產品像Philly Sour、sourvisiae就沒有含括了，主要是針對kettle sour的資訊。Quck Sour &amp; Kettle Sour酸啤是是很多自釀者的聖盃，但不少人都不敢嘗試，因為進入酸啤有兩大障礙：一，使用了除了釀酒酵母外的菌種會造成後續的非預期”感染”；二，傳統酸啤需要數月到幾年的時間。常見的酸啤菌種有三種： Brettanomyces簡稱Brett ，據說是以17世紀以前英國ale主要的酵母，現在主要出現在比利時的酸啤中。它能夠產生複雜的風味；常被形容成馬衣、皮革味，大多能處理很多種糖，甚至包括木頭，但發酵速度很慢。 Pediococcus比利時啤酒中酸味的來源之一，常和Brett一起發酵。有時會簡稱Pedio。 Lactobacillus乳酸菌，簡稱Lacto。能夠產生乾淨的酸味，是快速酸啤酒釀法採用的菌種。相對於乳酸菌，Brett和Pedio是較難掌握，而且目前對它們的認知也是比較不清楚，所以下面Brett和Pedio就不討論了。乳酸菌則不僅存活在我們週遭，更被當成了益生菌，也是做為quick sour的主要菌種。Berliner Weisse和Gose是酸味主要來自乳酸菌的兩種類型(*註1)， 傳統的釀造法大多是採用同時發酵法，也就是讓Ale酵母和造成酸味的乳酸菌同時發酵。這種做法很費時，需要數個月，而且因為同時兩種以上的菌種存在，造成發酵過程難以控制，很難釀造。如果只是要酸味，直接在釀好的啤酒中加入食品級乳酸是一個簡單的方法；或者如果要符合啤酒純淨法，加入大量的乳酸麥芽。這種做法可以做出很乾淨的酸味，或者說很單調的酸味。但做為嘗試，也未嘗不是一種簡單有趣的做法。在 Designing Great Beer中有提到曾經有人用這種方法釀Berliner Weisse而進入第二輪的比賽，可見這種做法也不是毫無價值。除了同時發酵外，另一種做法就是分開發酵；先讓Ale酵母(Sach. cervisieaa)發酵，再投入酸啤的菌種，由於酸啤的菌種(brett)可以處理Ale酵母不能處理的糖，所以發酵還是可以繼續。另一種就是先讓乳酸菌發酵產生酸味，然後再投入Ale酵母進行正常的發酵程序。一般稱Fast(Quick) Sour是指後面這種方式，因為乳酸菌能夠在24-72小時內酸化麥汁，所以整個釀造過程可以縮短到最快兩個星期內。Fast Sour也在不同的階段”酸化”的做法，一是”麥醪”（Mash），二時在煮沸鍋中，三是在發酵桶內。 Sour Mash/Sour Mashing在糖化結束後，降溫到120F/49C，接種乳酸菌。酸化完成後，再繼續Mash Out、Sparge等流程；一直到接種都和原本流程一樣。優點是乳酸菌只出現在鍋內，煮沸後的麥汁不會有乳酸菌，所以不會污染發酵桶等，但這個做法是最容易有不良風味的，因為麥芽中存在著除了乳酸菌以外的各種無法計數的雜菌。 Kettle Sour/Sour Kettling和Sour Mash很像，但是在糖化洗糖結束後、煮沸之前；這個方法是最多人使用的，因為提供了很多彈性，像是酸化前要不要煮沸、酸化後要不要保留乳酸菌等。酸化以後不再需要乳酸菌，煮沸中及之後要加多少酒花都不影響，這也是優點之一。 Sour wort in Fermenter乳酸菌酸化在發酵桶內接種，通常這種方法在最後成品中會留下乳酸菌。成品的穩定性及可能污染發酵桶是這個方法的缺點。Kettle Sour是最多人的選擇；很多人在說quick sour時，指的就是kettle sour，甚至kettle sour比quick sour更多人說。菌種來源乳酸菌的來源有商業菌種、優格、益生菌、麥芽等。除了從酵母廠商購買的菌種是最安全的做法，其他的方式都存在較高的風險。優格中存在的菌種通常沒有標示清楚，相對地，益生菌廠商通常會標示產品中含有的成份，是除了酵母廠產品外比較好的選擇，但要注意挑選，含有某些菌種的要避開。益生菌產品通常都是數種菌種的組合，不是所有的”益生菌’都適合做酸啤。菌種可以分成四類： 適合的菌種 Lactobacillus sp. (任何 Lactobacillus類的） 比較常見的有 Lactobacillus plantarum 跟 Lactobacillus rhamnosis 無所謂的菌種 Bifidobacteria sp. Streptococcus thermophilus Leuconostoc sp.這些種類在麥汁不太能夠生存，即使有活動，也只會產生很輕微的異味。 儘可能避免 Saccharomyces sp. (比較常見的是 Saccharomyces boulardii.)這些菌會和乳酸菌競爭，消耗糖份並產生酒精，如果接下來還要煮沸，酒精就被煮掉了。 一定要避免 Colstridium sp. -產生丁酸(butyric acid)，味道像帕拉馬起士和嘔吐物混合。 Enterococcus faecium - 產生 bioactive amines Bacillus sp. - 產生 diacetyl 和 bioactive amines 如果能找到單一菌種是最理想的，例如Swanson有出L. plantarum的單一菌種產品。以下是各種常見菌種的特性： 菌種 同質/異質 商業產品 發酵溫度 L. plantarum (植物乳酸菌) 兼性異質 Bootleg Sour Weapon L\t Escarpment Lacto. Blend(B) Fermmentos FB7(B) Lallemand WildBrew Mainiacal MYLP1 Mainiacal MYLP2 Omega OYL-605(B) The Yeast Bay L. Blend(B) OYL-605 18-32C L. delbrueckii (德布律克氏乳酸菌) 同質 Brewing Science\t Craft Cultures CCYL510\tFermmentos FB12(B)Inland Island INISBC-992 Giga Yeast GB110(?)Mainiacal MYLD1WLP677(?) WLP677 32-46C\t GB110 29-35 L. brevis (短乳酸菌) 異質 Craft Cultures CCYL512 East Coast Yeast ECY32 Escarpment Lacto. Blend(B) Escarpment Lacto. Brevis Fermmentos FB7(B) Inland Island INISBC-991 Mainiacal MYLB2 Omega OYL-605(B) The Yeast Bay L. Blend(B) The Yeast Bay TYB282 WLP672 Wyeast 5223-PC WLP672: 27-43C OYL-605 18-32C L. rhamnosus (鼠李糖乳酸菌) 異質 Fermmentos FB12(B) RVA 600   L. fermentum (酵素乳酸菌) 異質 Inland Island INISBC-993   L. buchneri (布氏乳酸菌) 異質 Wyeast 5335 29-35C L. acidophilus (嗜酸乳酸菌) 異質 優格 黏調性 L. bulgaricus (保加利亞乳酸菌)   優格 黏調性 從上表來看， L. plantarum (植物乳酸菌)\t、L. delbrueckii (德布律克氏乳酸菌) 、和 L. brevis (短乳酸菌)是最受歡迎的三個菌種。其中L. delbrueckii被認為是用來釀造Berliner Weiss的菌種，而 L. plantarum (植物乳酸菌)則有發酵快速且幾乎不產生醋酸等優點而廣受歡迎。在優格中常見的L. acidophilus (嗜酸乳酸菌)會產生黏調性（Ropey)，對優格是件好事，但對啤酒則不一定是，所以使用時要注意。從麥芽中取得乳酸菌其實乳酸菌存在於我們生活週遭，包括人體。一般而言，除非有檢測的儀器和能力，並不建議從人體奇怪的部位取得乳酸菌。而釀啤酒的環境中，麥芽便是方便而簡單的乳酸菌來源。最簡單的方方法就是在麥汁中灑一把沒有磨過的麥芽，讓附著在麥芽表面的乳酸菌發揮作用，但這種做法風險極高，因為麥芽表面有數不清的其他雜菌。如果無法用其他方式取得乳酸菌、不得不用麥芽，可以考慮先「擴培」再使用，以降低風險。擴培方式： 準備1.040的麥汁 用88%乳酸將麥汁的pH值降到4.0~4.5 加人一小把沒有磨碎的麥芽，通常是pilsner 用汽泡水把瓶子加到滿 蓋上蓋子，加上水封 維持40度左右2~3天正常的話，12~24小時後，會看到很多乳酸菌發酵產生的泡泡，最後pH值應該會到達3.2上下或更低。如果也沒有異味產生，應該是成功的，把麥芽濾掉剩下的麥汁就可以拿來用。這個做法主要是利用無氧、　低pH、高溫來創造有利乳酸菌的環境並抑制雜菌。理由在下一段落說明。不良風味及對策正常的乳酸菌發酵會有一點類似潮濕地下室的霉味，也像是酸麵包的風味；而這些風味很容易被啤酒中的其他風味掩蓋，但絕對不會發出臭味。乳酸菌發酵後的麥汁可能會有這些味道： 霉味或麵粉味 甜味（麥汁的甜味） 有點奶油味（某些菌種會產生diacetyl）乳酸菌又分成兩個群組，一是同質發酵(homofermentative)和異質發酵(heterofermentative)。同質發酵的只會產生乳酸，而異質發酵的則可能會同時產生酒精、二氧化碳、醋酸。可能的不良風味及其原因如下： 帕馬森起司或腳臭 - Isovaleric Acid 嘔吐或膽汁- Butyric Acid 糞便味- Aromatic Indole 強烈的醋味 - 醋酸 OK絆、藥水味- Phenolic避免異味的對策 乙酸(Butyric Acid)最常見的是Clostridium族系的菌，超過112F/45C就會死亡，pH值低於5.0就失去產生己酸的能力，當pH值小於4.7時，這種細菌的幾乎沒有活動力。所以理想的乳酸菌發酵條件可以是pH 4.5以下，溫度112F以上。 吲哚（Indole)產生吲哚的菌類包括了Citrobacter, Klebsiella, Enterobacter, Escherichia等。這些菌大多在pH接近4.4時就無法繁殖或進行生化作用。 異戊酸(Isovaleric Acid)比較肯定的來源之一是Bacillus subtitles，而這種菌需要氧氣，所以隔絕氧氣是很重要。而另一個來源則是乳酸菌和Streptococcus thermophilus交互作用而產生的。只有乳酸菌本身不會產生異戊酸，但當Streptococcus thermophilus存在時，會產生讓乳酸菌可以產生異戊酸的中間產物。Streptococcusthermophilus的生存條件和乳酸菌一樣，唯一的方法是確實的消毒。實做建議Kettle sour的建議流程： 如平常的做法一樣糖化（視個人需求及系統做Mashout、洗糖）。 糖化後一樣將麥汁收集在煮沸鍋，短暫地煮沸10分鐘。 冷卻到40C。 用乳酸調整pH值至4.5以下。 接種乳酸菌。 避免接觸氧氣；可以將麥汁移到另一個可密封的容器。如果不想用其他容器，可以把麥汁留在煮沸鍋中，在麥汁表面用保鮮膜蓋住。 將麥汁維持35-40度，直到理想酸度（3.2~3.5）。 煮沸及發酵如同一般啤酒。重點及說明 最好可以有量測pH值的儀器。 優先考慮市售菌種，其次是挑選過的市售益菌。 預先將pH值降低到4.5以下除了可以避免產生乙酸和吲哚，也可以避免肉毒桿菌產生毒素。另外，乳酸菌在發酵時會分解某些蛋白質，影響泡沫的持久性，預酸也可以避免或減少蛋白質的分解。 接種乳酸前短暫煮沸可以消滅大部分雜菌。 避免接觸氧氣可以防止Bcillus subtitles等菌產生異戊酸，同時避免產生膜。記錄| — | — | —- ||Costco無糖希臘式優格 | L. bulgaricus, Streptococcus thermophilus, L. acidophilus, Bifidobecterium latics, L. casei | ||福樂頂極希臘式優格 | Streptococcus thermophilus, L. debrueckii, L. rhamnosus, L. Plantarum | |FAQ 要酸到多酸才適合？A: pH值和酸度並不是直接的關係，要知道多酸必須用滴定的方式來測量，而且酸的感受也受到甜度的影響。例如可樂的pH值很低，但大部分人不會覺得很酸。不過如果酸都同樣來自乳酸，pH值的參考性就大幅提升了。一般來說目標pH值是在3.2~3.5之間。 可以只靠乳酸菌不用酵母嗎？A: 不考慮特殊條件，簡單的答案是不行。乳酸菌雖然產生乳酸，大部分的乳酸菌在低於pH值3.2~3.0以下是無法作用的，在消耗掉很少的糖份後，便會停止作用，留下的是極少酒精度、又酸又甜的麥汁。因為還有很多糖份，其實是很不穩定的。 不用pH計如何判斷，可以用比重計嗎？A: 乳酸的比重比糖高，所以比重計無用武之地。沒辦法量測pH值的話，有人會建議用舌頭嘗，但我不建議如此；一來因為還有很多糖，酸度感受不準，二來如果不是用純的菌種，在煮沸前最好不要喝。 酵母會受到酸化影響嗎？A: 視菌種而定，大致來說，發酵會比較慢一點，但不會差太多。 膜有什麼影響嗎？A: 如果是乳酸菌產生的，沒有太大的影響，但沒有必要。 養樂多可以用嗎？A: 可以。養樂多的菌種是L. casei的一種，也算是不錯的菌種。網路上可以找到有人成功地用養樂多酸化。不過，一瓶養樂多的菌數用來酸化5加侖或19公升是不太夠的。根據Milk The Funk，5加侖需要100~125 billion(十億)，而根據Dr. Lambic，則需要~200billion才能在24~48小時內完成酸化。根據食品法規，養樂多的菌數是100百萬/ml，一瓶100cc才10billion，和理想數值差距過大，所以可能需要多瓶或更多的時間。註*1 據考據傳統的Berliner Weisse也有使用Brett。Reference: Lactobacillus, Milk the Funk WiKi Sour Beer Blog Physiology of Flavors in Beer – Lactobacillus Species Choosing the Right Probiotics for Souring Beer Kettle Souring Beer- Brewing Techniquesby BeerSmith blog Berliner Weisse (Napoleon’s Champagne) by BYO Gose - Brew Your Own" }, { "title": "裝瓶詳解", "url": "/posts/bottling/", "categories": "釀酒筆記", "tags": "", "date": "2022-12-06 00:01:35 +0000", "snippet": "前言氣泡可以說是啤酒最美妙的成份之一，而氣泡的成因就是過量的CO2溶於啤酒中，當瓶蓋打開，在一大氣壓下，超過的部分CO2便離開啤酒，成為氣泡冒出來。瓶發(Bottle condition)的基本就是把糖加入發酵完的啤酒後密封，讓酵母吃掉這些糖，產生多餘的CO2，而因為密封，CO2不會散逸，便溶於啤酒中，等待開瓶的時候便化為氣泡冒出。裝瓶就是氣泡魔術的重要準備工作，也是自釀的入門技術，但裝瓶其...", "content": "前言氣泡可以說是啤酒最美妙的成份之一，而氣泡的成因就是過量的CO2溶於啤酒中，當瓶蓋打開，在一大氣壓下，超過的部分CO2便離開啤酒，成為氣泡冒出來。瓶發(Bottle condition)的基本就是把糖加入發酵完的啤酒後密封，讓酵母吃掉這些糖，產生多餘的CO2，而因為密封，CO2不會散逸，便溶於啤酒中，等待開瓶的時候便化為氣泡冒出。裝瓶就是氣泡魔術的重要準備工作，也是自釀的入門技術，但裝瓶其實也是有很多不同的選擇和做法，同時也是社群網站上很常出現的問題。我整理了一些個人經驗和曾經看到的資料，供大家參考。名詞釀酒的很多名詞都來自德國和英國，因為美國自釀者多，很多資訊來自英文，某些名詞可能有不同的翻譯，在此先解釋一下。 瓶發(Bottle Condition)，啤酒在發酵結束後，添加可發酵糖再封入瓶中進行產氣的動作。也有人喜歡叫「二發」，因為二發和Seoncdary Fermentation(我個人會傾向翻成「次發酵」)極為相似，所以採用比較不混淆的「瓶發」。附帶一提，比利時是用Refermentation這個詞，或許也可以稱為「再發」… 頭部空間(headspace)，在裝瓶中，頭部空間指的是瓶子中沒有裝滿啤酒而留下的空間。因為空氣的壓縮能力比較高，有頭部空間面對熱漲冷縮比較有緩衝的空間，也就比較不會爆瓶。 碳酸化(Carbonation)，指的是讓CO2溶入啤酒形成碳酸、或是讓啤酒產生過量的CO2溶入啤酒。比較通俗好理解的說法就是充氣。 碳酸化程度(Carbonation level)，指的是溶入啤酒CO2的多寡；有兩種單位，一是氣體數(Volume)：溶於啤酒的CO2在標準狀態下的體積是啤酒的幾倍，二是g/L:每公升啤酒中含有的的CO2重量。兩者換算公式是：g/L=氣體數x1.96。似乎是德國人習慣用g/L，家釀界和美國比較常用氣體數，所以大部分我們都用氣體數的單位。不同的類型適合不同的氣體數，例如Stout或英式啤酒通常是比較低，而小麥啤酒、比利時啤酒則是比較高。BJCP有針對每個類型的Carbonation程度做規定，但只是用High, low, medim等等字眼。一般來說，High是3或更高個氣體，Low是2或更低氣體數，而Mideum則是2.5上下，例如medium to medium-high的字眼，可以翻譯成2.5~2.7之間器材壓蓋器(capper)不考慮法拉利等級的氣壓式封蓋器，比較常見的有兩種，一種是雙翼式(Wing capper)，另一種是桌上型 (Bench capper)。雙翼式的優點是不受限於瓶高，體積小巧，但瓶頸要有一個凸出可以卡住才能用，不過幾乎可以封蓋的瓶子都有，所以不是什麼問題。桌上型體積較大，但比較省力，瓶數比較多的比較適合用桌上型的，但瓶子高度不一致，需要調整高度。我個人原本偏好體積小好收納的雙翼式，但用壞了4支、壓斷三支瓶子後，改用桌上型的。除了很多雙翼式的部件是塑膠做了，不耐用，也因為雙翼式是夾、卡住瓶頸的凸出，然後壓迫瓶蓋，可能是故障還是用力過猛，我直接夾斷過三支瓶子。桌上型的是直接從上壓下，所以沒有這個問題，但有瓶子高度調整的問題。如果不排斥桌上型的體積大，比較建議桌上型的。不壓蓋的話，可以使用保特瓶或搖擺蓋的瓶子。保特瓶儘量選擇褐色的，否則要避光。另外，氧氣會滲透保特瓶，所以不適合長期存放，一般建議不要超過3～6個月。如果是小批量的，或是飲用速度快的，這個問題倒不是很大。搖擺蓋看似方便，但有兩點要注意：一是它的橡膠或矽膠墊以及鋼絲可能隨著長期使用而變型或老化，有更換的必要。二是如果壓力大，比瓶蓋更容易洩氣。依我的經驗來看，搖擺蓋的密封程度比一般皇冠蓋差，3~6個月內還不明顯，超過6個月時，搖擺蓋會開始有比較明顯的氧化風味。導酒管(Bottling Wand)為了避免潑濺而導致溶入大量氧氣，裝瓶時最好將導管壓到瓶底，讓啤酒從瓶底往上裝滿。導酒管(Bottling Wand)是一根管子，管子底部有彈簧壓住一個閥門，裝瓶時，插入瓶子，壓到瓶底打開閥門讓啤酒流出，啤酒到達瓶口最上端時，拔出導酒管留下的空間剛好是頭部空間，非常方便。導酒管的缺點：如果有沈澱物(trub)卡在出口處，會造成密合不完全，拔出酒瓶時啤酒滴滴答答的；另外出口的構成稍微複雜，使用前最好拆缷消毒。我從洺呈那邊學到了另一個方案，把導酒管的出口構成整個拆掉，只留下管子，然後在管子前端的矽膠管用管夾來控制啤酒的輸出。這個做法除了避免出口卡住的問題，也可以任意決定頭部空間的大小。不過，管夾並不是設定用來動態開關旳，操作上有點不順手，後來我用BierMuncher Bottling Filler的方法，也就是用一個簡易啤酒出酒頭套上管子的方法來裝瓶，控制上方便許多。缺點是多了一個出酒頭，清潔消毒要特別注意。也是有人不使用導酒管而直接從出酒龍頭控制的，但一般的出酒龍頭不容易控制，所以比較少人會這樣做。裝瓶桶(Bottling bucket)裝瓶桶也就是一個一般的桶子，通常會裝龍頭，方便裝瓶。使用裝瓶桶的最主要目的在於把啤酒和底渣(trub)分離。有些人用的玻璃發酵桶是沒有出酒龍頭的，用虹吸管直接裝瓶很難操作，先把啤酒吸到另一個桶子會容易許多。另外，有的發酵桶是不透明的，把啤酒移到裝瓶桶也方便確認最終的啤酒有多少。使用裝瓶桶的缺點是增加接觸氧氣的機會，以及多用一個器具，增添感染機會及清潔和消毒的麻煩。Bottle Tree/Bottle Rack酒瓶在清洗完最好是倒放，除了容易晾乾，也可以避免落塵和落菌漂入。Bottle Tree便是用來晾酒瓶的一種架子。Bottle Rack則是Fastrack出品的同樣功能的產品。也有人用塑膠盒或木板鑽洞做出類似的東西。Vinator一種方便使用消毒液消毒瓶子的工具。把消毒液放入，用瓶子按壓個幾次，就可以把消毒液沾到整個瓶子內部。如果是使用消毒液消毒，十分推薦。有的Vinator可以安裝在bottle tree上面配合使用。準備工作裝瓶時機至少等到比重連續三天沒有變化才能裝瓶。如果是類似Saison這種通常是S. cerevisiae var. diastaticus的酵母，可發酵糖吃完，還會慢慢地吃不可發酵糖，一定要多等幾天，甚至即使有多等幾天，也不要用太高的碳酸化程度，保留空間。酵母發酵時，並不是直接吃糖進去排出酒精和CO2，而是有中間階段的產物，偶而會有一些中間的產物洩漏到細胞外，有時候這些物質會再反應成其他物質，比較常見的就是丁二酮(Diacetyl)和己醛(Acetaldehyde)，前者是奶油味、後者是青蘋果的不良風味。這些物質其實酵母都還可以回收再利用，當可發酵糖都吃完時，還是會繼續處理這些物質。所以即使發酵「完成」，已經到了最終比重，再多放個三到四天，讓酵母有機會把這些可能造成不良風味的物質處理完會比較好。酒瓶消毒酒瓶的乾淨是很重要的，比起消毒，清潔更重要。事實上，有人試過清潔完晾乾後不消毒就裝瓶也沒有感染，畢竟乾燥會讓一大部分的菌無法生存，啤酒本身也有某種程度的抗菌能力。不過安全起見，不建議冒險。酒瓶的消毒主要有兩種，一是熱消毒（蒸煮法），二是清毒液（酒精、Starsan、Iodophor、二氧化氯等等 )。另外，國外也有些人用利洗碗機的殺菌功能的，這基本上也是一種熱消毒。蒸煮法的優點是天然又完全不殘留，但瓶子數量多時會需要很大的鍋子。一般台灣家釀常用的28公升鍋子，大概可以放下30瓶左右，但20公升的批次大約需要50瓶上下。蒸煮完還要等它冷卻，費工費時是最大的缺點。用消毒液配合Vinator是最快速方便的方法。但消毒液的特性不同，使用上要針對不同的消毒液特別注意。最受歡迎消毒液之一就是starsan，因為它是no rinse，也就是不怕殘留，消毒後不需要再沖洗的。用酒精要注意市面上75%酒精有的不是真的75%，而有的有加苦味劑或其他可能不適合食用的東西；用酒精消毒可能也需要注意瓶子要乾的，不然如果只噴了少許酒精，在表面和水混和，就可能不是殺菌力最強的75%了。大部分的消毒液是用氧化的特性消滅雜菌，但starsan是用界面活性配合磷酸來破壞細菌。starsan使用上是依比例和水混和，要注意的是如果是硬水，混合出來的starsan消毒液會是混濁的，雖然pH值在範圍以下一樣有效，但觀感不佳。如果家中的水質偏硬，可以考慮買大桶(4～6公升）的純水或蒸餾水，倒出一小部分，加入指定比例的starsan原液，就成了一桶4~6公升的starsan消毒液了，因為是純水，可以保存很久，依我的使用習慣，可以用三到四批以上。這樣做的話，注意瓶子要做記號，以免不小心被家人當成水拿去喝。建議酒瓶喝完就清洗並倒置晾乾，到了裝瓶日，只要沖掉表面灰塵，然後消毒即可。瓶發糖(Priming sugar)針對瓶發糖有兩個主要的問題：一是什麼糖、二是多少糖。理論上，只要是酵母可以發酵的糖，都可以當成瓶發糖，但是不同的「糖」，可以發酵的糖含量不一樣，在計算量上要根據比例修正。比較常見的是蔗糖，而二級砂糖據自釀界前輩說會產生酸味，所以不建議使用。其他的則有蜂蜜、楓糖、黑糖等等。不過，想要用瓶發糖的方式增添風味，通常要加到爆瓶的程度，所以並不建議。加多少糖則視想要多有氣而決定，也就是碳酸化程度(Carbonation Level)，除了參考BJCP或各網站的資訊也可以依個人喜好選擇.決定了想要的氣體數，便可以決定要加多少糖，但要注意的是，啤酒發酵過程中其實一直在產生CO2，剛開始產生的CO2會溶於啤酒中，直到超出飽和濃度，才形成氣泡。也就是說，在發酵完時，啤酒中已經溶有飽和濃度的CO2了，在計算需要的瓶發糖時，要把已經溶在飽合濃度的CO2扣掉才行，而飽和濃度和溫度有關，溫度愈低，飽和濃度愈高，能溶於啤酒中的CO2愈多。如果發酵完有冷降(cold crash)降溫，需要輸入發酵結束時的溫度。溫度降低時，雖然飽和濃度會提高而有多一點點CO2會溶入啤酒，實際上這部分的量會少到可以不計算；而如果發酵後又升溫，CO2便會逸出啤酒，即使之後再降溫，CO2也不會全部回到啤酒中。所以計算瓶發糖時所需要的啤酒溫度是”發酵完後的最高溫”。計算的公式有點有平方加上好幾位小數，只有很少數人可以心算出來，所以可以用網路上的計算器計算。Brewersfriend.com計算器我寫旳計算器加糖加糖有兩種方式：批量和單瓶。批量是比較簡單的方式，也就是把所有的糖和啤酒混在一起。因為砂糖溶解並不快，所以加一點水煮成糖水再放涼會是比較好的方式。使用蜂蜜時，除了用量要修正，更該注意是否有雜菌，有些蜂蜜有經過巴殺，有些則沒有，用到沒有殺菌過的蜂蜜可能導致感染。如果不使用裝瓶桶，直接把糖水加入啤酒，只靠擴散讓糖和啤酒充份混合可能需要很長的時間，所以需要輕微的攪拌均勻，過程難免激起已經沈澱的酵母等沈澱物。可以在混合好糖水後，稍待片刻，讓提起的底泥沈澱，也讓糖更加均勻混合。除了擾動底泥外，打開發酵桶加糖水時及攪拌時會有不少的機會接觸空氣。如果使用裝瓶桶，可以先把糖水放入裝瓶桶，然後引啤酒入裝瓶桶混合，但是如果因為發酵桶限制而不能確定啤酒量有多少，先放糖就會有多放或少放的問題。此外，因為通常糖水密度會高很多，糖水加在下面，密度比較低啤酒從上䨱蓋，正常情況下，可能不容易混合均勻，如果糖水很濃稠，流動性又會更差，雪上加霜。一般建議導入啤酒時，斜放酒管，讓啤酒自然形成一個小旋渦進入裝瓶桶比較容易充分混合。如果是先把啤酒轉到裝瓶桶再加糖，也會需要輕柔地攪拌讓糖水快速地均勻分散。不管是那種方法，都無可避免要擾動啤酒。批次量加糖偶而有分佈不均的問題，網路上三不五時就有人會有這種問題，大致來說沒有攪拌發生問題的機率會高很多。直接從發酵桶把啤酒裝入酒瓶，糖也直接加入瓶中可以減少接觸空氣的機會。可能方法有： 特製瓶發糖球(Carbonation drop) 用小勺子真接把固定量的糖加進去 用針筒加糖水 用定量糖漿壓瓶加糖水Carbonation drop是把糖做成適量大小的糖球，方便投入瓶中的一種產品，根據產品不同，通常是一瓶丟一顆，有的是針對500cc的，也有針對330cc的，如果是針對330cc的糖球要投入500cc的可能需要切半。雖然方便，但價格較高，而且不能根據不同的啤酒類型和溫度微調。另外，在台灣不方便買。直接加砂糖就可以微調，但是如何精準地取到目標重量會很花時間，另外，瓶口很小，可能消毒液也還沒乾，要小心的放進瓶中也是要費一些心力。因為滲透壓的關係，幾乎沒有細菌可以在糖的表面存活，但是存在細菌的孢子卻不無可能，不過要能在發酵完的啤酒中生長的細菌可能也不會太多，所以直接用糖而感染的事情雖然是可能的，但很少聽說。加水加熱消毒是比較安全的做法。如果糖水的含糖量是正確計算，用針筒加糖水是可以很精準的。整批加糖除非是用秤的，啤酒量的估測可能不會很準確，加上有糖的分佈不均的可能，用針筒加糖水到單瓶應該是包括整批加糖的所有方法中最準確的做法。定量糖漿壓瓶是飲料店使用的一種工具，壓一次會出來大約一樣的量，沒有正確使用的話誤差其實頗大，必須要用穩定的速度去壓才會得到接近的量。用針筒或定量壓瓶都是控制體積，調製糖水的方式是先加糖，然後加到目標體積。例如，要加的糖是3g，針筒要取10cc，先加3g糖，再加水至10cc。要裝幾瓶就乘以幾倍，不過建議多準備10%以上；用不完雖然浪費，但到見底時要吸到最後一滴也是有難度的，而且如果不夠，裝瓶裝到一半要從新調製很麻煩。Reyeasting/Bottling yest在How To Brew或某些書上會提到如果發酵完放很久，酵母可能會失去活性，這時候就必須添加酵母來完成瓶發。也有某些流傳的說法，有些酒廠裝瓶前會先過濾掉發酵用的酵母，再添加不同的瓶發酵母，以避免酵母被偷。有些書也有提到，為了不形成底泥或能在比較低的溫度瓶發成功，雖然是Ale，可以添加lager酵母作為瓶發酵母的。實務上，自釀需要增添瓶發酵母的需要很少見，但如果酒精度很高(&gt;10%)，又放很久，還是有可能需要添加。只要可以吃糖產氣，而且不影響風味的，都可以拿來當瓶發酵母。有些人會用能在高酒度存活的香檳酵母，也有專門用來瓶發的酵母，例如Lallemand CBC-1。熟成時間幾乎大部分的自釀的書都建議裝瓶後至少等待兩個星期。雖然大致上是正確的，但還是要考慮特殊條件。實際上，在20~30度的室溫下，酵母大約三天甚至更快就把糖吃完了，但很多人都表示太早開瓶風味不佳。有一個代表現象是，酒精在接觸氧氣會轉成乙醛(Acetaldehyde)，乙醛在書上的說明是青蘋果，但不是大家在市場買的日本青蘋果，而是沒有成熟會酸的青蘋果，所以會有點酸感，如果不是感染，通常再放一陣子這個風味會消失。如果是很重視新鮮度的類型像酒花型或小麥，可以在第5或7天開始密切觀察，一天開一瓶試試看，味道可以了就趕快放入冰箱。此外，夏天超過35度的天氣也要特別注意，這麼高的”室溫”並不是很適合瓶發，不要要放太久。啤酒的熟成過程中，除了蛋白質和單寧會沈澱，也會發生氧化和梅納反應，其中氧化反應是最想避免的。氧化廣意的定義是”失去電子”，並不一定要有氧的存在。氧化速度在溫度高時速度加快很多，所以瓶發結束後儘量低溫保存。不同的啤酒、配方等等可能結果不同，但很多人都說大約在裝瓶後4~6週左右風味最佳。高酒精的如Imperial Stout、Barley Wine、Belgina Dark Strong等，則通常要九個月到一年以上的熟成。低氧裝瓶裝瓶是家釀啤酒最容易且無可避免接觸氧氣的步驟，然而，還是有一些方法可以為了減少氧化的機會的。首先，裝瓶時造成接觸氧氣有兩個部分，第一是過程中接觸空氣，包括打開發酵桶加糖或是把啤酒流到裝瓶桶時，以及啤酒進入瓶內尚末封蓋時。第二部分是很常被忽略的頭部空間。理論上，因為加了糖，部分溶入啤酒的氧氣可以被酵母消耗掉，但留下的頭部空間中空氣所含有的20%氧氣並不會馬上就完全溶入啤酒，有很高的機率會在酵母已經不能代謝吸收氧氣了，才慢慢溶入啤酒，造成氧化。HBT上有人做過這樣一個實驗：裝了三瓶最容易氧化的NEIPA，處理方法分別是 在裝瓶前先用CO2沖一下空瓶，裝瓶後再用CO2沖一下頭部的空間 只有裝瓶後用CO2沖一下頭部的空間 完全沒有用CO2因為是用對氧氣很敏感的NEIPA，第三瓶完全沒有用CO2的明顯顏色變深，而是否在裝瓶前沖CO2的差別卻幾乎看不出來！簡單的結論就是：頭部空間的氧氣比過程中溶入的還致命。不只這個實驗，很多其他人也得到類似結論，例如有人測試號稱可以吸收氧氣瓶蓋，但卻是頭部空間大小的影響比是不是特殊瓶蓋還大；另外有一個是用保特瓶，然後有一瓶在蓋上前把空氣擠出去。還有幾個類似的，族繁不及備載。還有一個是用保特瓶比較1.擠出空氣，2.用CO2沖頭部，3.使用亞硫酸鹽，4.對照組，結果是擠出空氣的效果最好。所以要降低氧化最重要的就是減少頭部的空間。實務上可以不用裝瓶管，改用管夾或簡易龍頭控制，在加滿時慢慢拉高，就可以裝得很滿，甚至不留頭部空間。降低過程中接觸氧氣的機會應該也會有幫助，具體就是不採用整批加糖，直接把糖加入瓶中，避免打開發酵桶或使用裝瓶桶。從幾個別人的實驗來看，這樣的做法可以達到很好的效果的。如果對氧氣控制要求很高，有一個最理想但最需要其他器材的方式：用keg當裝瓶桶，用beer gun裝瓶。keg當裝瓶桶，可以先把keg內的氧氣排空，所以過程中啤酒可以完全不接觸氧氣。理想的做法是在keg中裝滿starsan之類的消毒液，然後用CO2把starsan排空，keg中便幾乎不會有氧氣。把啤酒從發酵桶中打到keg也要用CO2、把糖水加入keg可以用保特瓶加Carbonation Cap，再用CO2把糖水打進keg。用beer gun裝瓶，裝前可以先沖CO2，裝好後先沖一下CO2再蓋上蓋子。這是我所知道家釀裝瓶最可以避免接觸氧氣的方法。更新:在Russian River’s Ultimate Guide to Oxygen Management in the Brewhouse這個影片中，針對裝瓶的溶氧量，分別在裝瓶前先沖CO2，以及最後頭部空間充滿泡沬(cap on foam)與否，幾種組合去量測真實的溶氧量。其摘要如下： 方法 溶氧量(ppb) 不沖CO2 5939 cap on foam 132 沖CO2 5秒 4948 沖CO2 5秒, cap on foam 63 沖CO2 10秒, cap on foam 42 Cap on foam意思是頭部空間充滿泡沬再加蓋子，因為泡沫中是CO2，基本上等於頭部空間中全是CO2。從結果可以看到，雖然在裝瓶前是否有沖CO2，的確有相當程度的差異（5939 vs 4948），但頭部空間有沒有氧氣的差異卻是另一個數量級的差異（5939 vs 132)。相對地，只要不要在頭部留下空氣，有沒有先沖CO2的差異雖然從比例上來看不少（132 vs 63），但絕對數值對比有在留下頭部空間的數值差異(4948 vs 132)，可以說是不值一提。這可以說是用真實的量測證實了「留在頭部空間的氧氣遠大於過程中溶入的氧氣」這個事實。更何況，加糖瓶發的情況下，溶在啤酒中的氧氣是有機會讓酵母吸收掉的。不過，這個影片中裝的是已經碳酸化的啤酒，已碳酸化的啤酒的啤酒比較容易cap on foam，而理論上，讓（充滿CO2的）泡沬充滿頭部空間，效果會比用CO2沖頭部空間好。要達到cap on foam的效果，可以在beer gun前端裝上氣泡石（或做出類似的裝置），然後在蓋上瓶蓋前先用氣泡石打CO2，手動製造泡沬，這或許是比起用CO2沖頭部空間更進一步的做法，當然需要的時間和器材又多了一些。總結減少頭部空間留下氧氣的方法： 方法 優點 缺點 不留頭部空間 簡單，不需要複雜的器材 沒有頭部空間的緩衝，增加爆瓶機率。開瓶容易溢出。 用CO2沖頭部空間 可以留下頭部空間。 需要CO2及Beer Gun之類的器材 用氣泡石手動製造泡沫 用CO2沖頭部空間的進階做法 比沖CO2更複雜 進階加糖瓶發甚至打CO2強制充氣並不符合德國的純釀法，符合德國純釀法的做法至少有三種： Speise：加入未發酵的麥汁 Krausening：加入高泡期發酵中的啤酒 Spunding：保留啤酒發酵中產生的CO2，不另添加雖然說通常家釀很少這樣做，也不太會用在裝瓶，但實際上還是可以操作的。Speise &amp; KrauseningSpeise和Krausening的差別只是有沒有發酵，新加入的麥汁或啤酒的殘糖數不同，兩者的計算是一樣的。Krausening必須先掌握高泡的時間和殘糖量，但高泡期的酵母活力強，可以快速地把發酵的副產品掃光，加速啤酒完成的速度。商業酒廠重複釀同樣的配方很常見，所以不管有沒有發酵的同樣麥汁要多少有多少，所以這種做法並不難，但家釀很少前一批還沒裝瓶就再釀一批同樣的，而且只是為了裝瓶的量會比正常批次的量少，如果再釀一批一樣大小批次的又用不了全部麥汁。一個可能的做法是，進入發酵桶前保留部分足夠的麥汁，冷凍起來，要用的解凍巴殺(或短暫煮沸)後就可以用了。這部分的計算在Braukaiser.com有，也有試算表可以用，有興趣請移駕。Brewersfriend.com也有計算器。Bottle SpundingBottle Spunding是在發酵還沒完全結束就裝瓶，等於把還殘留的糖當成瓶發糖的概念。信奉LoDO(Low Dissolved Oxygen,低溶氧)的有些人認為Bottle Spunding是裝瓶唯一可以降低溶氧量的方法： 首先必須知道FG會是多少，用FFT（快速發酵測試），千萬不要用酵母廠的發酵度來預估。 決定碳酸化程度，計算啤酒中已有的CO2，及需要的殘榶，以決定裝瓶時的比重。0.001比重的糖大約會產生約0.51氣體數的CO2。 密切觀測比重，在目標比重達到時裝瓶。計算啤酒中已有的CO2的算法和計算瓶發糖是一樣的，CD = 3.0378 - (0.050063*T) + (0.00026555*T^2)T: 啤酒發酵溫度，華氏CD: 啤酒中的CO2例如，FFT得到的FG是1.10，啤酒發酵溫度20度C(68F)，目標為2.6個氣體數，則CD = 3.0378 - (0.050063*68) + (0.00026555*68^2) = 0.8614196 ～ 0.86在20度C發酵，啤酒已經含有飽和CO2濃度為0.86氣體數，所需要的殘糖數為 (2.6 - 0.86)/0.51 * 0.001=0.0034所以需要在離FG(1.010)還有0.0034的時候，也就是1.0134時裝瓶。Ale的發酵速度快，要抓要精確的時間點很難，Lager的話，會相對容易一點。不要求碳酸化的精準度，抓個大概但不會爆瓶是不難做到的。不過，因為發酵還沒完全結束，（尤其是Ale）可能氣泡也還很多，不只大部分的酵母還沒開始沈澱，連有些冷熱渣或蛋白質渣都會被氣泡帶動懸浮在啤酒中，這個時候裝瓶通常最後的底泥會很多。底泥沈澱物不說洗瓶和裝瓶的麻煩，Bottle Condition所造成的最大副作用，便是瓶底沈澱的底泥。如果沒有注意讓底泥揚起，輕則倒出混濁的啤酒，重則因為成核效應造成噴泉-一開瓶啤酒變泉湧而出。底泥的成份主要是懸浮的蛋白質和酵母，而減少底泥的方法就是發酵完多等幾天加上冷降(Cold Crash)，讓進到瓶中的蛋白質和酵母少一點，因為瓶發只需要很少量的酵母，所以冷降通常不會影響瓶發。不過，個人經驗來看，有冷降瓶發速度是多少有慢一點，但除非高酒精的，並不會慢很多。據說，Sierra Nevada Pale Ale就是用瓶發的，而且Sierra Nevada Pale Ale的底泥很少，堪稱楷模。爆瓶吃燒餅沒有不掉芝麻的。自釀爆瓶也不是什麼新鮮事。爆瓶主要的原因為： 感染 加太多糖 啤酒尚未完全發酵完 瓶子本身瑕疵爆瓶的原因簡單地說，就是壓力超過瓶子的上限。一般裝啤酒瓶耐壓通常在40psi或更高，不同的瓶子可能有不同的規格，例如有幾個商業啤酒的瓶子據說很薄。不過，家釀的酒瓶通常會回收重複使用，所以偶而會遇到瓶子曾經碰撞過而耐壓度降低的情況。建議裝瓶後先放在一個塑膠箱內，萬一爆瓶比較好清理。回收使用的瓶子也儘量不要超過3個氣體數。我個人爆瓶經驗： Wyeast 3711 Saison，發酵18天裝瓶，FG 1.001，目標氣體數為3。但因為這是屬於S. cerevisiae var. diastaticus，所以似乎還在繼續分解長鏈糖，放了超過一個或兩個多月左右開始爆瓶。 小麥啤酒，目標氣體數3.5，在連續超過35度幾天後，某個37或38度時爆了一瓶。在我發覺後正在處理時，在我身旁又爆了一瓶，不過只有”啵”一聲，瓶子碎裂開來，沒有四處飛散造成太太的災情。其餘的經過處理就沒有爆了。 柯隆，目標氣體數2.6，原因不明，推測是批量加糖分佈不均。瓶子從中間斜著裂開分成兩部分，但維持原狀，所以沒有第一時間發現，應該是裝瓶後7~10天內，只爆一瓶，其餘沒有感染跡象。採用keg裝瓶法。 （忘了那一批）有一瓶以為還沒加而不小心加了第二次，裝瓶第二天就爆了。裝已經碳酸化的的啤酒有部分人是使用keg但因為要參加比賽或送人，所以有裝瓶的需求。然而，卻有人是想要完全沒有底泥，在keg中碳酸化完成後再裝瓶的。底下列出了幾種比較常用的方法，大概說明一下，網路找詳細的資訊應該不難。在裝已經碳酸化的的啤酒有幾個重點，除了carbonation cap，其他所有的工具大概都適用： 在過程中難免會損失少許的CO2，所以可以稍微提高碳酸化程度，讓裝瓶後的不會下降到太低的水準 啤酒溫度愈低，CO2愈不容易離開啤酒。理想狀況是達到平衡後，在裝瓶前先再降溫，造成CO2濃度低於飽和濃度。（降溫會讓飽和濃度上升，原本飽和的CO2濃度在新的較低溫度下，就變成低於飽和濃度了） 出酒管要長。出酒管長度的影響和正常出酒的長度一樣，太短的話，啤酒降壓不夠，會產生很多泡沬。 瓶子最好先冰過。如果冰涼的啤酒遇到溫度比較高的瓶壁，也很容易產生大量的泡沫。 Cap on foam。最好是不留頭部空間，讓多少都會有的泡沫稍微冒出瓶口再蓋上蓋子。泡沫中基本上都是CO2，等泡沬消失了，這個空間也就只有CO2。等壓裝瓶器(Counter pressure bottle filler)等壓裝瓶器大致都長得差不多，主要就是同時接CO2和啤酒，CO2的壓力要調成和keg的一樣，比較簡單就是在氣瓶接一個三分同時接keg和等壓裝瓶器。使用時，先用CO2在酒瓶充氣蓄壓，要求高的人也可以先洩壓再充氣，沖淡氧氣濃度，接著打開啤酒通道，因為這時候瓶內壓力和keg內壓力一致，啤酒不會流入瓶內，接著緩緩轉開排氣閥，稍微洩掉一些壓力，啤酒便會開始流入瓶中，如果壓力一下子洩太快，會產生大量泡沫，如果洩很少，則流速很慢，需要摸索取得一個平衡。Tapcooler和kegland有一種可以直接接在啤酒龍頭的等壓裝瓶器，原理和使用上是一樣的，只是可以直接裝在龍頭上，方便使用，不過代價是啤酒經過龍頭，更容易感染。泡沫飛馬泡沫飛馬的原理和操作其實和等壓裝裝瓶器一模一樣，不同點在於固定瓶子的方式，以及泡沫飛馬沒有一根長管深入瓶底，啤酒是由瓶子內壁向下流。泡沫飛馬的版本很多，細節差異我不是很了解。Bottling gun雖然Bottling gun的廠商是以裝填已經碳酸化的啤酒為賣點，但Bottling gun並沒有”等壓”的功能，因為它並沒有塞住瓶子密封蓄壓的能力。Bottling Gun就相當於把等壓裝瓶器的排氣閥和塞住瓶口的機制去掉，然後輸出CO2的控制改成按鈕，出酒的控制改成類似扣發鎗支一樣的動作。因為沒密封蓄壓的功能，使用前keg通常要先放掉壓力，接bottling gun的co2也不需要用keg相同，而前面提的幾個重點就非常重要，否則會有超級多的泡沫。BMBF是Bottling gun的簡化DIY版，去掉CO2功能。真正的Bottling gun因為有CO2，構造上複雜許多，消毒會比較難做。carbonation capcarbonation cap很方便的把酒導入保特瓶，只是一般的keg轉桶操作，但在保特瓶這邊輕輕地、慢慢地轉開carbonation cap，就可以實現等壓裝瓶。在短期需要從keg帶酒出門是很方便快捷的好選擇。Gordan Strong在他的書中有提到一個利用carbonation cap裝瓶方法： 首先照前面說的先將啤酒轉到保特瓶中。 可以考慮調整碳酸化程度，例如可以再打氣增加碳酸化。 把保特瓶及要裝的瓶子冰到接近零度或不結冰下愈冰愈好。溫度愈低，CO2愈不會離開啤酒。 打開carbonation cap，用倒的緩緩地倒入瓶中。然後封瓶。其他的小技巧 可以考慮每批裝一瓶透明的瓶子，可以用來觀察瓶發進度、酵母沈澱、清澈狀況、顏色等等。 我做了一個自動投糖器，可以輸入瓶子容量，自動出糖，直接投糖到瓶中很方便。參考資料 BMBF Limiting oxidation: effect of purging headspace O2 in a bottle conditioned IPA NEIPA bottling experiment using Daraform Oxygen Scavenging caps OXIDATION TEST- Bottling Home Brew Beer! Kraeusening, braukaiser.com Master the Action: Carbonation Russian River’s Ultimate Guide to Oxygen Management in the Brewhouse" }, { "title": "自釀迷恩：酵母和氧氣", "url": "/posts/yeast_n_oxygen/", "categories": "釀酒筆記", "tags": "", "date": "2022-11-16 14:50:35 +0000", "snippet": "「有氧氣的話，酵母會進行呼吸作用，沒有氧氣則會進行發酵作用，產生酒精。」我隱約記得國中的生物課本有著這樣的說明，不過，這是錯誤的。想像一下，把螃蟹在一張大桌子上堆了像樹一樣高，讓10幾個陌生人圍著桌子而坐一起吃螃蟹，唯一的規則就是不交談吃螃蟹直到吃完，吃最多隻的人贏，有很高的機率會有人只吃蟹膏或比較有肉的部分，因為不吃只會被其他人吃掉。沒有錯，酵母進行呼吸作用比發酵作用能產生更多的能量，但英...", "content": "「有氧氣的話，酵母會進行呼吸作用，沒有氧氣則會進行發酵作用，產生酒精。」我隱約記得國中的生物課本有著這樣的說明，不過，這是錯誤的。想像一下，把螃蟹在一張大桌子上堆了像樹一樣高，讓10幾個陌生人圍著桌子而坐一起吃螃蟹，唯一的規則就是不交談吃螃蟹直到吃完，吃最多隻的人贏，有很高的機率會有人只吃蟹膏或比較有肉的部分，因為不吃只會被其他人吃掉。沒有錯，酵母進行呼吸作用比發酵作用能產生更多的能量，但英國生化學家Crabtree發現，在環境糖份充足的情況下，即使有氧氣，Saccharomyces cerevisiae（也就是Ale和麵包酵母所屬的類別）也會進行產生酒精的代謝活動，這稱為 Crabtree effct。 推測這可能是因為酒精不利競爭對手，更有利於生存的方式。在釀酒人製作的麥汁中，就是屬於「糖份充足」的情況。Yeast書第21頁第3段：「Even in brewer’s yeast, where little to no aerobic respiration occurs during fermentation …」要知道人類釀啤酒超過2000年的時間裡，採用密閉式發酵的時間其實才2百年左右，一直到現在，仍有啤酒廠採用開放式放酵的方法。如果有氧氣就不產生酒精，一開始釀酒的人應該釀不出啤酒，到現在也就不會有所謂的啤酒。「酵母需要氧氣才能繁殖。」與其說這是錯，不如說這是簡化得太過份的說法。酵母在沒有氧氣的情況下，也能夠分裂繁殖。但是酵母需要氧氣才能製造一種細胞壁成份之一的脂類，這種脂類會在細胞分裂時平分給母、女酵母，當這個脂類成份低到一個程度，酵母就無法再分裂，因為酵母需要足夠強壯的細胞壁才能抵抗酒精，進行正常的代謝。尤其在高酒精的發酵中，更需要強壯的細胞壁才能抵抗酒精的侵蝕。Clayton Cone博士曾經舉例說明乾酵母如何可以在不充氧的情況下完成發酵：Active Dry Yeast的出廠的乾酵母細胞內會有5%的脂類，分裂第一次時，會平均分配，變成2.5%，再分裂一次則變成1.25%，分裂第三次，只剩0.625%。在0.625%的情況下，酵母就無法再分裂了。以這個例子來看，乾酵母在不提供氧氣的情況下，可以分裂三次，個體數變為8倍。如果酒精度不高，酵母數足夠，不充氧也也是可以的。 Some comments from Dr. Clayton Cone. Oxygen’s Role in the Fermentation of Beer Yeast,the practical guide to beer fermentation book Crabtree effect" }, { "title": "釀酒迷思：二氧化碳保護層", "url": "/posts/co2blanketmyth/", "categories": "釀酒筆記", "tags": "", "date": "2022-11-14 01:59:06 +0000", "snippet": "只要在釀酒社團或討論群組待得久了，一定會看到這樣子的說法：二氧化碳比氧氣重，會䨱蓋在啤酒上層，保護啤酒不接觸氧氣。這個所謂的CO2 blanket，其實是個錯誤的觀念。是錯誤的觀念！是錯誤的觀念！是錯誤的觀念！其原理在高中的化學有，大概是空氣的”擴散”的部分，細節可以google”擴散現象”，搜尋相關的教材或請教高中老師，道理很簡單：氣體分子彼此之間的間隙很大，空氣分子是一直在快速移動的。大...", "content": "只要在釀酒社團或討論群組待得久了，一定會看到這樣子的說法：二氧化碳比氧氣重，會䨱蓋在啤酒上層，保護啤酒不接觸氧氣。這個所謂的CO2 blanket，其實是個錯誤的觀念。是錯誤的觀念！是錯誤的觀念！是錯誤的觀念！其原理在高中的化學有，大概是空氣的”擴散”的部分，細節可以google”擴散現象”，搜尋相關的教材或請教高中老師，道理很簡單：氣體分子彼此之間的間隙很大，空氣分子是一直在快速移動的。大家可能把CO2分子想成梨泰院的人潮，是無法穿透的牆，實際上，比較像是幾十到100個人在藍球場中快速地路來跑去，氧氣分子或許有很高的機率會碰撞到二氧化碳分子，但二氧化碳並不能阻止氧氣的擴散。也就是說，只要打開發酵桶，啤酒就一定會觸氧氣。只不過，如果是在發酵還沒結束，溶進啤酒的氧氣會被酵母吸收掉，不會造成影響，但如果發酵已經結束了，啤酒可能就氧化了。只不過，家釀處理過程中，很難完全避免氧化，只是程度的高低，有可能這種程度的氧化被例如裝瓶時造成的氧化所掩蓋，也有可能是查覺不出來的氧化程度。" }, { "title": "啤酒釀造水說明（更新）", "url": "/posts/brewwater/", "categories": "釀酒筆記", "tags": "", "date": "2022-11-05 01:59:06 +0000", "snippet": "水佔啤酒比例90%以上，水的重要性不可言喻。水中含有的礦物質很多種，釀啤酒會關心的只有下列這幾個： 離子 說明 濃度範圍(ppm) 添加物 Calcium 鈣 1.降低mash pH 2.酵母需要鈣 3.有助於清澈的麥汁和 4.有助於酵母沈澱 5.酵素作用的必需品 5...", "content": "水佔啤酒比例90%以上，水的重要性不可言喻。水中含有的礦物質很多種，釀啤酒會關心的只有下列這幾個： 離子 說明 濃度範圍(ppm) 添加物 Calcium 鈣 1.降低mash pH 2.酵母需要鈣 3.有助於清澈的麥汁和 4.有助於酵母沈澱 5.酵素作用的必需品 50-200 Gypsum 石膏( 硫酸鈣) Calcium chloride 氯化鈣 pickling lime氫氧化鈣(熟石灰） Magnesium 鎂 1.降低糖化 pH 2.酵母營養 3.是麥汁的天然成份，不用加也行 0-30 Magnesium Sulphate ( Epsom) 硫酸鎂 sulphate硫酸鹽 1.”增加苦味” dry (易飲性高則不要高於200ppm) 50-400 Gypsum石膏( 硫酸鈣) Magnesium Sulphate硫酸鎂 Chloride氯化物 比較圓潤的風味，比較突顯麥味。 0-200 Calcium chloride氯化鈣 Salt/塩（氯化納） Sodium 鈉 增加甜的感覺。高於150ppm, 會開始覺得鹹。 (釀gose時，可以考慮250ppm，大約是若有似無的鹹味。) 0-150 Salt塩（氯化納） Bicarbonate of Soda碳酸氫納 Bicarbonate碳酸氫鹽 提高pH值。會讓酒花更苦。在酒花類型和淡色的酒儘量不要用。 0-250 Bicarbonate of Soda碳酸氫納 pickling lime氫氧化鈣(熟石灰） 調整水質主要有兩個目標，一是調整糖化pH值，二是調整風味。只是調降糖化pH值比較建議使用乳酸或磷酸，以求不影響風味，調降pH值可以參考一下pH值的控制(更新)。因為使用大量深色麥芽的stout、porter而需要調升pH值時，則只能添加鹽類；由於碳酸鈣(CaCO3)很不容易溶解，一般是使用碳酸氫納（小蘇打）或氫氧化鈣；前者加太多會提高鈉離子濃度，可能造成鹹感，後者則是強鹼，使用上要小心。在影響口感方面，如上表所示，氯離子強調”麥味”(malty)，而硫酸根離子強調苦味，不過嚴格來說，Cl-氯離子是有”圓潤”的感覺，而SO4-則是”dry”的感覺。同時增加兩者，並不會得到麥味和苦味同時提升的效果；通常釀啤酒最常調整的目標是”硫酸根離子/氯離子”的比例。根據Johm Palmer的”Water: A Comprehensive Guide for Brewer”書中所提，”硫酸根離子/氯離子”的可能比例為0.5-9: 0-0.4: 麥芽味太過 0.4-0.6: 非常有麥芽味 0.6-0.8: 偏麥芽味 0.8-1.5: 平衡 1.5-2.0: 有點苦 2-4: 苦 4-9: 非常苦 9+: 太苦!雖然比例很重要，但硫酸根、氯離子本身的濃度也要一定以上才能影響風味。一般的認知是至少都要至少50ppm以上才會有影響。例如，IPA適合的濃度可能是硫酸根離子200ppm以上，氯離子50ppm。但是「50ppm以上」並非鐵律，例如淡色拉格和貴族系酒花對硫酸根離子的反應比較明顯，所以少於50ppm也是可以的。The Importance of Brewing Water文章中列有各類型酒建議的水質，可以參考。大部分提到水質的書或文章都有啤酒名城的水質參考，然而實際上我們並不清楚當地、當時的釀造者是如何處理水質的。在有些說明水的文章中，會說愛爾蘭都柏林的水殘鹼很高，所以適合釀造深色的Irish Stout，誕生了舉世聞名的Guinness；從Brewersfriend.com的截圖可以看到HCO3-高達280ppm:但是Guinness的工廠中卻立了一個牌子，說明他們的水是從Wicklow山上來的軟水，含有非常低的礦物質：另一個誕生了Pilsner Urquell的啤酒名城捷克皮耳森以水質軟、含礦物質超低聞名，但是據John Palmer說他有次遇到大師Narziss教授，他向大師請教Plzen的釀酒師是如何控制糖化pH值的，因為Plzen的水來自山上融化的雪水，幾乎沒有礦物質，Pilsner又是很淺色的啤酒，通常pH值會比理想的稍高（理論上Pilsner麥芽加入純水中的pH值會接近5.8）。結果Narziss教授回答說：他們會加鹽。我的理解是：在Josef Groll創造出Pilsner Urquell時代，”Burtonized”(也就是加很多硫酸鈣讓水質變成和Burton on Trent的水質一樣）這個技術雖然新，但已經有很多人知道而且會用了，Josef Groll是從英國學來的淺色麥芽技術，才創造出Pilsner麥芽的，所以Josef Groll在英國時同時學會Brutonized的技術應該是理所當然的。結論是，不要以這些著名城市的水質為目標來調整，而是照你所想要的風味目標來調整,就像煮菜加鹽、糖一樣的觀念，照你想要的口感來調整。John Palmer在「Water: A Comprehensive Guide for Brewers」中提到，麥芽、酒花和酵母需要用買的，所以選擇是必要的，但「水」通常沒有太多選擇，從其他地方買水是不切實際的，所以大多數人就是用水龍頭流出的水而不加思考。在啤酒四大要素，麥芽、酒花、酵母和水之中，水通常是最受忽略的，不僅大部分的配方不會提，甚至很多釀酒界的前輩會認為新手不需要調整水質。但是，我認為水是四大要素中最簡單的：酒花和酵母的種類都超過一百種，單一麥芽廠的麥芽種類通常超過十幾種，即使不考慮不同麥芽廠的差異，只加上不同產區的差別-英國、歐陸、北美，麥芽種類即使不到百種也過五十。而水，會需要在意的也就六種離子，會用的到鹽類也就三、四種。說水很難，為什麼會覺得酵母、酒花、麥芽簡單？如果你會照著酒譜加麥芽、酒花，就能夠會照著加鹽類；即使你不管水質，不代表它不存在，釀啤酒還是得用水，只是你用了你不知道的水而己。誠然，學會調整水並不會把差的啤酒變成好的，但是卻可以把還不錯的啤酒變得更好。Brulosophy做了很多啤酒的實驗，很多大家以為會有所不同的要素，在完全不知情的人喝起來是分辨不出來的，但水相關的實驗中，常常是大部分人分辨得出來。其實不說啤酒，大部分人都可以喝得出來不同品牌的礦泉水口感不同。水質調整其實就跟煮菜加鹽一樣，常常是畫龍點睛的重要一步。調整水質最難的其實是在於第一步：知道你的水質。除非是使用RO水，水中都已經含有一些礦物質，不知道原始礦物質含量就調整，就不會知道調整後的結果，就像不知道起點在那裡就移動，也不會知道終點在那裡。知道水質大略有三種方法：第一是送驗，第二是自己測試，最後是詢問自來水廠。詢問自來水廠顯然最簡單的，例如大台北地區的水質在台北自來水事業處的網站上就有，打電話去問自家的供應水站是那個，可以得到大略的數據。當然這些數值都是平均值或是一個範圍，在下大雨和極度乾旱的季節時可能會有比較大的變動，只要範圍不要太大，還是可以做為參考的。如果是用井水或泉水，只能送驗或自己測試，自己測試用的器材國外有賣，價格並不便宜，相對之下，或許用RO機器是比較划算和簡單的選擇。另外，如果原水的礦物質含量本身就很高，是很難調整的：含量低要調高只要加礦物質；含量高要調低只能稀釋。史上最多酒神奬得主Gordon Strong就說他的水質很難調整，所以他選擇使用RO水。提供我的操作方法以供參考。 使用Bru’n Water付費版來計算並調整水質。Bru’n Water有免費版，只要捐款大於11美元，email給作者，就可以得到付費版。付費版和免費版功能大致相同，但付費版計算上似乎比較準確。各大釀酒的軟體和網站都有水相關計算的功能，使用上並不難，我用了免費版的後習慣了，就捐了一點錢得到了付費版。 採用台北市自來水廠提供的數據。從這個網頁提供的數據來看，大台北的水質大抵來說算很軟。在Bru’n Water中，水質報告頁輸入鈣(Ca)、鎂(Mg)、鈉(Na)、氯鹽(Cl)、硫酸鹽(SO4)、總鹼度、總硬度、pH值等，如果數值算出來的不合理，它會提示。基本上礦物質的數值含量不高，影響不大。 依目標口感調整水質幾乎最多只用三種鹽類：氯化鈣(CaCl2)、硫酸鈣(CaSO4)、小蘇打（碳酸氫納），數值大都參考Bru’n Water中如Pale bitter, IPA, Dark malty等等的數值。例如，基本類型或強調麥芽風味的類型，我會把氯鹽(Cl)設在50~80ppm之間，鈣(Ca)濃度50ppm以上，其他的不管。APA/IPA等強調酒花的類型：SO4:150~300ppm, Cl:50~80ppm。如果是英式bitter，SO4會基本300ppm起跳。深色Stout等，另外加少量小蘇打控制pH，但避免鈉超過150ppm。可以看到，相對這些數值，台北市自來水中離子濃度幾乎都在30ppm以下，不會影響大局。就跟做菜加鹽，釀啤酒加鹽也是一樣，覺得口感不對，下次再多一點或少一點就可以了。 用磷酸調整pH值。我原本使用88%乳酸，但據說磷酸不會影響風味，Gordon Strong也說他是使用磷酸，後來買到了食品級”分裝”的磷酸，我就改用磷酸。在Bru’n Water有估算pH的功能，輸入所有的麥芽和鹽類添加後，它會算出一個pH值，現依照目標的5.2~5.4調整加入的磷酸，但我會從它估算的一半開始加，然後測量後再調整。 使用pH筆想調整pH值首先要能測量pH值；我也買過pH試紙，但可能眼力太差，無法準確分辦顏色，最後還是買了pH筆。要注意的是探頭是很脆弱的，用完要沖洗乾淨並保存在保存液中，麥汁要冷卻後再量。即使小心使用，pH計的探頭是還是消耗品，一段時間後會壞掉，所以最好購買可以換探頭的。另外，經我多方查證，糖化時的pH值是室溫時的pH值，所以麥汁要冷卻後再量才是正確的做法。最後一點心得分享：想要學會操作水，只要知道自己的水質或用RO水，然後學會使用軟體就行了。網路上相關的文章和書，像是Water: A Comprehensive Guide for Brewers，儘管都是很好的參考資料，但不是必要的。就像很少人真的理解、而且沒有太大的必要去研究所謂的alpha酸異構化是什麼回事，但所有人都理所當然地使用酒花一樣，只要知道要加多少份量的氯化鈣、硫酸鈣就可以了。如果你在炒菜時會毫不猶豫地加鹽，或許也可以考慮一下釀啤酒時加點鹽。參考： The Importance of Brewing Water The Sulfate to Chloride Ratio and Beer Bitterness HBT: A Brewing Water Chemistry Primer by Yooper Guinness Draught Clone pH值的控制(更新)" }, { "title": "折射儀", "url": "/posts/refractometer/", "categories": "釀酒筆記", "tags": "", "date": "2022-10-19 00:00:01 +0000", "snippet": "折射儀或稱為糖度計，是很方便的工具，只要一兩滴就可以量出比重（糖度），比起一般的比重計，通常需要100cc多甚至到250cc，這對批量小的人來說是很大的耗損。除了減少耗損，小量的麥汁在冷卻上也更快，更是增加了使用上的方便性。不過，因為折射儀很容易被誤用，所以自釀前輩們常不推薦，但其實正確使用的話，折射儀是非常方便的。折射儀的構造並不複雜，但和所有的測量儀器一樣，價格會和精準度和穩定度成正比。...", "content": "折射儀或稱為糖度計，是很方便的工具，只要一兩滴就可以量出比重（糖度），比起一般的比重計，通常需要100cc多甚至到250cc，這對批量小的人來說是很大的耗損。除了減少耗損，小量的麥汁在冷卻上也更快，更是增加了使用上的方便性。不過，因為折射儀很容易被誤用，所以自釀前輩們常不推薦，但其實正確使用的話，折射儀是非常方便的。折射儀的構造並不複雜，但和所有的測量儀器一樣，價格會和精準度和穩定度成正比。據說有些便宜的折射儀測量同一份麥汁都可以得到不同的值。Brewersfriend.com有一篇文章有完整的使用說明，列舉重點如下： 使用前必須用(蒸餾)水歸零。視情況可能每次使用都要歸零。 如果你的有比重刻度，不要看，只要使用糖度(Brix)單位。一般都說糖度乘以4大約會是比重，但這只是接近而己，實際上糖度和比重並不是線性的關係。 使用前必須降溫，雖然有些會說有ATC（自動溫度補償），但不一定有用。最好降到30幾度以內再量。 多量幾次，然後平均。有些便宜的機器誤差很大。另外，因為折射儀通常測量的是”糖度”，但麥汁的成份和糖有所不同，所以可能會需要一個修正值。很不幸的，每支拆射儀的修正值不同，通常是在1.0~1.06之間，Brewersfriend.com有如何求出修正值的方法。這個方法有點複雜，如果不想做，我會建議拿到一支新的折射儀，還是需要和可以信任的比重計對比幾次。折射儀的三個使用： 測量未發酵麥汁比重最常用的功能當然是測量未發酵的麥汁比重，測量方式如前面Brewersfriend.com的說明。只是想知道概略數值來監控糖化進度，乘以4就是大概的值，如果要準確一點，可以用計算器。特別注意麥汁要冷卻到30幾度才量；有個快速冷卻方法：準備可以盛麥汁的小杯子，事先冰在冷凍庫，當10~20cc的熱麥汁進入時，就會馬上到達可測量溫度。不過，由於取用的麥汁量很少，如果杯子中有殘留的水或凝結水，麥汁就稀釋了，所以我在取麥汁時，會裝好後倒回去，再取一次，等於是用麥汁沖洗一次。因為需要的麥汁很少，直接隔水降溫也不需要太多時間。另外，因為麥汁可能會蒸發，放置一陣子後，讀數可能會變高，所以滴上後要馬上判讀。如果麥汁沒有冷卻，這個效應更明顯，可能放個10分鐘會高個0.5brix。 測量已發酵麥汁/啤酒比重折射儀最常被誤用的情況就是測量已發酵麥汁/啤酒比重，直接使用讀數，因為拆射儀的原理是會受到酒精的影響，所以一旦發酵了、有酒精了，測量出來的值就不是”糖”的濃度比例了。所以每次看到有人問發酵很久比重還是很高，一定要先問是不是用折射儀量的。折射儀的讀數在修正酒精造成的偏移後，還是可以推算出比重的，不過會需要原始比重(OG)的值，才能推算出正確的比重值。這個計算器的Part II就是用來推算量已發酵麥汁比重的。話說回來，已經發酵的麥汁就是啤酒而不是麥汁了。 未知原始比重(OG)下，推算出ABV及OG用OG和折射儀的讀數可以推算出比重(通常但不限於FG)，反過來說，如果知道FG和折射儀的讀數，也可以推算出OG和ABV(酒精度)。所以，同時用比重計和折射儀來量測，即使不知道原始比重，也可以推算出ABV。有時候會在發酵開始兩或三天後才加糖，或者加入果汁、含糖水果時，常常會無法確認OG，這時候就就可以用這種方式來反推OG和ABV。除了啤酒，有人有試過白葡萄酒，推算出來的ABV和標示的13%很接近，所以釀造類的酒可能都適用。不過，這個方法要求的讀數誤差要很小，因為一點點的誤差都會被放大。我找了幾個網站，發現他們用的ABV計算公式是比較不精準的，所以最後決定自己做一個計算器。Reference https://www.brewersfriend.com/2013/04/24/using-your-refractometer-correctly-for-maximum-accuracy-in-home-brewing/ https://www.brewersfriend.com/how-to-determine-your-refractometers-wort-correction-factor/ ABV without OG BotB- Your Lyin Hydrometer, by Sui Generis Brewing-factor/" }, { "title": "讓家釀更像精釀的方法（更新）", "url": "/posts/bottle-label/", "categories": "釀酒筆記", "tags": "", "date": "2022-09-15 15:04:02 +0000", "snippet": "如何讓家釀更像精釀？很簡單，弄個漂亮的酒標。在社群時代，視覺效果比什麼都重要，味道什麼的都看．不．見．；漂亮的照片卻是效果超群。如果有很像精釀的酒標，質感瞬間提升好幾個檔次。貼了酒標，自用（貼FB、IG)、送禮兩相宜。有藝術天份或設計相關能力的人可能設計一個酒標是件容易的事，比較缺乏的人，像我，就就不是那麼容易了。幸運的是，現在有一些免費的線上酒標設計服務，只要挑選一下，改幾個字，漂亮的酒標...", "content": "如何讓家釀更像精釀？很簡單，弄個漂亮的酒標。在社群時代，視覺效果比什麼都重要，味道什麼的都看．不．見．；漂亮的照片卻是效果超群。如果有很像精釀的酒標，質感瞬間提升好幾個檔次。貼了酒標，自用（貼FB、IG)、送禮兩相宜。有藝術天份或設計相關能力的人可能設計一個酒標是件容易的事，比較缺乏的人，像我，就就不是那麼容易了。幸運的是，現在有一些免費的線上酒標設計服務，只要挑選一下，改幾個字，漂亮的酒標就出來了。以前用過BeerLabelizer.com，但免費的樣式有點少又單調，最近發現了Canva，樣式比較多，雖然有些圖需要付費才能用，只要註冊，就可以上傳自己的圖，加上超多的字型和模版，很簡單就可以做出漂亮又有設計感的酒標；我都忍不住做了好幾個： 做出來了，當然就要印。我在網路上找到A4大小的的標籤紙，排一下版就可以印出來了。上圖是2×4的，2×3的會比較大氣，效果好一些。在嘗試列印的過程中，發現要滿版又剛好可以切成想要大小的工具似乎不容易找，所以乾脆自己搞了一個，可以很簡單地做2×3和2×4的排版。原本只想簡單做一個排版，但用起來不太方便就稍為改進了一下: 酒標列印排版把圖標圖案拉到左上方的方格內，圖檔載入後，按住縮圖，再拉到想要放置的位置，最後按”Export”按鈕即可。可以選擇A4或Letter紙，也可以選擇2×3或2×4，間隔(Margin)的設定格式和CSS的格式一樣，不清楚的人就記得格式是”上 右 下 左”，只輸入一個值是全部用同一個值。 如果覺得這個排版好用，感激之餘，可以把你的酒寄給我。Bonus:雖說盗用人家的酒標或圖是違法且不道德的，但不是商業使用的家釀及帶有致敬意味的話，應該是可以接受的範圍。有這個需求的話，可以用這個工具（有線上版本的）把不想要的圖樣或文字去除。只要上傳圖案，點一點就成了，比用photoshop還方便。Bonus II:雖然光字型和幾何圖案就可以有很多變化，有時候還是需要一些圖案，像是蜜蜂或酒花，要很好的放在酒標中，去背是免不了的，remove.bg這個線上的工具很方便也很好用，可以試試。雖然印出了漂亮的酒標，沒辦法每次都貼的漂亮是我的一個小困擾。或許是感應到了我的心情，某天在youtube看到了一個”Label Wizard”的影片，正好解決我的困擾。真正的產品可以去Youtube用”Label Wizard”找到影片來看，底下是我的DIY土砲版；它的構成很簡單，就是三片木板（原版的還多了其他機構）：使用方法也很簡單，首先把酒瓶放上，對齊瓶底：視目標高度，把貼紙一側貼在邊上（以我這張貼紙的大小，距離瓶底1公分太少，應該2公分或再多一點比較恰當）把胋紙輕輕下壓，貼住瓶身接下來就可以取下瓶子，把貼紙貼好了。這樣子貼紙的高度和水平都不會跑掉，專業度大大提升。" }, { "title": "冷凍酵母", "url": "/posts/yeast_frozen/", "categories": "釀酒筆記", "tags": "", "date": "2022-09-03 14:50:35 +0000", "snippet": "警語：酵母操作有一定風險，冷凍酵母有賺有賠，過去績效不做為未來績效之保證，個人成功率亦不做為最低成功率之保證，釀酒人應先研讀酵母廠說明書、評估風險和自身技術後再決定是否採用。酵母的成本很高，尤其是液態酵母，在台灣又有不容易取得的問題，所以如果想要使用液態酵母並節省成本，保存酵母常常是必須考慮的課題。酵母保存常見有三種方法：冷藏、冷凍、培養基(slant)。冷藏是最容易的，但冷藏通常最長只有三...", "content": "警語：酵母操作有一定風險，冷凍酵母有賺有賠，過去績效不做為未來績效之保證，個人成功率亦不做為最低成功率之保證，釀酒人應先研讀酵母廠說明書、評估風險和自身技術後再決定是否採用。酵母的成本很高，尤其是液態酵母，在台灣又有不容易取得的問題，所以如果想要使用液態酵母並節省成本，保存酵母常常是必須考慮的課題。酵母保存常見有三種方法：冷藏、冷凍、培養基(slant)。冷藏是最容易的，但冷藏通常最長只有三個月到半年的保存期限；培養基是實驗室採用的方式，也是可以保存最久的，但培養基的操作需要一些技術及器材；雖然衛生條件在所有的方法中都很重要，但是在培養基的操作中更是關鍵，因為培養基操作的酵母數量相對少了很多：一隻細菌在一百萬個酵母中和一百個酵母中，那個影響會比較嚴重，不言而喻。所以，培養基操作最好能夠在無菌的條件下，對器材和操作的要求很高。綜合這些考量，冷凍似乎就是剩下比較可行的方案了。請注意，一般的煮沸只能達到「消毒」(Sanitized)，無法達到「滅菌」(Sterilized)。「消毒」指的是把微生物降到無害的程度，而「滅菌」則是完全(或99.9%之類的)去除。要達到”無菌”的狀態，如果是用濕熱，要在 121c維持15分鐘以上。如果是用壓力鍋要能到15psi才能符合要求。大部分煮東西用的壓力鍋通常只到10～12psi，沒辦法達到滅菌的要求。冷凍酵母算是稍微進階的課題，但也是很常見的問題，因為保存酵母是酵酒人長期以來的問題。我在微生物方面的知識非常淺薄，常常看到對凍菌和解凍有不同的見解，無法判斷熟是熟非。不過，就好像整個釀酒流程一樣，我們似乎知道一些原理，但還是有很多不明白的地方，儘管如此，只要確實地照著做，也是可以得到名為啤酒的產品。凍菌，對我來說，也是差不多一樣的概念：儘管不是很確實地理解每個步驟原理，照著操作，得到自己可以滿意的結果，我就覺得是成功了。要冷凍的酵母愈健康，能夠熬過冷凍解凍的可能就愈高。一般來說，釀酒後回收的酵母因為無氧發酵而缺氧，健康狀況並不好，所以使用擴培出來的酵母來冷凍會是比較好的選擇。擴培酵母最好在室溫下進行至少48小時，發酵結束後讓酵母在常溫下再多待個一天，讓酵母製造糖原(Glycogen)作為儲存，但發酵完也不要放太多天。接著放在冰箱至少2-3天，這樣會促使酵母產生海藻糖(trehalose)。比較多的糖原和海藻糖都會增加酵母的存活率。除了健康的酵母，要減少酵母在結凍時死亡，一般會加入防凍劑。食品級的甘油是容易取得的好選擇，也是大部分人或書推薦的。然而，有違一般的認知，甘油並不是用來防止結凍的，而且根據專家（White &amp; Bryan這兩位博士）的說法，甘油也不是用來防止冰晶產生而刺破細胞的；甘油真的的用意是：在水結凍過程中，剩下的水會愈來愈少，礦物質等物質就會濃縮，會產生很高的滲透壓而把酵母殺死，甘油可以平均地分配這些物質，避免酵母被滲透壓殺死。甘油的比例有多種說法，有人說15%是業界標準，根據HBT上有人測試結果超過15%反而解凍後的活力變差。而且，對酵母來說，甘油是有害的，太多的甘油是不利的 。我採用了HBT上的做法，用20%的濃度混合一半的酵母，達到10%的最終濃度。凍得愈多，解凍後愈接近目標的量，但卻佔空間；凍得愈少，衛生要求就愈高，也可能需要多次擴培。照專家的做法，都是採用1~3ml這種大小，例如Yeast書上是用1ml的小管，不過他們通常有滅菌設備。HBT那篇文的作者是採用50ml的離心管，因為他的目標是一次擴培就可以使用。幾次嘗試後，我採用15ml的試管；理由是比50ml的佔更少的空間，而大概只要多一個步驟就可以得到可以接種的量。不用2ml或以下小管的原因是因為我沒有滅菌設備，比較大的菌數在滅菌不完全下相對安全；再說，我的冷凍環境不是很好，如果不小心解凍又冷凍，大一點數目，即使在低存活率下，應該也有機會有相當數量的酵母存活。凍得比較少甘油也就比較少，也是另外一個好處。實驗室用-80度凍箱或氮氣冷凍，我們一般人通常沒有，家用的凍箱最低溫大約是到-18~-20度。儘管如此，網路上有人有成功解凍冰了5年的酵母，而我個人也有成功解凍3年酵母的經驗，所以小心操作下，家用冰箱還是堪用的。非無霜的冰箱會比較好，因為無霜冰箱事實上會定時加熱除霜，沒有保護的酵母會被重複結凍和解凍，很快就會失去活性，如果只有無霜冰箱可以用，一定要用保溫袋或保麗龍盒隔離起來，並放置保冷用的保冷袋/劑，避免在除霜過程的升溫中被解凍。沒有滅菌釜或高壓的壓力鍋，可以考慮使用分段滅菌；也就是連續至少三天在同一個時間點煮沸一次，原理是消滅菌體，但耐熱的芽孢在一天後成長後再滅菌一次，連續幾次後，剩下的菌就會很少。雖然還是達不到無菌的要求，比只是煮沸會好一些。但是直接煮沸會導致水份蒸發，影響濃度比例。我是用梅森瓶放在電鍋中，瓶蓋有蓋緊後稍微放鬆，多加一點水去蒸，至少連續三天。目測水份蒸發量不高。繼續讀下去前，請回頭再一次開頭的警語。酵母操作有一定風險，冷凍酵母有賺有賠，過去績效不做為未來績效之保證，個人成功率亦不做為最低成功率之保證，釀酒人應先研讀酵母廠說明書、評估風險和自身技術後再決定是否採用。材料及設備： 食品級甘油 15ml 滅菌離心管數個 梅森瓶 擴培設備及原料(DME) 保冷劑及保溫袋步驟 擴培 1200cc~1500cc；包括擴培時間，我通常會放置3～4天。如果設備許可，擴培時同時打氣會更好。 將擴培完的酵母放入冰箱兩天。 準備甘油混液：合甘油和水比例為20:80，倒入梅森瓶，放入電鍋蒸；連續至少三天都要在同一個時間蒸。 把酵母發酵完的上清液倒掉，只留下酵母固體的部分，加入等量的甘油容液*，混合後，倒入離心管，水結冰後體積會增加，所以不要倒到全滿。 將離心管直立置於冷凍，蓋子不要轉到緊，以免結凍爆開，並在離心管旁放置沒有結凍的保冷劑，以減緩結凍速度。 一到兩天後，酵母便會結凍，將蓋子鎖緊。可以考慮用parafilm密封。然後將離心管放入保溫袋，保溫袋內並放入保冷劑，整個放入冷凍室。解凍 準備150cc 1.020左右的麥汁，比較保險的做法可以用分段滅菌，連續三天消毒。 取出離心管放入密封袋，將用密封袋包住的離心管放入30幾度C的水中快速搖晃直到解凍。 將解凍後的酵母投入準備好的麥汁中，過程儘量小心。狀況好的話，幾個小時內就可以觀察到發酵現象；如果麥汁是有滅菌的可以最多等兩到三天，超過三天沒有發酵大概就沒希望了。 將喚醒的酵母擴培到想要的量。和最早在HBT上看的使用50ml離心管的做法，用比較小的15ml，我多加了一個用小量麥汁喚醒的動作。理論上如果凍得好，也不是不能省略這個步驟，但是因為器材的限制，我有過失敗的經驗：搬家的時候隨便把原本放在臥式冷凍櫃的凍菌管塞到普通冰箱的冷凍室內，結果差一點全滅。多了一個喚醒的動作，除了比較踏實，也是提早知道是不是失敗了，有可能節省1公升多的擴培麥汁。參考資料： Bryan’s Comment on HBT  Discussion thread on HBT (有許多討論和實作經驗分享） Yeast: he Practical Guide to Beer Fermentation註：參考wyeast這個網頁的資訊，可以估算酵母量：「固體部分」的密度大約是2.5 billion， 所以50ml如果一半是酵母固體，會有62.5 billion的酵母數；根據Brewersfriend.com的計算器，1500cc的擴培，視初始酵母量，會得到200~300billion的酵母量，換算成體積，約莫是80~120cc-和我的經驗相符；15ml離心管裝8ml的酵母固體約有20billion。我通常只會裝3~5管，還會剩下一半左右的酵母不冷凍直接使用。另外，一般1.050左右20公升的批次，大約需要接種Ale酵母數為200billion。" }, { "title": "用麵粉釀的比利時小麥啤酒-witbier", "url": "/posts/witbier/", "categories": "釀酒筆記", "tags": "", "date": "2022-06-23 14:50:35 +0000", "snippet": "由Pierre Celis復活的比利時小麥(witbier)十分清爽易飲,是很受歡迎的夏日良伴。和使用「小麥芽」的德式小麥(weissbier)不同，理論上，比利時小麥應該要使用未發芽的小麥。但由於未發芽的小麥糖化手續比較麻煩，許多家釀是用「小麥芽」來取代小麥。以結果來說，大多數人並不認為有差異或不恰當。但是生小麥含有的豐富beta glucan是小麥芽比不上的，所以口感上還是會有差距的-這...", "content": "由Pierre Celis復活的比利時小麥(witbier)十分清爽易飲,是很受歡迎的夏日良伴。和使用「小麥芽」的德式小麥(weissbier)不同，理論上，比利時小麥應該要使用未發芽的小麥。但由於未發芽的小麥糖化手續比較麻煩，許多家釀是用「小麥芽」來取代小麥。以結果來說，大多數人並不認為有差異或不恰當。但是生小麥含有的豐富beta glucan是小麥芽比不上的，所以口感上還是會有差距的-這個beta glucan也是生小麥使用困難的原因之一。另外，小麥芽在製造的過程會經過烘烤以去除水份，即使是低溫烘烤，多少會形成一些梅納反應的風味，所以生的小麥和小麥芽在風味上也是有不一樣的。要使用未發芽的(生)小麥，通常需要做cereal mash。為了方便家釀使用，美國家釀店通常會賣已經熟化的小麥片，這種已經熟化並碾壓過的小麥片，不需要另外做Cereal Mash，可以真接加入糖化，非常方便，不過台灣很難找到（或找不到）這種已經熟化的小麥片。沒有熟化的生小麥片在網路上並不難找，但一來沒有熟化的生小麥片還是需要做Cereal Mash，二來生小麥片也是需要碾碎，糖化效果才好，考慮到小麥碾碎到極致，就是麵粉，直接麵粉來取代生小麥應該是很符合邏輯的想法。事實上，在Brew With Wheat中有提到，代工Celis White的比利時酒廠Brouwerij Van Steenberge，他們買的小麥粉是磨到可以做麵包的程度，所以用麵粉來釀比利時小麥可以說是很正統的做法，事實上我己經用麵粉釀比利時小麥啤酒好幾次了。配方 Pilsner 3lb Munich 0.25lb 麵粉 1.75lb saaz 60min 18IBU 橙皮 0.5oz 5min 芫荽籽 0.5oz 5min 糖化 52C 10min, 68C 60min, 77C 10min 煮沸 90mincereal mash基本做法就是加水煮到糊化，水量大概是1磅料加入2~3夸特的水，換算成公制，大約是4~6倍的水，雖然主要目的是糊化，但反正要加熱，加個一把麥芽，在70C左右停留個15或20幾分鐘，多少先糖化一部分，這是大部分的做法。使用麵粉的情況下，要冷水混入麵粉，不能用熱水，尤其是高於60度的熱水，因為小麥澱粉的糊化溫度在60幾度，如果直接加入熱水，成麵粉的麵粉表面會糊化包住內層，一團團的麵粉會很難打散。我第一次做的時候不知道，就遇到了這個問題。如果怕煮成漿糊，水最好多加一些，將近800g的麵粉，我用了4.5公升的水。因為想要多少分解一些beta glucan以提高流動性，我在45度時停了一段時間，不過由於這個溫度還沒糊化，有多少效果令人懷疑。煮到70度時，也停了20分鐘，讓糖化酶多少作用一下，接著就煮到沸騰，維持煮沸10分鐘。理論上小麥澱粉的糊化溫度是60幾度，所以只要加熱到60、70度就已經到達糊化溫度，但我覺得煮到沸騰後的糊化效果還是比較好的：沸騰後液體呈現些許透明感，比起來70度時的樣子，糊化程度感覺比較高。煮完後的麵粉湯流動性很好，完全沒有黏稠或勾芡的感覺，算是成功，放入糖化桶加入麥芽糖化：剛開始糖化時看起來很混濁，糖化了30分鐘後就變得比較清澈了，看起來糖化有好好地進行：剩下的糖化煮沸流程就照本宣科，沒什麼特別的了。最後得到OG 1.051，比預期稍高，主要是蒸發比預期稍多。最終FG為1.011，比原本預期的1.012+稍微低了一點點，有可能是因為這批次改了PID演算法，溫度變化和原本的不同所致。參考資料 Brewing with Wheat: Hieronymus, Stan Cereal Mash Steps for All Grain Beer Brewing, BeerSmith" }, { "title": "啤酒冰淇淋", "url": "/posts/beer-icecream/", "categories": "釀酒筆記", "tags": "", "date": "2022-05-30 14:50:35 +0000", "snippet": "天氣愈來愈熱，來分享一下自釀冰淇淋的做法。首先，先搞清楚定義，冰淇淋一般指的icecream，但因為很相似，有時也會把gelato(義式冰淇淋）和sorbet（雪酪或雪葩）說成是冰琪淋。這有點像南部粽和北部粽都叫粽子一樣令人困擾。不過儘管它們都有一些比較嚴謹的定義，比較容易的區別幾本上就是成份，其中奶油的含量是最大的區別。icecream奶油含量最高，gelato大概是icecream的一半...", "content": "天氣愈來愈熱，來分享一下自釀冰淇淋的做法。首先，先搞清楚定義，冰淇淋一般指的icecream，但因為很相似，有時也會把gelato(義式冰淇淋）和sorbet（雪酪或雪葩）說成是冰琪淋。這有點像南部粽和北部粽都叫粽子一樣令人困擾。不過儘管它們都有一些比較嚴謹的定義，比較容易的區別幾本上就是成份，其中奶油的含量是最大的區別。icecream奶油含量最高，gelato大概是icecream的一半或更低，而sorbet則幾乎不含奶油。我在網路上找到的配方食譜，都比較偏向icecream，扣掉比較特殊的配料，基本原料為 啤酒 鮮奶油 牛奶 蛋黄 糖 少許的鹽 少許的香草筴或香草精基本做法就是 熬煮啤酒，蒸發掉酒精，以及濃縮風味 打發蛋黃及糖 混合液體和蛋黃，並加熱至82度C，維持數分鐘，巴式殺菌 冷卻後放入冰琪淋機除了啤酒，這個基本上就是冰淇淋的一般做法，考慮到經過熬煮, 以及使用牛奶和奶油的比例，最常使用的啤酒類型是比較強調麥芽風味的stout。因為酒精會降低冰點，所以需要蒸發掉，但也是有些配方是保留一半的啤酒，畢竟並沒有太多的酒精，影響有限。我的Irish Dry Stout icecream： 330cc Irish Dry Stout 鮮奶油 240cc 牛奶 240cc 蛋黄 5顆 糖 150g 少許的鹽 少許的香草精成品還不差，口感滑順，入口即化，但是其實比較像是焦糖口味的冰淇淋，我想是因為Irish Dry Stout強調麥芽風味，而且我這一批Dry Stout基本上沒什麼果酯味，燒烤麥芽的風味也不強，所以結果就變成了明顯的焦糖印象。推測如果採用口味強烈的Imperial Stout，啤酒的風味應該會比突顯。另外，因為鮮奶油用量比一般食譜少，口感也偏向gelato，而非濃厚的icecream。然而，這個做法雖然說是「啤酒冰淇淋」，其實也就是「啤酒口味的冰琪淋」，畢竟幾乎所有冰淇淋的基底成份-鮮奶油、糖、牛奶-都差不多，這個做法的重點大概就是找出最適合的啤酒和比例了。如果要做主要成份是啤酒做出來的冰琪琳(?），只能往sorbet方向找，因為sorbet的基本做法就是果汁加糖，所以只要啤酒加糖也是有機會做出啤酒sorbet的： 1000cc IPL 糖 125g 太白粉 ~5g 保留 300cc的啤酒 把 300cc的啤酒混合糖，加熱到80度左右，把糖完全溶掉 太白粉加入30~50ml的冷水扮勻，掉入啤酒和糖的混合，攪拌後熄火 加入保留的300cc啤酒，冷卻後放入冰琪淋機 把剩下的400cc啤酒喝掉成品就如同成份顯示的一樣，就像是固體的加糖啤酒。不過，不知道是不是多了甜味，酒花的苦味反而突顯了。我認為這個做法適合的是pastry beer，也就是smoothie stout/NEIPA等等有點甜味的啤酒，偏向麥芽的brown或blonde也應該會比通常是偏dry的類型適合。另外，酸啤再加點果汁可能也會很成功。Bonus:如果不要太嚴謹，俗稱的「叭噗」或許也可以歸入「冰淇淋」的大家族的一份子。「叭噗」的關鍵做法是加入澱粉（例如太白粉或玉米粉）勾芡，增加濃稠度及提高融點（比較不會融解）。傳統的「叭噗」做法甚至不需要冰淇淋機，所以如果把我的sorbet的配方中太白粉的份量再多加一點，或許有機會做出啤酒叭噗。" }, { "title": "低酒精啤酒 Low ABV beer", "url": "/posts/low-abv-beer/", "categories": "釀酒筆記", "tags": "", "date": "2022-05-18 14:50:35 +0000", "snippet": "不容否認，酒精是啤酒吸引人的重要成份之一，但同時酒精也是啤酒最主要被認為會造成問題的成份。家釀要做無酒精啤酒是很難的-或者說要做出不太差的無酒精啤酒是很難的，因為要把酒精從啤酒中取出是很困難的一件事。取而代之，如果目標是很低的酒精度，難度就會降低很多。事實上，以台灣的法律定義，低於0.5%就不算酒類了。不想產生太多酒精，有幾個做法，一是採用只能產生低酒精特殊的酵母。因為這幾年訴求健康的風氣，...", "content": "不容否認，酒精是啤酒吸引人的重要成份之一，但同時酒精也是啤酒最主要被認為會造成問題的成份。家釀要做無酒精啤酒是很難的-或者說要做出不太差的無酒精啤酒是很難的，因為要把酒精從啤酒中取出是很困難的一件事。取而代之，如果目標是很低的酒精度，難度就會降低很多。事實上，以台灣的法律定義，低於0.5%就不算酒類了。不想產生太多酒精，有幾個做法，一是採用只能產生低酒精特殊的酵母。因為這幾年訴求健康的風氣，酵母廠開始研發這類的酵母，Fermentis就有一款只能代謝單糖LA-01，麥汁中麥芽糖比例比較高，單糖比例通常低於20%，用這隻酵母的話，便只會消耗掉少量的單糖，不會產生太多的酒精。不過，殘存的麥芽糖可能會讓啤酒喝起來太甜，所以即使用這類的酵母，原始比重還是不能太高。降低酒精產生的第二個做法是做出可發酵糖含量低的麥汁，其方法有二：一是低溫浸泡麥芽，二是高溫糖化。低溫浸泡麥芽又稱無酶糖化(Non enzymatic mashing)，是採用很低(&lt;20C)的溫度，長時間-通常要8小時以上-浸泡，用不是糖化酶活性強（實際上不是全無）的溫度，只把麥芽的顏色和風味浸泡出來。要注意的是麥芽本身幾乎都有乳酸菌的存在，所以如果用乳酸菌活躍的30度上下長期浸泡，可能會讓麥汁變酸，所以正確的做法要維持在比較低的溫度，而比較低的溫度，風味萃取速度又會比較慢，所以需要長時間的浸泡。高溫糖化則是採用75度以上的高溫來糖化，減少產生可發酵糖，儘量只產生糊精的做法。低溫的方法很耗時，另外是穀物的風味過於明顯，還有因為溫度低於糊化溫度，麥汁會有很多粉狀固體，有不少人有燒焦的經驗，因為糖化酶並不活躍，麥芽大都浪費了。相對之下，高溫糖化似乎是比較直覺簡單的做法。低酒精啤酒的配方重點：目標OG通常在1.020~1.030，因為採用的麥芽量少，所以要用風味比較強烈的麥芽，一般的做法是特殊麥芽維持不變，減少基礎麥芽至目標OG，而基礎麥芽最好採用比較有風味的MO或Munich之類的，另外，為了增加因為麥芽用量少而造成酒體過薄，可以考慮加入適量的小麥或燕麥。糖化溫度一般採用75度以上，Lallemand的Best Practices Low alcohol beer by Lallemand有不同溫度產生的麥汁發酵性的資訊，值得參考。發酵層面要考慮的是，和一般啤酒常要求”乾淨”的發酵風味不同，低酒精啤酒因為發酵很少，可能會有發酵風味不足的問題，所以採用英式或比利時等酵母風味比較強烈的酵母會比較好，而且發酵溫度可能也需要調整，以引出最大的酵母風味。酒花的使用要謹慎，IBU同樣40在1.050和1.020的OG感受上會差很多。pH值的管理要特別注意，因為麥芽量小，pH組衝能力也變小；而pH值除了影響糖化，也會影響蛋白質變性、酒花萃取等。鑑於上述的認知和理解，第一次嘗試低酒精啤酒： OG: 1.020/FG:1.014 ABV: 0.8% Color: 10.5 IBU: 16.5 Munich malt 8oz Aromatic malt 6oz rye malt 10oz Carahell 8oz Cascade 0.25oz 20min Cascade 0.25oz/Citra 0.5oz whirlpool 20min@80C Ca 79ppm, SO4 98ppm, Cl 56ppm糖化：78度30分鐘酵母 wy1968,18度接種，接種後12小時在1天半的時間內升溫到22度根據BruN Water計算，乳酸只需要0.37ml，而且稍微多一些，pH值就會降太多，試著滴了两、三滴，很幸運地測出來的pH值剛好是 5.3 。為了強調原本很薄弱的發酵風味，採用酵母風味比較強一點的英式酵母，而且儘早升溫到22， 不過果然因為可發酵糖太少，很快就到FG了。第三天取了一些測量並試味道，pH值是4.6，以Ale來說是偏高的pH值，如果裝瓶前的pH沒有進一步下降到4.5以下，需要想辦法調整到4.3~4.0左右。風味來說，Citra的柑橘及熱帶水果風味超乎預期地明顯，說實話比市面上的NEIPA的都強烈，不過這是發酵第三天，我想裝瓶後風味大概只剩1/4或更低，最好也不會有現在的一半，但有點偏離原本目標-Pale Ale-的範圍。麥芽風味很明顯，己經有接近使用MO的強度，下次考慮用(原本的計劃的)pale malt取代munich，或大幅減少Aromatic。苦味太過明顯，不過裝瓶熟成後一樣會減弱。酵母的發酵風味還是太弱，麥汁感跟海尼根無酒精啤酒接近。儘管FG有1.014，酒體還是很薄，因為糊精並不是造成酒體的主要因素；(降解的)蛋白質、beta Glucan、發酵過程產生的甘油等對酒體的影響比糊精來得大。雖然發酵看起來像一大就結束，還是等了8天才裝瓶，據說CO2多一點會減少麥汁感，所以氣體數目標設定為3.5個氣體數。裝瓶前pH值還是在4.6，原本想調整成4.2左右，不小心調成了3.8，大概是英式Ale的下限。麥芽和酒花風味都大幅下降，幾乎沒有麥汁感，除了酒體單薄，整體來說算是不錯。不過喝完後像喝完水一樣，沒有任何的餘韻，有一點空虛感。酒精度1%左右是有點尷尬，如果是低於０.5可以稱為”無酒精”，超過０.５只能歸為低酒精，比起低酒精，正常的3％啤酒應該風味會更飽滿。下一次的目標會設在0.5%以下的低酒精。請注意，肉毒桿菌潛藏在日常生活中，在無氧的環境下，可以會產生毒素，但肉毒桿菌在pH值4.6~4.9以下時無法作用產生毒素，一般啤酒的pH值會在4.6以下，但無或低酒精啤酒因為酵母發酵作用很少，pH值下降不多，如果沒有沒有調整到安全範圍，會有安全上的問題。無法掌握pH值的話，請謹慎考慮。參考資料 Best Practices Low alcohol beer by Lallemand COLD EXTRACTION OF MALT COMPONENTS AND THEIR USE IN BREWING APPLICATIONS Low-alcohol Beers: Falvor Compounds, Defects, and Improvement Strategies" }, { "title": "Carbonation and Priming Sugar", "url": "/posts/carbonation-n-priming/", "categories": "釀酒筆記", "tags": "", "date": "2022-05-02 14:50:35 +0000", "snippet": "二氧化碳是啤酒重要的成份之一，沒有氣的啤酒幾乎沒有人想喝。讓啤酒碳酸化或者說有氣是釀啤酒中最後的一個動作，也是重要但偶而會被輕忽的動作。這個動作有失誤可能造成家釀最慘烈的後果：爆瓶。啤酒碳酸化有幾種作法，符合純釀法的speise(加入新的麥汁）和krausening（加入高泡的新啤酒），直接加入CO2，以及最常見的加糖。除了直接加CO2，不管是加蔗糖、葡萄糖、麥汁、麥芽精、蜂蜜、等等，基本上...", "content": "二氧化碳是啤酒重要的成份之一，沒有氣的啤酒幾乎沒有人想喝。讓啤酒碳酸化或者說有氣是釀啤酒中最後的一個動作，也是重要但偶而會被輕忽的動作。這個動作有失誤可能造成家釀最慘烈的後果：爆瓶。啤酒碳酸化有幾種作法，符合純釀法的speise(加入新的麥汁）和krausening（加入高泡的新啤酒），直接加入CO2，以及最常見的加糖。除了直接加CO2，不管是加蔗糖、葡萄糖、麥汁、麥芽精、蜂蜜、等等，基本上是一樣的，目的就是讓酵母把加入的”糖”吃掉，產生co2，差別只是在於”雜質”的不同，例如蜂蜜有一定比例的水份和其他不是糖的物質，而麥芽精則有些糊精和蛋白質等，真正能發酵產生CO2的糖只佔某個比例，所以計算使用量時，必須考慮糖的成份比例。除非有什麼酵母無法處理，1克的糖會產生多少的CO2，純粹就是化學上的計算：1個糖分子會產生兩個CO2分子，糖分子的分子量是180，而CO2則是44， 也就是1克糖會產生 2*44/180克的CO2。不過，在加入糖之前，啤酒中也有發酵時留下來的CO2；在發酵過程中，酵母不斷地產生CO2， CO2會溶在啤酒中，但超過飽合濃度後，就會形成泡泡離開啤酒，所以留下的CO2量，就是飽合濃度。飽合濃度受溫度影響：溫度愈低濃度愈高。如果啤酒發酵完成後溫度有升高，因為溫度升高，飽合濃度下降，原本溶在啤酒中的CO2就後離開啤酒，接下來如果又降酒，因為發酵已完成，不會有新的co2產生，所以濃度也不會有變化。也就是說，要考慮的是發酵完成後的最高溫。結論就是，碳酸化程度＝（加入糖的量產生的CO2）+（啤酒中既有的CO2）碳酸化的計數單位有兩種，比較直覺的是是每公升的二氧化碳重量(g/L)，另一則是家釀比較常用的氣體數(volume)；兩者指的都是溶在啤酒中二氧化碳的多寡。氣體數的定義是「溶在啤酒中的二氧化碳，在標準溫度和壓力（0度C、一大氣壓）下的體積是啤酒的幾倍」。例如，1公升的啤酒，如果是2.5氣體數，把所有溶在啤酒中的co2取出，則在這些CO2在零度C時的體積是2.5公升。根據氣體常數和公式推算，氣體數 * 1.96 = g/L。推導過程就省略了，想要看細節，請看參考資料連結，計算瓶發所需要的糖的公式為：糖(g) = 15.195 * 啤酒量(gallon) * (目標氣體數 - 3.0378 + 5.0062 * 啤酒溫度 - 2.6555 * (啤酒溫度^2))啤酒(最高)溫度單位是華氏。所以要加多少瓶發糖，視想要的碳酸化程度而決定；不同程度的碳酸化會對口感造成不同的影響，所有不同類型的啤酒有不同的最佳碳酸化程度。BJCP中對每種類型都有建議的碳酸化程度，一般來說，大概”高”是3.0氣體數以上，中是2.5上下，而低則是2.0或更低。例如比較常見的”低”碳酸化類型是英式的，常用的程度是2.0左右或以下，而小麥啤酒通常是3.0以上，一般的美式則是中等的2.5上下。儘管知道公式，我們也不用自己算，瓶發糖的計算器網路上一大堆，我習慣使用brewersfriend.com的計算器，只要輸入啤酒數量、想要的碳酸化程度以及啤酒發酵溫度，就會得到目前啤酒中已經有的CO2以及需要加多少糖，而且連常用的不同糖的種類數量都列出來了-如同前面說的，糖的純度不同，所以會有些差異。參考資料： https://byo.com/article/master-the-action-carbonation/ Brew By the Numbers, Zymurgy 1995 summer" }, { "title": "BrewPiLess中文教學(四)-iSpindel整合", "url": "/posts/brewpilesse4b8ade69687e69599e5adb8e59b9b-ispindele695b4e59088/", "categories": "BrewPi@ESP8266, 釀酒筆記", "tags": "brewpiless", "date": "2022-03-29 06:28:31 +0000", "snippet": "這篇主要說明只把BrewPiLess拿來當iSpindel中介設備，但部分說明也適用於一般的情況。BrewPiLess支援iSpindel有三種方式，第一是採用iSpindel的比重，二是根據tilt值自行計算（公式輸入在brewpiless)，三是邊釀邊校正。以下說明以邊釀邊校正為主。BrewPiLess也可以進一步把資料傳送到其他地方，例如Brewfather.app；iSpindel傳...", "content": "這篇主要說明只把BrewPiLess拿來當iSpindel中介設備，但部分說明也適用於一般的情況。BrewPiLess支援iSpindel有三種方式，第一是採用iSpindel的比重，二是根據tilt值自行計算（公式輸入在brewpiless)，三是邊釀邊校正。以下說明以邊釀邊校正為主。BrewPiLess也可以進一步把資料傳送到其他地方，例如Brewfather.app；iSpindel傳到Brewfather.app需要付費才能使用，但BrewPiLess則不用。不過如果要把BrewPiLess回報的資料整合到一個批次的釀造，還是需要付費。硬體需求 NodeMcu或D1 mini或ESP32 (選項）20×4 HD44780 I2C LCD 或 13306 I2C OLED (選項）杜邦線 USB電源，最少要有1.5A供電NodeMcu和D1 mini基本上是一樣的東西，但NodeMcu通常有焊上排針，D1 mini通常沒有，如果想簡單地接LCD，可以優先考慮NodeMcu。ESP32比較有未來性，但目前穩定度似乎比ESP8266稍差。燒錄軔體參考BrewPiLess簡易中文教學(二)軔體編繹及燒錄。採用OLED的話，軔體要選有OLED的硬體連接如果沒有LCD，就不用接。也可以最後再接，但接上LCD，可以看到IP，會比較方便。 LCD NodeMcu/D1 mini ESP32 SDA D2 21 SCL D1 22 Vcc 3.3v 3.3v GND GND GND 如果用HD44780 LCD，通常一開始字看不清楚，必須調整對比，接3.3v亮度會稍微弱一點，有時候對比調不到理想，也可以接5V或Vin。但用OLED LCD的話還是要接3.3V。BrewPiless設定用電腦連線到一個叫”brewpiless”的網路，打開brower，手動輸入”http://192.168.4.1″，順利的話，即可看到BrewPiLess的首頁。 選右上角「系統」（英文版是System)；預設使用者名稱和密碼都是”brewpiless” 下面Network右邊的按鈕按進去可以選網路； 按Scan後選擇正確的網路及輸入網路密碼(passcode)。如果成功連上，就會出現連上的WiFi SSID；如果只有用iSpindel功能，第二個”LCD Display”可以選”Additional”，那麼LCD顯示就會固定為iSpindel的資訊。 Network mode維持”Station + AP”，Host/Network Name可以改成喜歡的名字，但建議先不改；如果要改，不要用太長有有特殊符號的字元，以免有相容性問題。選”比重”(英文版是GRAVITY) 把iSpindel最右邊的開關切成”開”，Temp. Correction通常填20C。這邊也可以輸入公式，但我建議使用邊釀邊校正的方式，所以可以忽略這些值。請注意，Brewpiless有推導出新的公式時，這些值就會自動更新。網路連回原本的網路。連上Brewpiless的IP，應該可以看到首頁。iSpindel的設定讓iSpindel進入設定模式，進入Configuration： iSpindel應該可以看到brewpiless(或BrewPiLess系統設定中的Host/Network name)這個SSID，依圖中標示輸入。密碼為BrewPiLess系統設定中的密碼，預設為”brewpiless”。觀察BrewPiLess的首頁，如果iSpindel有正確設定，就可以看到左側的iSpindel Info. ### 邊釀邊校正 將iSpindel放置水中，待靜止後，觀察BrewPiLess中回報的Tilt值 消毒後，將iSpindel放進發酵桶 開始記錄log, 從右上角選Logs頁面 Write on Buffer Full：設ON的話會減少寫入Flash的動作，但如果停電或其他原因重開機，部分資料會遺失。 Calibrate iSpindel：選到 ON Tilt value in water：水中Tilt值。 Hydrometer reading：水中比重計的讀數，通常是 1.0 回到”Graph/狀態”頁，先輸入OG；確定iSpindel己經平靜後，再輸入SG（通常一開始的SG=OG，不過也可能是釀到一半才開始記錄，所以是分開輸入） 每次測量比重時，都輸入一次SG，BrewPiLess就會自動更新公式，重新計算比重。 發酵結束後，回到Logs頁面，按Stop Logging，接著就可以下載存檔。BPL Log檔的使用Log檔可以用底下連結中BPLLogView.htm觀看及裁切：https://github.com/vitotai/BrewPiLess/tree/master/htmljs/dist/chinese也用這個方式可以放到github." }, { "title": "糖水密度", "url": "/posts/e7b396e6b0b4e5af86e5baa6/", "categories": "釀酒筆記", "tags": "", "date": "2022-02-17 06:34:21 +0000", "snippet": "有人在FB上問這個問題，剛好我在做自動投糖水機時有想過，反正我跟祖先生沒什麼交情，所以整理一下放在自己的blog.裝瓶時使用糖水比較容易確定糖是溶化的，如果要直接加到瓶子中，個人覺得糖水也比固體的糖還容易操作。只不過一般手搖店用的手動定量壓瓶器，大概看的是體積，，如果是用針筒或滴管會比較精準，也是看體積。很多人直覺上會認為糖溶到水中，水的體積不會變，我覺得這是錯的。水在4度C左右的密度是1....", "content": "有人在FB上問這個問題，剛好我在做自動投糖水機時有想過，反正我跟祖先生沒什麼交情，所以整理一下放在自己的blog.裝瓶時使用糖水比較容易確定糖是溶化的，如果要直接加到瓶子中，個人覺得糖水也比固體的糖還容易操作。只不過一般手搖店用的手動定量壓瓶器，大概看的是體積，，如果是用針筒或滴管會比較精準，也是看體積。很多人直覺上會認為糖溶到水中，水的體積不會變，我覺得這是錯的。水在4度C左右的密度是1.0g/cm3,在25度C時約0.997，以家用的測量儀器和環境，我們可以當成是1.0。100cc水～100g加100g糖，糖度為50%Brix，根據Brix對比重的換算，50%Brix～1.233比重。比重的定義是相對於水的密度，所以在25度C下，50%Brix的糖水密度應該接是 0.997 * 1.233=1.219，換算200g糖水的體積約 164cc。以上是我的理解和推測，為了進一步得到佐證，我搜尋了一下，找到幾個資料，值都很接近，資訊很多，只列出兩個比較容易看的：這篇可以看出來在室溫下50%的糖水密度在1.2~1.3之間，比較接近1.2 這個綱頁列的是20度C之下糖水的密度，50%Brix是1.230： 雖然我算出來的1.233不是很準確， 但很明顯地不是2.0， 也就是說100g水加100g糖不可能是100cc。100g糖和100cc的水並不是很貴，不相信的同學應該自己動手試試看。我剛好要裝瓶，雖說不需要到100g糖，就來記錄一下： 100g水，看起來比100ml刻度略高。 100g糖，體積不小。 搖很久還是不會溶解。100g的糖要完全溶在100g水並不容易，我通常是蓋上蓋子，蓋緊後再稍微轉鬆，放入電鍋蒸，順便消毒。電鍋剛跳起來時，還是會看到糖的顆粒，帶上隔熱手套搖一搖放回去，再放一下子，大概就可以完全溶解。 上圖是大概60~70度C的100g糖加100g水，很明顯地，體積在150ml和200ml之間。因為受限於測量儀器，我沒辦法很精準的測量真正的體積，但根據目測，我會相信160cc會是很接近的值～而且很明顯地，比體積100cc密度2.0還要接近。實務上，在很小的體積，稱重會比較容易，因為0.01g精度的秤很容易取得，而因為有附著力內聚力什麼的，水面不會是平面，即使用滴管，也很難準確測量。我的DIY自動投糖(水)機是用定量泵，校正是用秤重的方式，準確度在0.1g上下，在家釀還算堪用。最新版自動加糖水機，左邊是糖水，右邊是維他命C溶液。" }, { "title": "Green Moon &#8211; Blue Moon twist", "url": "/posts/green-moon-blue-moon-twist/", "categories": "釀酒筆記", "tags": "", "date": "2022-01-18 14:50:35 +0000", "snippet": "Blue Moon是美國最受歡迎的小麥啤酒，也是一款飽受爭議的啤酒。Blue Moon一開始叫 Belly Slide Belgian White，1995年在丹佛的棒球場開賣，研發者是布魯塞爾大學取得學位、Coors R&amp;D的Keith Villa博士。因為有位行政助理喝了Keith Villa釀的酒後說：你釀的酒很棒，這種機會並不常見，偶而才出現一次(once in a blue...", "content": "Blue Moon是美國最受歡迎的小麥啤酒，也是一款飽受爭議的啤酒。Blue Moon一開始叫 Belly Slide Belgian White，1995年在丹佛的棒球場開賣，研發者是布魯塞爾大學取得學位、Coors R&amp;D的Keith Villa博士。因為有位行政助理喝了Keith Villa釀的酒後說：你釀的酒很棒，這種機會並不常見，偶而才出現一次(once in a blue moon)。所以Villa決定把Blue Moon當成酒廠名。（英文小老師：在同一個月的出現兩次月圓，第二個月圓稱為blue moon，平均兩到三年才會出現一次blue moon。Once in a blue moon也就是並不常見的意思。）Blue Moon的最大爭議在於，雖然包裝和廣告得很像，但它不是”精釀(Craft)”啤酒-它並不符合美國對”Craft Beer”的定義：Blue Moon是美國八大商業啤酒廠之一的MillerCoors旗下的公司所生產的。很多精釀愛好者及家釀者對商業啤酒廠極其反感，他們對大廠出產的產品都不屑一顧；誠然，每個人都有自己的看法和做法，只是如果照這個邏輯，豪格登(Hoegaarden）現在歸屬於ABInBev集團、Fuller’s也賣給了Asahi，只因為不喜歡商業啤酒，要放棄也太多了。Blue Moon的第二個爭議是：雖然包裝上寫著是Belgian White，它不太能算是Belgian witbier（wit是white的意思）。原始古老的Belgian witbier其實己經消失在歷史的洪流中，現在我們所認定的Belgian witbier是1966年由Pierre Celis所重新創造出來的豪格登(Hoegaarden）白啤酒為典範的類型。Blue Moon要歸類為witbier的爭議點在於：第一是Blue Moon是用發芽小麥而不是用未發芽小麥，第二則是Blue Moon是並不是用通常比利時的酵母所釀造，所以缺乏酚(Phenol)或丁香(Clove)的風味。不過，用原料來定義類型並不是很恰當，說白了，因為未發芽小麥不容易處理，很多家釀甚至”精釀”也是用小麥芽來釀witbier，可能用未發芽小麥的才是少數；而所謂”比利時酵母”也是很懸，例如Fermentis的BE256標注為比利時酵母，但它概不是POF+，血緣上也偏向英式酵母釀出來也就不會有酚味，這樣子也可以算是”比利時酵母”？說到底，除了酵母和小麥的的原料問題，橙皮應該要用curacao，而麥芽應該要用自然風乾的wind malt才行。那結論變成只有Hoegaarden才是witbier了。Brewing with Wheat書中有一段引用Keith Villa本人的話，大概是這麼說的（粗翻）：「如果你試了所有的比利時白啤，然後跟每個釀酒師說他們的酒和別家的不太一樣，這些釀酒師一定會回答你，他們的是最正統的口味。這就是釀酒師，他們為自己的作品驕傲，他們會宣稱他們做的口味是最正統的(authentic)。回到類型的問題，我會說我們做的是比利時類型。」不管如何，我覺得Blue Moon還是挺好喝的；雖然在我的認定中，它算是美式小麥。Homebrewtalk.com有位之前釀過Blue Moon的釀酒師所公開的酒譜：ABV：5.4%50% 2 row40% white wheat malt10% flaked oatsHallertauer Mittelfrüh 90分鐘 17.5IBU1.25tsp coriander 10分鐘0.33tsp Valencia橙皮 5分鐘酵母： Chico strain (US-05, WLP001, wyeast1056 …)原料中的兩個添加物：芫荽籽和橙皮則是witbier中經典的存在，也是這個配方中最需要注意調整的部分；Blue Moon從上市以來，配方經過一些調整，主要就是這兩個香料的用量。我剛開始學習自釀時，對類型完全沒有概念，找到這個配方可謂如獲至寶；一來它的配方簡單：可以用乾酵母US-05、 榖類原料構成簡單、只有一種酒花，最重要的是，我也喜歡喝Blue Moon。最好笑的是，我剛開始時並不清楚比利時小麥用的是芫荽”籽”，只是傻傻地相信google的翻譯，把香菜拿來用，心裡還想著”為什麼香菜用小茶匙的單位？”後來我才知道，美國人的coriander指的就是coriander seed，也就是”籽”的部分，而cilantro才是植物體的部分。我就這樣用香菜釀了兩三批。結果？其實味道也還不差呢！前陣子啤酒頭推出了香菜啤酒，讓我想起這段入門摸索時的糗事，剛好手上還有WLP001， 決定「複習」一下我最早的家釀。Batch size: 2.5gallon2.5lb Pale Ale Malt2lb white wheat malt0.5lb flaked oatsHallertauer Mittelfrüh 0.5oz 60分鐘新鮮橙皮三棵(只有皮，沒有白色的部分） 5分鐘香菜一把 熄火時投入酵母： WLP001糖化溫度 55/10分 – 68/60分 – 76/20分；採用已經熟化的即食燕麥片，所以不需要特別處理，直接一起糖化；煮沸60分。發酵溫度20度。水質部分是yellow full(Ca/SO4/CL=50/55/70ppm)或yellow balanced(Ca/SO4/CL=50/75/60ppm)；簡單一點只加氯化鈣，調整後的水質大約是(Ca/SO4/CL=51/9/73ppm)。除了不需要太Dry，據說貴族系酒花和硫化塩的相性不好，硫酸鈣就能省則省地略過了。這個配方十分地簡單，但關鍵的香料部分的卻十分地難掌握，很容易太過或不及，要恰到好處非常難，雖然說最好是多試幾次抓出最佳份量，但如果以家釀說說，每次取得的原料品質、新鮮度都不穩定，很多時候只能憑感覺。 熄火後丟入沖洗乾淨的香菜一把，超像在煮湯。 裝瓶時試喝有很淡的”熟”香菜味，不是豬血糕上的”生”香菜味，而是排骨酥湯碗底那稍微變色的香菜味。瓶發結束後，香菜味到了若有似無的程度，大概是不說也不會覺得，強調了，或許會覺得有的程度。下次考慮除了結束前五分鐘先丟一些，加強一點風味。這批酒還有一個嚴重的缺失：有個接近澀味的味道，我推測是橙皮的油造成；可能是用新鮮的橙皮而且用太多了，下次做還是買風乾的橙皮好了。 10 Things You should Know About Blue Moon Bluemoon 前釀酒師在HBT上公開酒譜 MillerCoors Sued for Claiming Blue Moon Is a Craft beer" }, { "title": "再戰Candi Sugar", "url": "/posts/e5868de688b0candi-sugar/", "categories": "釀酒筆記", "tags": "candi-sugar", "date": "2021-12-06 14:57:56 +0000", "snippet": "上一次的挑戰雖然結論來說可能是成功的，過程有些可以改進的地方，包括反砂以及最後顏色的問題。sui Generis Brewing也提出了加入1%的果糖可以改善反砂的問題，這也是本次主要嘗試的重點。原料： 1100g白砂糖 10g DME 40～50ml 豐年果糖 250cc 水 50cc 食品級氫氧化鈣溶液(沒有全部使用）sui Generis Brewing說1%果糖，我想多一點...", "content": "上一次的挑戰雖然結論來說可能是成功的，過程有些可以改進的地方，包括反砂以及最後顏色的問題。sui Generis Brewing也提出了加入1%的果糖可以改善反砂的問題，這也是本次主要嘗試的重點。原料： 1100g白砂糖 10g DME 40～50ml 豐年果糖 250cc 水 50cc 食品級氫氧化鈣溶液(沒有全部使用）sui Generis Brewing說1%果糖，我想多一點應該無傷大雅。為了避免升溫太快，用接近最小的火來煮。前面儘量攪拌，加速砂糖溶解；超過100度以後就避免攪拌。不知道是不是果糖奏效，看起來沒有反砂的現象。 升溫到130度左右，維持30分鐘，期間糖己經變成淺黄色（沒有照片）；接著拉到140度左右，一點點地加入氫氧化鈣溶液，中途手抖了一下，倒得稍微多了一點，結果噴出了一小滴糖，幸好沒有噴到身體。加入鹼後，顏色開始加深。不知道是水氣還是什麼氣泡，糖幾乎滿出鍋子（看下圖鍋壁殘留的痕跡）： 隨時滴一小滴糖看顏色： 顏色加深得比預期的慢，雖說有在注意，其實目測也看不出顏色是多少Lovibond，感覺差不多就升溫到150幾度，然後結束了。在煮的時間，糖會摻雜許多小氣泡，所以光看鍋中的糖顏色不太準，滴在旁邊也可以看出變化；不過這次我只看得出來剛開始比較淺，後面的變化我其實也分不太清楚。為了方便使用，準備了矽膠模： 完全冷卻取出，一塊塊的看起來挺不錯的，色度估計在50~150L之間。 為了避免黏在一起，灑一些糖粉，放入袋中保存： 心得： 果糖在防止反砂的作用上應該有效。 多點耐心，緩慢升溫、控溫，時間雖然久，反而比較平順。 高溫、強鹼，要很小心。 超過120L的顏色又不燒焦可能用家裡的鍋碗瓢盆是有點困難的，據說專業的Candi Sugar製造商有用到壓力鍋，但我一直都沒有找到很清楚Candi Sugar製作流程說明；做到目前這個程度以我來說一來是可以接受了，二來大概也很難再進一步了。 放了一天後，顏色似乎又加深了一些；理論上梅納反應在溫度低一點也是會繼續進行的，所以顏色加深也是合理的。問題在於，我始終不知道色度到底是多少。" }, { "title": "Guinness Draught Clone", "url": "/posts/guinness-draught-clone/", "categories": "釀酒筆記", "tags": "", "date": "2021-11-24 13:38:40 +0000", "snippet": "Stout是很多人喜歡的類型，雖然大多數家釀人士都有帝國主義的傾向，個人卻比較偏好喝起來沒什麼負擔的Irish Dry Stout。而提到Irish Dry Stout-即使只是提Stout，就不能忽略來自愛爾蘭的Guinness，這個可以說是Stout最知名的代表。做為最受歡迎的啤酒之一，Guinness的Clone配方當然到處都是，BYO就有Guinness Draught Clone的...", "content": "Stout是很多人喜歡的類型，雖然大多數家釀人士都有帝國主義的傾向，個人卻比較偏好喝起來沒什麼負擔的Irish Dry Stout。而提到Irish Dry Stout-即使只是提Stout，就不能忽略來自愛爾蘭的Guinness，這個可以說是Stout最知名的代表。做為最受歡迎的啤酒之一，Guinness的Clone配方當然到處都是，BYO就有Guinness Draught Clone的酒譜：OG： 1.036 FG:1.006 IBU:45 SRM:36 ABV:4.2%5 lbs(2.3kg) English 2-row2.4 lbs(1.1kg) flaked barley1lb(0.45kg) roasted barley12 AAU EKG@60minWyeast 1084 or WLP004糖化： 66度 60分鐘煮沸 90分鐘發酵溫度 22度C簡單又直覺的酒譜：愛爾蘭酵母、英式酒花，除了基礎麥芽外就是大麥和烤大麥-這個榖類成份基本上就是Irish Dry Stout的基礎。首先烤大麥在BJCP 2015中被直接點名；有人認為烤大麥(roasted barley)的泡沬是白/淺色的，而黑麥芽(black malt/black pattern)的泡沫會是棕色的，Guinness的標誌是白色的泡沫；經過我的研究google，泡沫的會變色主要是雜質，烤大麥的顏色會比較淺並沒有實質的科學證明。”flaked barley”基本上就是沒有發芽的”大麥”。通常使用沒有發芽的穀類會需要做cereal mash，以糊化其中的澱粉，為了簡化釀酒的程序，將大麥蒸熟後壓扁，就可以直接和麥芽一起糖化而不需另外處理，這就是美國家釀網站大都有在賣的flaked baley。不過在台灣找不到”flaked barley”，只能找到生的大麥，處理上比較麻煩。一般在談啤酒的水質時，總是會提到最具有代表性的捷克Plzeň的軟水、英國Burdon on Trent的極硬水，以及愛爾蘭都柏林的高鹼性水： captured from Brewersfriends.com 都柏林的水質有很高的殘鹼性，只用淺色麥芽會有比較高的糖化pH值，所以適合加入了比較多可以降低pH值深色麥芽的Stout。這個說法是解說水質的書或文章很容易出現的解釋，雖然這個敍述沒有錯，但套在Guinness上卻是錯的，因為 Guinness使用的是來自Wicklow山上的軟水： 圖片來自Homebrewtalk.com 那麼，Guinness怎麼處理大量深色麥芽造成的pH值下降？答案是：Guinness沒有把深色麥加入一起糖化。在全世界的Guinness酒廠釀的都是不含深色麥芽的淺色啤酒，然後再加入很有名的深色Guinness Flavour Extract。雖然說Gunness Flavour Extract的成份是商業機密，很明顯的深色麥芽必定是原料其中之一；而這個做法或許也解釋了為什麼Guinness的泡沫會如此潔白的秘密-Guinness Flavour Extract不應該含有麥芽的雜質。這個配方我之前釀過兩次了，結果都還不錯。配方本身沒有太多需要調整的部分，不過因為大麥片是以台斤(600g)計算，所以就用2台斤(2.6lbs)。因為有相對多的非發芽穀類，所以糖化行程另外加入了55度C30分鐘以及習慣性加入的20分鐘的77C；酵母和之前一樣使用WLP004.煮麥汁前一天先冷泡烤大麥，磨碎後用2qt的水浸泡： 我第一次釀這個配方是用flaked barley，毫無困難；第二次用生的大麥片，用飯鍋煮熟後直接加入糖化，結果大麥片像飯一樣黏成一團，只好撈出來用果汁機打碎再放回去糖化。這一次，一樣只能用生大麥片，決定試試看cereal mash。cereal mash基本上就是把穀類加上4~6公升/公斤的水煮熟，反正需要加熱，加一點麥芽，在60幾度停留一下，多少分解一些澱粉和蛋白質。 煮熟的大麥片幾乎把水吸乾（我用4公升水），下次應該用多一點的水。煮完後的樣子看起來需要粉碎，所以用果菜汁機打碎： 結果糊成一團，而且整個吸水膨脹了，要分成很多次打。下次考慮先打碎再煮。打完後和麥芽一起加入糖化。煮沸結束後再把冷泡的黑麥汁加入，冷卻後進發酵桶。結果及檢討：很平順但無趣的酒。WLP004加上麥芽成份的麥味很夠，但味道很單調，大概習慣商業啤酒的人會覺得好，習慣喝精釀的人會覺得沒什麼味道。原因之一是我沒有用英國的麥芽；如果採用MO，增加一點甜感會好一些；另外，沒有用氮氣始終不太對味。 Water used to brew Guinness is soft water according to Guinness, on Homebrewtalk.com Guinness Secrets Revealed! Guinness Draught clone, BYO" }, { "title": "為末日做準備-自發麥芽研究", "url": "/posts/e782bae69cabe697a5e5819ae6ba96e58299-e887aae799bce9baa5e88abde7a094e7a9b6/", "categories": "釀酒筆記", "tags": "", "date": "2021-11-24 13:22:02 +0000", "snippet": "為什麼要自發麥芽？ 有趣；跟為什麼要釀啤酒一樣，我們很難釀出比市面上最好的啤酒好，也很難比最便宜的便宜，釀啤酒最主要的理由是有趣，自發麥芽也是一樣。 學習；了解麥芽這個原料的產生無疑地會對釀啤酒這件事有更清楚的認知。古早以前的釀酒師都是自己作麥芽的，只要看看Pilsner malt和Pilsner Urquell、Vienna malt和Vienna lager的關係，就不難理解麥芽和啤...", "content": "為什麼要自發麥芽？ 有趣；跟為什麼要釀啤酒一樣，我們很難釀出比市面上最好的啤酒好，也很難比最便宜的便宜，釀啤酒最主要的理由是有趣，自發麥芽也是一樣。 學習；了解麥芽這個原料的產生無疑地會對釀啤酒這件事有更清楚的認知。古早以前的釀酒師都是自己作麥芽的，只要看看Pilsner malt和Pilsner Urquell、Vienna malt和Vienna lager的關係，就不難理解麥芽和啤酒的關係。 為末日做準備；如果三年前有人說將有一場瘟疫在全球大流行，造成上億人感染、數百萬人死亡，歐洲許多大城市因此封閉…，大部分人可能都不覺得有可能發生，但現在就是這種情況。退一萬步來說，因為疫情，國際運費上漲，很多進口原料開始上漲，不能完全排除麥芽有缺貨的可能。（至於大麥的來源，那是下一步的課題..） 為轉生異世界做準備；雖然轉生成史萊姆或蜘蛛等非人類的可能性也不低，再怎麼說還是會想喝啤酒的；退一千萬步來說， 如果想寫個異世界轉生或穿越輕小說，有發麥芽的知識比較不會寫出讓專家笑掉大牙的內容。 三個步驟：浸泡、發芽、烘乾。浸泡(Steep)目標是讓麥子吸水達45%左右的水份，麥子發芽也需要氧氣，泡冷水(10-15度C)一段時間後，需要晾乾曝氣(Air Rest)；如果沒有打入空氣，浸泡不要超過8小時就要晾乾曝氣，然後換水後重複浸泡曝氣，直到目標含水率達成。監控水份是關鍵。比較現代化的作法浸泡時間更短，換水也更頻繁，泡水時也會打氧氣或空氣，如何有效率的達成目標是麥芽廠商業機密。視麥子、溫度等等而定，這個步驟通常會花2～3天。生大麥的含水率一般在12%，所以要增加約33%左右的水份。在浸泡接近完成時，麥子會出現白色的點狀白芽，這個就叫chit，為了符合純釀法而做出來的chit malt大概是是這個階段的產品。發芽(Germination)溫度應該維持在13-18度C，最好在15度C以下；溫度愈高，速度愈快，但溫度低的品質會比較好，發芽程度會比較一致。要低修飾度(low modification)，胚芽目標長度為麥子的1/2~2/3，良好修飾度( well modification)的話則是 3/4或更長一些，超過麥子本身的長度算是過度修飾。麥芽最好平鋪，厚度5公分或以下。視溫度而定，發芽通常要4-7天。發芽本身會發熱，需要偶而翻動一下。烘乾(Kiln)分兩個步驟，為了不破壞糖化酶，先以不高於40~50度的低溫烘乾至10%含水率後，再以比較高的溫度烘至3~4%含水率；第二個步驟高溫烘烤的動作叫curing；Pilsner的高溫不超過85度，Munich通常是105度，但Munich等比較深色的麥芽會有比較特殊的溫度行程。長段低溫烘乾通常要十幾個小時，高溫的curing則要3~4小時。不同的溫濕度行程會造成不同的麥芽風味；跟烘咖啡豆一樣。烘乾這個步驟是最需要特殊器材的一步；前半段的低溫烘乾需要排除濕氣，很小批量的可以用食物乾燥機，比較大批量可以用電暖爐配合風扇；通常需要DIY一下。後半段的高溫Curing可以用烤箱。烘的溫度愈高，糖化酶就會被破壞得愈多。傳統比利時witbier用的wind malt是不烘烤自然風乾的，因為沒有高溫烘烤，wind malt的糖化酶很多，可以配合大量的輔料使用。水晶/焦糖麥芽的烘乾方式和基礎麥不一樣，在發芽結束後，在高水份的情況下，直接拉高麥芽溫度到糖化溫度(67度上下），維持數小時後再升溫至121度，然後維持溫度直到想要的顏色。烘烤類麥芽(Roasted Malt)是用更高溫的溫度去烘烤，需要烘咖啡豆的滾筒式才能烘得均勻。在發芽完成、烘乾進行前，有兩個步驟是”家發”或簡化的流程通常不會包含的：Couching/Withering：Couching：把麥芽放進密封的容器12-24小時；麥芽發芽產生的熱和二氧化碳會把自己悶死，也會改變麥芽的風味。據說英國的麥芽都會這麼做。（Brumalt的製作流程也好像有這一個步驟。）Withering：烘乾前先用涼風吹麥芽，讓麥芽儘量乾燥。不同的溫濕度流程對麥芽風味有影響，不同的溫濕度流程對麥芽風味有影響；前面說過幾次，再說兩遍以示其重要性。含水率的量測含水率是一個很關鍵的值，在浸泡及烘烤的過程中，必須常常量測。測量穀類含水率的儀器很貴，所以通常家釀或家發(家庭發芽?)的人不會有這類的器材，取而代之，通常用秤重的方式來推算含水率。如果發芽的量不多，就可以一次秤；如果量稍多，會取部分的麥子，放在網袋中，和其他的麥子接受一樣的處理，用這部分的麥芽來代表全部的麥芽。測量時要注意擦乾麥粒表面的水。目前含水率 ＝100 – (100 – 初始含水率）/ (目前重量/初始重量)例：初始100g，含水率12%，目前重量為 160g目前含水率 ＝ 100 – (100-12) / ( 160/100)=45轉換公式為計算目標重量：目標重量 ＝ 初始重量 * (100 – 初始含水率）/ （100 – 目標含水率）例：初始100g，含水率12%，目標含水率為 45%目標重量 ＝100 * (100 – 12）/ （100 -45）= 160 g以上是浸泡發芽前的含水率計算，發芽後因為呼吸作用會消耗養份，麥芽的淨重會減少6%左右，所以烘烤時的含水率需要修正：修正含水率 = 100 – (100 -呼吸消耗)/100 * (100 – 初始含水率) /( 目前重量/初始重量 )例：初始重5g，現重4.3g， 初始含水率12%，呼吸消耗6%修正含水率 = 100 – (100 -6)/100 * (100 – 12) /( 4.3/5 ) = 3.8%Sprowlabs.com的麥芽實作重點Step 0. 準備大麥取得來源最簡單的是飼料用的大麥，可是這種大麥品質通常不好，大小不一且破碎的麥粒多，而且可能混雜不同的來源，發芽時很難有一致的進度，甚至發芽率會比較低。不過飼料用的大麥通常便宜，做為練習或無法取得其他來源時替代也是堪用，至少是可以用的。麥芽的成品重量大約是生麥重量的80%。清洗：生麥常常附有許多灰塵土壤以及空殼，清洗就是要去除這些雜物。加入水用手攪拌清洗，把浮在水面的空殼撈掉，重複幾次直到至少水清澈到可以看清楚水面10公分下的麥粒（通常是第三次）。準備樣本：清洗前取部分麥粒秤重並記錄重量，放在尼龍網袋或泡茶用金屬濾球內。Step 1.浸泡 加入13度C左右的水淹過麥粒約2~3公分，置於13度C左右的環境 8小時後將水放掉讓麥粒曝氣8小時 加入新水，重複浸泡和曝氣直到含水率為45%左右（通常是2~4次的循環會達成）。比較高的溫度浸泡速度會比較快，但速度會不一致，導致發芽速度的不一致，儘量維持在10-15度之間會比較好。不需要嚴格遵循8小時的規範，但除非打氣，不要連續泡水超過8小時，麥子發芽是需要氧氣的，泡水太久會窒息。曝氣12-16小時也是可以的。開始出現白芽點時，可以計算發芽比率(chit count）, 取樣50顆麥粒，計算發芽比率。Step 2.發芽將麥粒平均散布在發芽用的平盤上，厚度不要太厚，約5公分上下。每天翻動麥芽2～4次，3天後翻動次數可以略為增加。適當噴洒清水保持濕度。維持環境溫度在15度上下。發芽要監測胚芽的長度，胚芽是在麥殼內長向麥粒方向的白色粗壯芽，有時也會長出殼外。胚芽長度不一定會很一致，可以取部分樣本記錄長度比例。長度是以麥粒長度為單位；當大部分都超過3/4(Well modification)， 則發芽完成。Step 3. 烘乾 49度烘8小時；含水率應該從45%降到25% 60-66度4小時；含水率目標10% Curing: 77-93度 3小時不同的溫濕度行程會有不同的風味，這是比較簡化的基礎麥做法。如果要長期保存，最終含水率降到4%左右或以下會比較好。Step finish. 去芽根把麥芽用在濾籃中攪拌磨擦，烘乾程度夠的話，芽根會自己掉落。芽根不去除的話，會有苦澀味。 Apendix D in Malt: A practical Guide from Field to Brewhouse Brewing Beer The Hard Way示範用飼料用大麥發麥芽 https://www.homebrewtalk.com/threads/adventures-in-home-malting.679100/ https://www.sprowtlabs.com/blog/how-to-malt https://byo.com/article/malting-your-own-techniques/ Brewing Beer The Hard Way" }, { "title": "Sierra Nevada Pale Ale", "url": "/posts/sierra-nevada-pale-ale/", "categories": "釀酒筆記", "tags": "", "date": "2021-06-22 02:13:39 +0000", "snippet": "Sierra Nevada Pale Ale簡稱SNPA，是Sierra Nevada酒廠著名的代表作，部份人更認為這支酒型塑了American Pale Ale的風格，也對美國精釀風潮的推進功不可沒，因為這支1980推出的酒用了大量的美式酒花，它的暢銷證明了消費者對大量酒花的接受度。（美國人有所謂”Go big, or go home”的思想，所以這幾年酒花用量一直上升，用現在的標準可能不...", "content": "Sierra Nevada Pale Ale簡稱SNPA，是Sierra Nevada酒廠著名的代表作，部份人更認為這支酒型塑了American Pale Ale的風格，也對美國精釀風潮的推進功不可沒，因為這支1980推出的酒用了大量的美式酒花，它的暢銷證明了消費者對大量酒花的接受度。（美國人有所謂”Go big, or go home”的思想，所以這幾年酒花用量一直上升，用現在的標準可能不算”大量”，但放在1980年，這支酒的酒花用量也算是實踐了”go big or go home”的想法了吧！）Sierra Nevada酒廠的創辦人Ken Grossman從小就看鄰居叔叔玩釀酒，初中就在家裡搞了一個釀酒的場所。他在1979年和同是自釀的友人Paul Camusi於在加州的Chico成立Sierra Nevada酒廠。他們跟朋友借了5萬美元（後來又借了5萬），租了一個將近85坪（3000平方英呎）的倉庫，為了節省成本，撿拾廢棄的牛奶器材，自己組了一個可以釀造10Barrel(近1,200公升）的釀造器材；為了省點錢，還到處去找關掉的酒廠跟人家要酒瓶。到了2016年，Sierra Nevada酒廠已經是全美第七大、 由私人擁有的第三大酒廠了。這是個很勵志的故事，啤酒誌對他們的故事以及這支酒有一些介紹，值得大家一讀。回到酒本身，Sierra Nevada是由在自家的網站提供了SNPA的Homebrew酒譜：OG:1.054FG:1.011IBU:382row Pale 1.8°L 92%Caramel 60°L 8%Cascade 0.5 oz 90分Cascade 0.75 oz 60分Cascade 2 oz 30分Cascade 2 oz 0分(flameout)155°F(68.3°C)糖化60分鐘後，升溫到170°F(76.7°C)維持5分鐘做mashout。煮沸90分鐘。酵母Chico strain，68°F(20°C)發酵。(OG/FG/IBU沒有列在酒譜中，是從產品網頁取得的資訊。）相當簡單的酒譜，除了基礎麥芽加上一些水晶麥，只用一種酒花-也就是美國酒花的代表Cascade。唯一比較突出的是酒花用量高達5.25 oz(148.8g)，接近IPA的用量，事實上有些人認為SANA是IPA，但如果用BJCP的21A.American IPA的標準來看，IBU 38很接近IPA的40-70範圍下限，2是喝不出來的差距。不過，38其實也不算太高，還在Pale Ale的範圍內（BJCP 18B.American Pale Ale的IBU範圍是30-50)，連Pilsner Urquell的IBU也是40上下。BU:OG比約0.7， 算是合理是Pale Ale的範圍。會有這麼高酒花用量的原因是2 oz(56.7g)的flameout，熄火後才投入的酒花，私以為這是這個酒譜值得思考的部分。煮沸時間為零，所以IBU的計算可能會是零。考慮到酒廠的批量很大，冷卻要花很多時間，而且酒廠當然是用熱交換式（通常是板式）的冷卻器，也就是說熄火後投入的酒花可能還是在高達90幾度C以上的麥汁中泡了很久-可能長達一個小時以上。雖然沒有持續加熱，在90°C以上，alpha酸的異構化還是會繼續發生的，所以實際的IBU可能會比計算的還高。不過，酒廠的IBU數字也可能是用儀器測出來的，再加上這個酒譜標明了是給Homebrew用的，還有每年酒花的alpha acid含量都不一樣，這個部分可能是這個酒譜最需要依器材調整的地方。除了代表性的酒花，酵母也是非常的有代表性。Sierra Nevada酒廠的酵母是從從西貝爾技術學院(Siebel Institute)的BRY 96而來的，他們把這個酵母稱為Chico，也就是 Sierra Nevada起家的城市名。一樣從BRY96培養出來的酵母，被稱為Chico Strain，也是大部分Homebrewer一想到APA, west coast IPA最容易想到的酵母：US05, WLP001,WY1056,等等。水質是酒譜很常缺漏的部分，但我覺得Pale Ale和IPA是最需要的注意水的類型之一。強調酒花風味的水通常會拉高硫酸鹽的成份，但我覺得Burtonize-也就是把硫酸鹽拉到610ppm太過極端。google了一下，不少人用Brun waer的Pale Ale水質（SO4:Cl=300:55）得到不錯的結果，比起610ppm，300pmm 應該是比較保守一點的選擇；如果怕太高，稍微拉低點到200ppm應該在範圍內。68.3°C的糖化溫度雖然是常用的單一糖化溫度66-68°C之間，但是在偏高的範圍，而目標發酵度是80%（OG:1.054/FG:1.011），卻也是高標的發酵度。在有些系統下要有這樣的發酵度可能必須用比較低一點的糖化溫度。尋找相關資料的時候，也發現另一份來自2012年12月號BYO雜誌的酒譜：OG:1.053FG:1.011IBU:372row Pale 1.8°L 4.7kgCaramel 60°L 0.45kgMagnum 0.5 oz 60分Perle 0.5oz 60分Cascade 2 oz 30分Cascade 2 oz 0分(flameout)和Sierra Nevada網站的大致一樣，主要差異在於苦花是用Magnum和Perle，其他的材料及糖化行程和發酵等大致相同。理論上來說，煮了60分鐘的酒花，主要是貢獻苦味，對風味的影響相對小，所以兩個酒譜的差異應該有限，或許不同人、不同釀造工具所造成的的差異可能還比較大。我的釀造：採用Sierra Nevada網站酒花全用Cascade的版本，但最早90分的酒花改用FWH(First Wort hopping)，也就是出第一道麥汁就投入酒花（反正都 90分鐘了，據說FWH苦味會比較溫和，實作上也比較簡單）；糖化溫度用55°C/10分、67°C/60分、76°C/20分，加入蛋白質休止的原因是糖化加溫時間比較短，用 67°C是我的系統控溫的調整，76°C維持20分則是Mashout；這是我慣用的糖化行程所調整出來的；水質用Brun Water的Pale Ale profile；酵母用wlp001，接種溫度19°C，發酵溫度20°C。實際釀造成果：OG:1.051,比酒譜略低，在個人的誤差範圍內。第七天左右達到FG:1.011。裝瓶時的稍微試了點味道，覺得是款易飲性很高的標準APA。待瓶發完成，會找來正版的SNAP，比較一下味道的差異。這批酒可能是冷降吸入了氧氣或是裝瓶不慎，有酒花氧化的風味。也隔了許久，終於買到7-11賣的Sierra Nevada Pale Ale。根據瓶身上印的有效一年，到期是7/14/2022， 合理推測是今年7/14出廠的產品，己經比我這批還新鮮了！實際品嚐的感覺，大體上架構是一致的，但扣除我的酒花氧化問題，正版的SNPA喝起來多了一點類似百香果或花香的味道：可能原因有三個：第一，我的酒花氧化失去了這個風味、第二，Sierra Nevada提供的酒譜強調使用全花，但我只能使用碇狀酒花，三、Sierra Nevada使用了其他酒花。如果第三點是可能的，那麼BYO的酒譜也是一個可以嘗試的選擇-我有一次用Perle有得到類似花香的感覺。更新，喝到一瓶氧化程度比較弱一點的 ，雖然沒有正版的那麼明顯，但確實有些微的百香果似的味道，所以”氧化”和全花可能是解答。酒花類的酒基本上就是考驗裝瓶技巧啊！ Sierra Nevada Pale Ale Recipe The Complete Guide to the “Chico” Strain of Yeast 啤酒誌介紹SNPA Sierra Nevada Brewery, wiki The Brewmasters: Steven Dresler – Sierra Nevada Sierra Nevada Brewing Co.’s Pale Ale Clone by BYO" }, { "title": "Bière de Garde", "url": "/posts/biere-de-garde/", "categories": "釀酒筆記", "tags": "", "date": "2021-06-17 06:52:12 +0000", "snippet": "偶然在家樂福找到，google了一番，特留下記錄。Bière de Garde意思是「用來存放的啤酒(beer for keeping)」，它誕生於現今法國北部和比利時交界的地方，和Saison一樣，是屬於農村啤酒。以前Bière de Garde是怎麼釀的，並沒有留下太多文獻，己不可考。現今的Bière de Garde則是由一家在法國北部、1922年設廠的Brasserie Duyck在...", "content": "偶然在家樂福找到，google了一番，特留下記錄。Bière de Garde意思是「用來存放的啤酒(beer for keeping)」，它誕生於現今法國北部和比利時交界的地方，和Saison一樣，是屬於農村啤酒。以前Bière de Garde是怎麼釀的，並沒有留下太多文獻，己不可考。現今的Bière de Garde則是由一家在法國北部、1922年設廠的Brasserie Duyck在1940~1950年代”重新發明”出來的類型；這家酒廠出產的一支用香檳瓶的包裝Jenlain Bière de Garde，因為受到法國大學生的歡迎，有些酒廠便開始照著這支酒的風格去釀造，這是現今Bière de Garde類型的起源。雖然區域接近，在比利時境內的發展出來的是Saison，而在法國境內的是Bière de Garde；雖然在某些分類把Saison和Bière de Garde放在同一個分類（BJCP 2015年放在24. Belgian Ale），這兩個類型相似的似乎只有乾爽(dry)一點；Saison著名的是偏高溫發酵及酚味，Bière de Garde卻是接近altbier和kolsch的低溫發酵，味道乾淨。在BJCP2015定義中，Bière de Garde的顏色範圍是SRM 6 – 19， 金黃色到深棕色，風味特色是香甜麥芽風味但乾爽(dry)，酒花味幾乎沒有或中等（IBU:18-28)，乾淨的發酵，酒精度是6-8.5%。釀造方面來說，綜觀網路上的配方，酒花不是重點，大約就歐陸酒花20IBU上下；麥芽基本上也沒有太出乎意料外的部分，大部分的pilsner/pale malt，加一些munich或vienna，可能再加一點crystal。為了強調dry的特性，糖化溫度比較低，糖化時間也可以拉長；另外也有加糖讓酒更dry的。酵母和發酵就比較有趣了：乾淨的風味，所以採用低一點的溫度，而酵母卻是則從lager酵母、kolsch 酵母到saison或belgian golden strong的酵母都有人用。從風味的描述來看；是果酯味比較弱的Golden Golden Strong；酒精度比較高、比較不苦的的kolsch。喝完及看完這些資料，我沒有想釀的感覺。 Bière De Garde： The Farmhouse “Beer for Keeping” Style The Oxford Companion to Beer definition of Bière de Garde" }, { "title": "BrewPiLess簡易中文教學(三)基本設定及操作", "url": "/posts/brewpilesse7b0a1e69893e4b8ade69687e69599e5adb8e4b889e59fbae69cace8a8ade5ae9ae58f8ae6938de4bd9c/", "categories": "BrewPi@ESP8266, 釀酒筆記", "tags": "brewpiless", "date": "2021-04-12 03:48:02 +0000", "snippet": "System/系統成功刷入軔體並連線成功後，就可以看見首頁的網頁。左上方會顯示可以設定的Title及版本，右邊是一系列的功能頁面連結。第一次使用，System(系統)的設定通常是必要的：每個功能設定說明如下： 項目 說明 LCD Auto off 在設定的時間後會自動把LCD的背光關掉，如果設成0， 就不會自動關掉。...", "content": "System/系統成功刷入軔體並連線成功後，就可以看見首頁的網頁。左上方會顯示可以設定的Title及版本，右邊是一系列的功能頁面連結。第一次使用，System(系統)的設定通常是必要的：每個功能設定說明如下： 項目 說明 LCD Auto off 在設定的時間後會自動把LCD的背光關掉，如果設成0， 就不會自動關掉。 LCD Display 4.2版的新功能；設成Brewpi，LCD會顯示如一直以來的顯示，設成Additional，則會顯示iSpindel、濕度、IP等資訊，設成Rotate的話，則會兩個顯示隔段時間切換顯示。 Title 在網頁中出現的Title. Host/Network Name 在Apple系統下可以用這個名稱加”.local”(例如brewpiless.local)來連線，也是AP模式時的網路名稱。（有時間用名稱的方式會失效，可能是MDNS library的問題，為己知問題） HTTP port HTTP port. User name 某些設定相關的網頁會要求登作所使用的使用者名稱。 Password 密碼。某些設定相關的網頁會要求密碼；另外這個密碼也是BPL當AP時的網路密碼，所以最低要有8個字元。 Always ask for password 在所有的頁面都要求輸入密碼。（這個功能很久沒有檢查了，可能有些地方會沒有用。） Network Mode 有三種設定: Station+AP, AP, 和 Station。單純設定成Station會比Station + AP穩定，如果使用iSpindel而且用不銹鋼發酵桶或况箱，Station+AP就可以當成iSpindel的proxy。另外，如果設成station，但所連線的網路消失或連不上線，過一段時間後會自動切成Station+AP模式，這樣才有機會連上控制器。 Network 如果連線成功，會顯示所連接的網路名稱。按這個按鈕會出現設定網路的窗口。 IP IP SYSINFO 這個按鈕按下後會出現像是MAC address、檔案系統大小、Flash ID等資訊；如果系統有不穩定的問題，應該先確認flash實際大小和設定大小是否一致。 除了LCD相關的設定外，更改設定系統會重新開機。Device/設定設定完系統後，感溫器等週邊的設定也是正式使用前所必要的，從”DEVICE”(設定）進入： 上圖是下個工作中的BPL的設定。這個頁面進來應該是空的，要按最右邊的”REFRESH DEVICE LIST”按鈕，才會出現東西。第一次設定，最好按一次”INIT/ERASE EEPROM”，才不會有設定無法儲存的問題。還沒設定前，所有的設備應該都會出現在”Detected Device”下。如果設定無誤，會出垷己經連接的測溫線，以及D5, D7, D8三個PIN，再加上一個”External Sensor”。測溫線設定：選一個沒有用的Device Slot編號，選定Function(“Chamber Temp”或Beer Temp)後按Apply。注意：溫度的讀數只有每次”REFRESH DEVICE LIST”時才會更新，”Calibration”用來修正誤差，一般來說誤差在0.5以內，如果超過1度，可能要檢查一下是不是有接線上的問題。另外，有一些DS18B20是parasite mode，因為不穩定，所以不支援。冷卻或加熱設定：一樣選一個沒有用的Device Slot編號，選定Function(“Chamber Cooler”或Chamber Heater)後；如果是用一般的繼電器Pin Type應選”inverted”，如果是SSR則選”Not inverted”，確定後按Apply。按完Apply並不會出現變化。要確認是否有成功儲存，再按一次”REFRESH DEVICE LIST”，如果成功設定，這一格會被放Installed Device底下。附帶說明，External Sensor是指iSpindel或Tilt的溫度，因為無線的特性，這個設備一直都會出現，但如果沒有收到資訊，會判定為斷線中。Control/控制 控制頁面是設定工作模式及控制溫度，Beer Const為啤酒定溫：控制器依照目前啤酒溫度及設定溫度，用PID動態計算出冰箱的溫度來維持啤酒溫度的恆定。FRIDGE CONST為冰箱定溫，把冰箱溫度控制在一個範圍內。OFF則是關掉溫控。模式及溫度設定好後按APPLY則可。BEER PROFILE比較複雜，原始的BrewPi用時間為唯一條件，設定上比較簡單，BPL可以用比重當條件，複雜度比較高，使用比重為條件時要注意是否如預期。使用Beer Profile首先要設定START DATE，也就是起始時間，沒有正確地設定起始間，執签就不會正確。Beer Profile由兩種行程組成：定溫及升降溫(RAMP)，定溫即是想要設定的目標啤酒溫度，而升降溫則是自動插在兩個定溫之間的階段。升降溫只能設定時間，如果要快速地升降溫，可以設定為0.1天或更小，溫度為算動依時間比例變化。定溫的部分除了溫度，還需要設定條件，當條件滿足時，則進入下個升降溫階段過渡到下個定溫階段。可以設定的條件有： Time: 時間經過，單位為天 SG：比重低於設定值，輸入比重值如 1.010，也可以輸入百分比例如70%，表示為發酵程度(Attenuation)，例如OG 1.050, 70%表示為 1.015（OG必須輸入） Stable：比重變化低於設定值（0.001)的時間，單位為小時，最大值為72。也可以用”比重@時間”的格式指定，比重單位為0.0001，例如 “4@48″表示48小時內比重變化小於0.004加上這三個的”同時”及”或者”，總共有11種條件。使用比重相關條件時，必須儲存log。按ADD會新增一個定溫及中間插入的升降溫。在按APPLY之前，務必先SAVE。在行程執行中途，也可以更改，只需要直接SAVE，不需要再APPLY；如果START DATE不更改，會視為同一個profile，然後從目前的階段繼續執行；如果START DATE有更改，會認定為新的不同的profile，從新比對條件；在有比重條件的情況下，後者的認定有點複雜，請小心使用。使用Beer Profile按下Apply時，會提示輸入OG及開始記錄log的要求，如果沒有用比重的條件，可以按下”OK, Just Go”。Control頁面還有其他功能，在介編相關功能再一起說明。Log/記錄Log有三個群組：Local Log, Remote Log, 及MQTT。這三個是獨立的功能，但並不建議同時啓用Remote Log和MQTT。Local Log Local Log顧名思義是在BPL上的記錄，在iSpindel相關的功能上是不可或缺的。它的操作基本上是”Start”和”Stop”。開始記錄時必須提供命名；為了簡化起見，Log的名稱不能含有特殊字元（Log名稱即是檔案名稱）。後面有幾個欄位及選項和iSpindel相關，如果不使用，不要選擇Calibrate iSpindel的選項。Remote LogRemote Log是定時向某個伺服器或雲端服務傳送資料的功能，基本上是使用HTTP，目前不支援HTTPS。 熟悉HTTP的人應該能了解每個欄位的意義；fomat是傳送的資料，使用的格式是類似C/C++ printf的格式，例如”beerTemp:%b”，%b為啤酒溫度，真實傳送的資會是”beerTemp:20″-如果啤酒溫度是20度。Notations中有列出可以使用的符號。不熟悉HTTP的人可以使用內定的格式，目前支援的服務有： thinspeak.com ubidots.com brewfather.app brewersfriend.com每個內定格式有對應需要埴的值，像是API Key之類的。最後不要忘記在Remote Log後面有一個開關，必須啓用才會開始。MQTTMQTT的設定分成三個部分，第一個是基本server的設定，然後是Reporting及Remote Control。Reporting可以選擇單一資料（例如啤酒溫度）用一個Topic，也可以選擇”Whole As JSON”，就會把所有資料用JSON格式發佈到設定的Topic中-ubidots.com的MQTT是採用這個作法。BPL也可以訂閱設定的Topic來達到Remote Control遠端遙控的目的。目前支援可以搖控的項目有 項目 說明 Mode 溫控模式可以輸入數字或字元：o或0:Off, 1或f:冰箱定溫,2或b:啤酒定溫，3或p:溫度行程。當設定為beer Profile時，會用啓用”目前”的beer profile，並把開始時間設為現在。 beerSet 設定啤酒溫度，這個值設定的話會自動切換成啤酒定溫。 fridgeSet 設定冰箱溫度，這個值設定的話會自動切換成冰箱定溫。 Spunding Control Spunding控制。 PTC Temperature PTC溫度設定。 " }, { "title": "自釀怪傢私之定量投糖器(2)", "url": "/posts/e887aae98780e680aae582a2e7a781e4b98be5ae9ae9878fe68a95e7b396e599a82/", "categories": "釀酒筆記", "tags": "", "date": "2021-03-17 11:09:23 +0000", "snippet": "這篇主要是實戰檢討與經驗分享。第一版正式上場：採用140ml/min的小泵，按鈕暫時找一個布丁盒裝起來；出糖口固定，放瓶子的台面用木條做一個框，方便定位，如此放瓶子可以不用對準出糖口；理想上挖一個淺凹槽會比較漂亮，但超出我的木工技術（如果算是有技術的話）。整體來說，算是成功的使用經驗。可以一隻手完成所有動作：有木框定位，不用太費心就可以把瓶子放到正確的位置，放好後順手按下按鈕即可。很符合我的...", "content": "這篇主要是實戰檢討與經驗分享。第一版正式上場：採用140ml/min的小泵，按鈕暫時找一個布丁盒裝起來；出糖口固定，放瓶子的台面用木條做一個框，方便定位，如此放瓶子可以不用對準出糖口；理想上挖一個淺凹槽會比較漂亮，但超出我的木工技術（如果算是有技術的話）。整體來說，算是成功的使用經驗。可以一隻手完成所有動作：有木框定位，不用太費心就可以把瓶子放到正確的位置，放好後順手按下按鈕即可。很符合我的理想。使用50Brix的糖水，使用前跑一次校正，只用6ml左右完成校正，結果不是很準確，但誤差在0.1左右而己，還可以接受。校正方面的測試以後有時間要多測幾次。這一次裝瓶，我用了三種大小的瓶子，可以隨時更改出糖量真的很方便；不過，因為原本預定只用兩種，所以用第三種容量的瓶子時，還要上網查需要多少糖；接下來會把算瓶發糖的公式加進去，出糖時可以直接輸入容量，算出糖量，這樣會方便很多。第二版“手”是最珍貴的資源，也是最容易犯錯的來源，所以如果能夠放好瓶子自動出糖，會更方便。原本有想過用彈簧配合微動開關，但對DIY來說，機構上比較複雜，需要考慮到彈簧的壓縮和放瓶子平台的穩定度等等。我試過反射式紅外線感測器，基本上不能用，因為瓶子大多是褐色的，不太反射紅外線。不過，這個失敗的經驗讓我想到反射式不能用就改用遮斷式的。稍微找了一下，找到距離30cm的對射式紅外線感應器： QT30CM。這個感應器也是不能感應透明的瓶子的，不過不太會使用透明的瓶子，真的需要用，瓶子貼個貼紙或用手擋一下感應器就可以了。把觸動模式設成Sensor，Delay設成1.5秒，結果大約是這樣；Delay的值可能還要調整一下：如果時間太短，會變成手還沒離開或瓶子還沒擺好就出糖，如果延遲太長，感覺上會卡卡。這部分可能要實際使用才會知道。第2.5版第2.5版和第2版在電子方面完全一樣，差別只是泵的位置、支架等；在試做階段，木頭是比較容易調整加工的，第二版大約完成了我的目標，但是不是很好收納，所以改成2.5版的樣子，用鐵架和螺絲，平常可以拆缷收藏。第2.5版實戰的結果算是不錯；不過因為半自動裝填酒的測試版剛好完成，並且一起試用，發現之前的考量有部份是多餘的。例如感應器，如果必需專心在注酒的部分，使用感應器自動出糖會很方便，但用了新的半自動工具，注酒時可以有餘裕裝糖，似乎用按鈕的操作比較明確簡單。總之，自動出糖器大概算是完成了，就此告一個段落。更新： 增加「已加糖」的顯示；因為有一瓶我沒注意到加了，心裡覺得沒加到，強制又加了一次，結果爆瓶。另外，在「感測器」模式下，冷卻時間從瓶子移開開始算；原本是出糖結束起算。 增加第二個定量器的支援；可以和第一個定量器聯動，目的是添加香料。（尚未實作硬體） 加入算糖機制；可以輸入啤酒溫度（發酵完成後的最高溫）、糖的濃度（Brix）、目標氣體數，然後選擇輸入”啤酒容積”，就會自動算出出糖數。日後的更新直接只會在github發佈。第三版 第三版主要是實作雙定量泵。為了簡化流程，感應（或按鈕）可以用同一個或獨立；軟體上也增加一個獨立運作定量泵的功能，以方便抽排水。另外，裝糖的瓶子用有吸管口的蓋子，矽膠管線比較不會因為移動而脫離水面。第一次使用是用來另外加維他命C溶液。維化命C長期作為抗氧化的食品添加，使用得很廣泛，在啤酒中偶而有聽說，但沒有太多的資料，有人引用葡萄酒的製程原理，主張維他命C必須和亞硫酸鹽一起用才行，也有人認為麥汁中含有足夠硫，不用再加。為了驗證可行性，一部分的瓶子有加，一部分沒加，等一段時間後就可以對照比較維他命C的效果。上一篇" }, { "title": "自釀怪傢私之定量投糖器(1)", "url": "/posts/e887aae98780e680aae582a2e7a781e4b98be5ae9ae9878fe68a95e7b396e599a81/", "categories": "釀酒筆記", "tags": "", "date": "2021-03-11 03:10:22 +0000", "snippet": "控制器控制器要能輕易的改變出糖量，使用按鈕或微動開關出糖。為了改變出糖量方便，旋鈕控制(Rotary Encoder)和LCD顯示是必要的；採用現成有I2C板的LCD可以省掉很多接線時間。出糖則另外用按鈕或微動開關（甚至是紅外線感應）；對Arduino來說，按鈕和微動開關只是形狀不同，可以以視為同樣的東西，甚至紅外線距離感應器只是是多需要一個5V電源，只要保留接頭，一樣可以採用。繼電器是控制...", "content": "控制器控制器要能輕易的改變出糖量，使用按鈕或微動開關出糖。為了改變出糖量方便，旋鈕控制(Rotary Encoder)和LCD顯示是必要的；採用現成有I2C板的LCD可以省掉很多接線時間。出糖則另外用按鈕或微動開關（甚至是紅外線感應）；對Arduino來說，按鈕和微動開關只是形狀不同，可以以視為同樣的東西，甚至紅外線距離感應器只是是多需要一個5V電源，只要保留接頭，一樣可以採用。繼電器是控制直流馬達所必須，視馬達規格，另外需要馬達的電源，通常是12v或24v，如果是12v，可以同時供電給Arduino，少掉供電Arduino的麻煩。為了方便，我採用Arduino Nano及一個IO板，這個IO版有很多GND/5V，也可以直接插12v供電。材料列表： Arduino Nano加IO板或Arduino Uno KY-040 Rotary Encoder module/旋轉編碼器模組 I2C 16×2 LCD 5v 繼電器 按鈕 蠕動泵及矽膠管 Buzzer/蜂鳴器 杜邦線、接線盒及其他接線： D9 -&gt; KY-040/CLK D10 -&gt; KY-04/ DT D11 -&gt; KY-404/SW D2-&gt; 按鈕 D5 -&gt; 繼電器/IN A4 -&gt; LCD/SDA A5 -&gt; LCD/SCL D12-&gt; 蜂鳴器（下圖漏掉蜂鳴器） 除此之外，旋轉編碼器模組、LCD、繼電器都要接5V供電；旋轉編碼器模組、繼電器、LCD、按鈕、蜂鳴器也都要接GND。12V除了供電Arduino，另外接負極到馬達，電源正極接到繼電器的輸出COM，繼電器的輸出NO則接到馬達。軟體從 GitHub下載，使用PlatformIO編譯上傳。PlatformIO的使用方法可以google或找我前面介紹BrewPiless的文。功能說明：第一層選單；轉動旋轉編碼器來選擇功能 項目 說明 Automatic “自動”出糖模式，右上角顯示出糖次數，左下角顯示總出糖數，右下角顯示目前設定出糖數。按下（觸發）出糖鈕即會運轉出糖；轉動旋轉編碼器可改變出糖數，按下轉動旋轉編碼器則離開目前功能。 Manual “手動”出糖模式，按下（觸發）出糖鈕即會運轉出糖直到再次按下；按下轉動旋轉編碼器則離開目前功能。可用來清洗管路及一開始將糖水吸滿管路。 Settings 設定，見下表。 設定項目 說明 Calibration 校正蠕動泵流速；首先轉動旋轉編碼器決定校正容量，接下來按按鈕開始出糖，目測出糖量接近目標時，再次按下按鈕，接著按下旋轉編碼器進入修正；轉動旋轉編碼器決定真正出糖數目。（一開始的校正容量只是方便修正值的輪入，修正值才是決定真正流速的關鍵。） Dose Calibrate 校正蠕動泵每次出糖的誤差；首先決定每次出糖量，接著決定次數，然後按下轉動旋轉編碼器即會開始出糖，結束後輸入真正出糖量。每次執行校正流速後，修正值會被重設。（出糖誤差並不是必要的，事實上我沒有實證會比較準。） Trigger Setting 觸發出糖機制，有這些設定： Dosing Control觸發機制：Button按鈕或Sensor感應器；如果設定為感應器，按鈕或微動開關放開時，出糖會中斷。 Delay延遲時間：按下按鈕或微動開關到真正出糖的延遲時間；這個設定值主要為了使用感應器；例如瓶子放好，手離開才開始出糖；使用按鈕可設為零。 CoolTime冷卻時間：出糖結束到下次出糖的最小間隔；可避免誤觸。 Sound Setting 設定以下事件是否發聲： Button按下按鍵時 Dose Star開始出糖時 Dose End結束出糖時 Unit 選擇出糖計算/顯示單位；糖水溶液夠均勻的話，計算體積和重量（成正比）會是一樣的；可依習慣顯示。 ### 實作及試驗前言所提到的兩顆蠕動泵我都買來試；大顆的矽膠管改為4.8x6mm，出糖快適合手持接糖；小顆的矽膠管用3x5mm，5ml左右需要2秒上下。我比較偏好小顆的輕薄短小。控制器和蠕動泵採分離的配置，蠕動泵是用電源控制，所以也採用DC插頭方式和控制器連線。觸發按鈕也採用分離方式，透過立體聲耳機插座/插頭，考慮嘗試幾種不同的方式：按鈕、底盤重量、瓶頸或瓶口輕碰觸動。 ###（目前）心得 直流馬達對電路有嚴重的干擾；大泵運轉時，按鈕完全無法使用；小泵好些，離控制器不要太近，就可以正常操作；需要使用電容來降低干擾。 小容量用秤會比看體積準確。 大泵和小泵都有一定的精準度；大顆泵用1g準度的秤來量是準的；小顆的用0.01g精準度秤量誤差在0.1以內。 不同濃度的糖水流速不同；用3x5mm管的小泵，70brix的糖水（太高糖不容易溶化）速度為水的1/4以下，但50brix的糖水則和清水相差無幾。建議採用50brix的糖水。不要用水的校正數據用在糖水。 馬達的震動會晃動矽膠管，如果出糖口沒有插進瓶口，需要固定。前一篇 – 下一篇" }, { "title": "自釀怪傢私之定量投糖器(0)", "url": "/posts/e887aae98780e680aae582a2e7a781e4b98be5ae9ae9878fe68a95e7b396e599a80/", "categories": "釀酒筆記", "tags": "", "date": "2021-03-11 03:08:32 +0000", "snippet": "前言及需求裝瓶時我傾向不使用裝瓶桶，原因是減少接觸氧氣及感染的機會。剛開始自釀時，我是把糖水直接倒到發酵桶，輕微的攪拌一下；以結果來說，和使用裝瓶桶只差少用一個桶子，但增加了攪拌時揚起酵母的問題。使用定量壓瓶器把糖水直接壓到瓶子裡是我最後採用的方法。但是，從此幸福快樂的日子並沒有就此來到，因為定量壓瓶器必須用穩定的速度和力量，才能得到穩定的輸出，另一方面用瓶子去承接糖水、並同時壓定量器的動作...", "content": "前言及需求裝瓶時我傾向不使用裝瓶桶，原因是減少接觸氧氣及感染的機會。剛開始自釀時，我是把糖水直接倒到發酵桶，輕微的攪拌一下；以結果來說，和使用裝瓶桶只差少用一個桶子，但增加了攪拌時揚起酵母的問題。使用定量壓瓶器把糖水直接壓到瓶子裡是我最後採用的方法。但是，從此幸福快樂的日子並沒有就此來到，因為定量壓瓶器必須用穩定的速度和力量，才能得到穩定的輸出，另一方面用瓶子去承接糖水、並同時壓定量器的動作也不是很順手。注意力是珍貴的資源，裝瓶會被認為是苦差事，理由之一就是需要比較多的注意力：拿瓶子，插進裝瓶管，裝滿，上蓋，封蓋；這些個動作重復使用50次，一次都沒出錯的機率很低，多少會有幾次裝太滿、蓋子沒放好等等。在這幾個動作中又加入”加糖”這個動作，更是多耗掉了不少注意力。我心目理想中的加糖器：使用方面：像手搖店一樣，按個鈕就加入事先設定好的量，而設定出糖量可以方便地調整，因應同一批次不同容量的瓶子。硬體構造上，接觸糖水的東西愈小愈好，只用一條管子，直接把管子放到煮糖水的容器吸取是最理想的。使用（聽起來很high tech，其實現在無所不在的）微電腦控制，出糖量可以控制在一個範圍之內-至少會比手壓的來得固定，但實際操作是否順手，還是必必須有所考量。根據不同的出糖方式，觸發出糖和泵的流速要求會有所不同： 瓶口靠近出糖嘴；手拿瓶子去接糖。很直覺的做法，但這個做法出糖時間不能太久，一秒以內完成是最好，超過1秒就會覺得不太順手；如果觸發出糖的方式是按鈕，會需要兩手操作（一手拿瓶子，一手按鈕）。要單手操作，要在瓶子碰得到的地方裝置微動開關-在這個情況下，出糖時間更不能太長。 定點接糖；將瓶子放置定點後出糖。因為瓶口狹窄，誤差容忍度低，實作上有兩種方法：一是出糖口伸入瓶內，二是瓶子和出糖口有段小距離；不將出糖口伸入瓶內相較困難，因為瓶口狹窄，必須對準；可能的做法是：用一個圓型凹底的定位”盤/座”，但不同大小的瓶子需要不同的定位盤。定點接糖的優點是觸發出糖的機制很彈性，出糖時間比較長也可以接受。即使是最簡單的按鈕出糖，放好瓶子後再按也可以單手操作。比較酷炫的做法是在底座安裝感應或彈簧加微動開關，放好瓶子自動出糖。另外，像自動給皂機般的紅外線感應感覺很炫，但不實際；因為瓶口很狹窄，不像手的面積大，感應範圍的不確定性會增加使用上的困難。使用蠕動泵的考量「蠕動泵」有著輸出穩定和很少的接觸面的優勢，常在化學滴定時使用，自然也是投糖器最佳的選手選擇。「蠕動泵」可以自吸是另一個很大的優點，如此就可以直接使用煮糖水的小鍋子，只要把矽膠管放進去即可。蠕動泵有兩種馬達可以選擇：步進馬達和直流馬達。步進馬達可以精準控制轉動行程，理論上可以比較精準，但是控制及電路上比較麻煩一點，價格上比較高，體積和重量也都高上許多。連規格的選擇都多上許多。直流馬達用固定的速度運行，用控制時間來控制流量，精準度可能會比較差一點，但放在家釀的範圍可能是可以接受的。使用直流馬達是用控制開關時間來控制輸出量，除了馬達本身的遲滯，控制器本身可能造成的誤差來自於兩點：處理器處理判斷間隔和開關切換時間。處理器處理判斷間隔愈短，準度愈高，但受限於處理器的運算能力，我認為10ms的間隔應該是合理的。而開關比較簡單的方式是用繼電器，拍賣網路上繼電器的遲滯常常沒有寫清楚，google的結果是5~15ms。我自己拿手邊現有的繼電器，簡單地用Arduino測量延遲，大約都在4~5ms之間。我們就以25ms當成控制器的時間誤差。（開和關都慢一點會抵消，但有不確定性。）蠕動泵的流速是一個關鍵的參數，出糖時間如果太久，就會讓裝瓶的動作變得不順暢。所以流速不能太小，但太快可能也會有精準度下降的可能。出糖時間的長短需求依「實際使用方式」而決定；如果是把瓶子放在定點後，按鈕或感應重量後出糖（「感應重量」說得好像很高科技，其實只要在放瓶子的地方底部裝微動開關，再加上延遲出糖即可），那麼3秒左右是可以接受的；但如果是手拿個瓶子去接糖水，那麼不超過1秒上下會比較合理。出糖多少和濃度相關，而濃度也可能影響流速（待驗證）。以下用50°Brix的糖水，3.5個氣體數來計算最小的流速：50°Brix的糖水（糖：水重為1:1）， 比重為1.223， 根據Brewersfriend.com的計算器，啤酒溫度20°C之下，3.5個氣體數需要3.5g糖，則需要的體積為：vol * 1.233 * 50% = 3.5 vol= 3.5/1.233/0.5= 5.68ml5.68ml如果是3秒和1秒流出，流速為：5.68/3 * 60 = 113.6 ml/min5.68/1 *60 = 340.8 ml/min從拍賣網上找到比較大的”小流量”直流馬達蠕動泵最高速在150ml/min左右，輸出5.68ml分別需要 2.37秒，放置瓶子的方式可以用。”大流量”中比較便宜小巧的，有找到400ml/min規格的， 輸出 5.68ml需要 0.852秒，手拿瓶子去接的話，這個是比較好的選擇。選擇蠕動泵要注意的是：最大流速受到管子和馬達轉速的影響，要調低流速，可以更換比較細的管子或降低馬達轉速；相反地，要調高流速，就要突破規格才能辦到。試算一下25ml時間差造成的誤差：150/60*0.025=0.0625ml 換算成糖重 0.625 * 1.233 * 50% = 0.0385g400/60*0.025＝0.1667ml 換算成糖重 0.1667 * 1.233 * 50% = 0.1028g即使是用比較快速的400ml/min，誤差糖量是0.17ml/0.1g左右，是一個不算太大的誤差範圍；相較之下，蠕動泵本身啓動停止的誤差可能才是最主要的誤差來源。續.." }, { "title": "冷霧Chill Haze", "url": "/posts/e586b7e99ca7chill-haze/", "categories": "釀酒筆記", "tags": "", "date": "2021-01-16 06:51:47 +0000", "snippet": "除了少數類型，清澈度是大部分釀酒人追求的目標，而且除了外觀以外，混濁通常也會對啤酒品質有所影響。冷霧的型成原因：啤酒中會有懸浮的蛋白質(Proteins)和多酚(Polyphenols)，單獨的份子不大，所以能夠透光而看不見，但低溫時會聚集在一起，形成比較大而能反射光線的粒子，形成了冷霧(Chill Haze)。溫度比較高時，氫鍵會斷裂，冷霧就會消失。如果冰得夠久，這些粒子最後還是會沈降到最...", "content": "除了少數類型，清澈度是大部分釀酒人追求的目標，而且除了外觀以外，混濁通常也會對啤酒品質有所影響。冷霧的型成原因：啤酒中會有懸浮的蛋白質(Proteins)和多酚(Polyphenols)，單獨的份子不大，所以能夠透光而看不見，但低溫時會聚集在一起，形成比較大而能反射光線的粒子，形成了冷霧(Chill Haze)。溫度比較高時，氫鍵會斷裂，冷霧就會消失。如果冰得夠久，這些粒子最後還是會沈降到最下層，但放得更久，多酚如果氧化，就會形成永久性的混濁。減少蛋白質和多酚的來源是釜底抽薪的方法：蛋白質主要來自麥芽，而多酚則來自麥芽及酒花。 使用蛋白質含量較低的麥芽。如果連續出現冷霧的問題，應該檢視一下麥芽的可溶性蛋白含量是否太高。 以及減少酒花的用量；酒花提供了大量的多酚，改用植物體含量比較低的cryo也是一個方法。。 洗糖時注意pH值及溫度，pH值太高會溶出多酚/單寧。去除啤酒中的蛋白質和多酚： 大火煮滾，讓蛋白質和多酚結塊，形成所謂的熱渣，是去除多餘蛋白質和多酚的方法之一。不過家釀的規模來說，大力煮滾通常不是太大的問題。 煮沸時的pH值在5.2最能讓蛋白質凝聚。 煮沸後快速地冷卻，也會讓蛋白質和多酚形成冷渣；緩慢冷卻的話，冷渣的形成效果就會減弱。使用不冷卻(no-chill)方法，常有啤酒不清澈的問題 使用澄清劑是很普徧的作法，鹿角菜膠(Irish Moss)和Wortfloc都是都可以幫助蛋白質和多酚凝結。其他的澄清劑，包括皂土、吉利丁、isinglass(魚膠), papain, PVPP等等。這些澄清劑有些有副作用，對家釀來說，比較常用的是Irish moss、wortfloc和吉利丁。 包裝（裝瓶）前先冷降，讓形成冷霧的粒子沈降。 水質，增加鈣離子可以促進蛋白質沈澱。 過瀘通常是酒廠而非家釀可以採用的手段，讓冷霧出現後再過濾是最直覺的方法。 Conquer Chill Haze, BYO What is Beer Haze and How Can You Fix It?" }, { "title": "筆記：Malt 麥芽種類", "url": "/posts/e7ad86e8a898efbc9amalt-e9baa5e88abde7a8aee9a19e/", "categories": "釀酒筆記", "tags": "", "date": "2021-01-14 09:23:19 +0000", "snippet": "麥芽的生產流程基本上就是泡水、發芽、烘乾。烘乾是為了長期保存以及容易磨碎，而由於烘乾的過程中溫溼度的不同，產生了不同顏色及風味的麥芽。就像烘咖啡豆一樣，不一樣的脫水時間、加熱時程、抽風速度，麥芽的風味就有些差異。在麥芽的生產流程中，有幾種加溫的動作：kiln和roast，組合這幾種動作可以創造出千變萬化的麥芽風味：Kiln(窯烘）：主要目的在烘乾麥芽，通常是在很大的空間處理很大量的麥芽，麥芽...", "content": "麥芽的生產流程基本上就是泡水、發芽、烘乾。烘乾是為了長期保存以及容易磨碎，而由於烘乾的過程中溫溼度的不同，產生了不同顏色及風味的麥芽。就像烘咖啡豆一樣，不一樣的脫水時間、加熱時程、抽風速度，麥芽的風味就有些差異。在麥芽的生產流程中，有幾種加溫的動作：kiln和roast，組合這幾種動作可以創造出千變萬化的麥芽風味：Kiln(窯烘）：主要目的在烘乾麥芽，通常是在很大的空間處理很大量的麥芽，麥芽平鋪，從底下加熱，讓空氣流通以排出水氣。麥芽不會翻動或偶爾才翻動。烘的時間很長，加熱緩慢，結果不平均。Roast(翻烤）：相對比較小的機器，滾筒式(drum)烘烤，就像烘咖啡豆的機器，一邊烤一邊翻動麥芽。加熱快，烘的時間短，效果很平均。（另外還有toast，這個作法我沒有找到很詳細的作法，我的理解是：短暫快速地加熱，像（烤土司）只烤表面的烤法。Biscuit malt, Amber Malt, Brown Malt在有些網站也說是toasted。)不同的麥芽廠有製程及不同的原料，同類型的產品也會有不同的風味。例如美國麥芽廠Briess的產品，大部分人都會覺得味道很乾淨，適合APA/IPA，而德國麥芽廠Wayermann則一般都認為麥芽香味很濃。(自釀前輩們說的釀那個地方的酒就用那個地方產的原料，真的是有道理的。）下圖是從Designing Great Beers書中附的圖，簡單地把製作流程分類出來：(圖中Roast Barley也是用Kilning，理論上應該是roasting） 在Malt一書中，則把麥芽分為五大類：第一大類：基本窯烘(kilned)：只採用基本的窯烘(kilned)，大都還保留糖化力，主要都是基礎麥；原則上，烘得愈久或溫度愈高，顏色愈深、風味愈重、糖化力愈低。 分類 顏色SRM 製作方式 說明 Pilsner Malt 1.2~2 低溫，高風速 傳統上是比較低蛋白、低修飾度的，但現代的麥芽則不一定。歐陸產的可能會低修飾度的，低修飾度的麥芽也通常必須注意DMS。 新鮮的麥芽風味。 Pale(Lager) malt 1.6~2.8   在北美通常是指有很高的糖化力可以用來加輔料用的麥芽。 北美以外的區域則只是中等程度的修飾度和糖化力。 Pale Ale Malt 2.7~3.8   通常適用單一糖化溫度、高修飾度。DMS前期物會比較少。 有點麥芽風味，帶點餅乾(biscuit）或烤土司(toast)味。 Vienna Malt 2.5~4.0   啤酒會帶有橙色；尾𩐳乾爽(dry)。有點烤土司(toast)味，有點堅果味(nutty)。 Munich Malt 3~20   麥芽風味（Malty ）的代表；糖化力大概剛好可以糖化自己。 Melanoidin(Honey, Brumalt) Malt 17-25 在最後的發芽階段減少空氣流動，低溫窯烘而增加梅納反應。 甜、類似蜂蜜的風味。 （注：Honey Malt是加拿大麥芽廠Gambrinus的專利產品，詳細製程並未向外界批露。) 第二大類：焦糖/水晶麥：發芽完乾燥前，升溫到糖化溫度，讓麥芽在殻中完成糖化再烘乾。 分類 顏色SRM 製作方式 說明 Special Glassy Malts 1-12 用低溫高濕度的方式來產出有”晶體狀(Glassy)”胚乳的淺色麥芽。 沒有糖化力；通常是為了泡沫持久性或酒體。 Cara-pils, dextrin malts Caramel/Crystal Malts 10-200 發芽完升溫至糖化溫度。用kiln烤的是Caramel；用滾筒式翻烤(Roast) 的是Crystal。 視烤的程度（顏色）風味不同。Caramel會比較不平均，帶有麥芽、餅乾風味。Crystal則是比較純粹的焦糖風味。 Special hybrid Malt 50-150 先焦糖化，然後再用滾筒翻烤(roasted) 深色乾果(葡萄乾、plum)風味。Special B是代表性產品。 第三大類：Roasted malt：用滾筒式翻烤而成的麥芽。 分類 顏色SRM 製作方式 說明 Biscuit Malt 20-30 短暫地翻烤(roasted) 麵包皮(bread curst)、烤土司(toasted)、堅果(nutty)風味。尾韻乾爽。Biscuit malt和Amber malt很相似，但Biscuit比較乾爽。 Amber Malt 20-36 輕微(Drum roast)翻烤 太妃(toffee)、烤麵包、堅果風味。烤乾的過程中會產生帶有苦味的物質。特別適用於英式桶中熟成（cast conditioned)的bitter。 Brown Malt 40-150 類似Amber但時間較久，產生較深的風味及顏色。 和Amber malt類似的風味；有時用來增加深色啤酒的風味層味和複雜度。 也常見於英式bitter。 Blown/snap malt是早期的類型，會故意加入木頭火烤，增加煙燻味，是為了重現19世紀中期的Porter。 Chocolate 350-500 (Drum roasted)翻烤 咖啡、巧克力風味。 Black Malt 435-55- (Drum roasted)翻烤至很深的顏色。 苦、乾爽、燒焦味。也稱為Black Pattern Roasted Barley 300-650 用沒有發芽過的大麥(Drum roasted)翻烤而成。 顏色和風味接近Black Malt，但泡沫顏色通常比較淺。是經典Dry Irish Stout的重要成份之一。 第四大類：特殊處理麥芽 分類 顏色SRM 製作方式 說明 Acidulated Malt(Sauermalz) 2.2-4 在還沒烘乾前的發芽階段故意感染乳酸菌製成的麥芽。 用來降低糖化時的pH值，是為了符合德國純釀法(Reinheitsgebot)的條件下創造出來的麥芽。 Smoked Malt 2.5-5 直火煙燻而成。 特殊風味。 Peated Malt 1.7-2.5 用泥煤煙燻而成 特殊風味。 第五大類：其他榖物 分類 顏色SRM 製作方式 說明 Wheat Malt 1.5-3.5 小麥芽，用小麥取代大麥製成。 理論上小麥取代大麥可以製成所有大麥芽製成的麥芽種類。小麥蛋白質高，可以增加酒體及泡沫。小麥的問題在於沒有殼，容易阻塞。 小麥根據品種有分為軟硬（蛋白質成份高低）、紅白（顏色）、以及冬或夏麥。不過通常大部分人不太在意。紅小麥單寧含量比較高、比較硬比較難磨。 Rye Malt 2.8-3.7 裸麥芽 和小麥芽類似，但有些特殊風味和美國的酒花很相配，常在IPA配方中見到。 Oat Malt 1.6-6.5 燕麥芽 燕麥比較常以未發芽的型式出現在啤酒酒譜中，但有時候也會看到有發芽的燕麥芽，它會讓啤酒帶有圓滿、軟性、如絲綢般滑順的口感。 Distillers Malt 1.2-2 用比較低等級的麥製成的。 以製蒸餾酒為目標，所以不在乎風味而追求最大糖化力（酒精）的產生。不建議用在啤酒釀造中。 Chit Malt 1.2-3 用非常短的發芽時間製成。 修飾度通常很低，和沒有發芽的輔料有類似的特性，但符合德國純釀法(Reinheitsgebot)，主要用於增加泡沫持久性。 （注：德國純釀法不充許使用未發芽的榖物，也只有特許釀造的小麥啤酒可以使用小麥芽，其他都必需使用大麥芽。） 其他別名或產品 名稱 說明 Aromatic Malt 可以歸為Munich Malt或Dark Munich的一種，通常烘到色度20左右。一般Munich Malt最後烘窯的溫度(curing)大約在105°C，Aromatic Malt可能會拉到110°C。(Pilsner malt通常不會超過90°C。） Victory Malt Biscuit Malt的一種。 Midnight Wheat Malt 烤小麥芽，小麥沒有殼，比較不會有尖銳的燒烤味。 de-husk/de-bittered Black Malt 去殼的烤大麥芽；例如 Carafa special II. Mild Malt 可以視為英式的Pale Ale Malt，通常比Pale Ale Malt顏色更深一點。 Carafa Type I/II/III Weyermann麥芽廠的產品。烤大麥系列；carafa special是去殼的的版本。 Carahell Weyermann麥芽廠的產品。歸類上算是很淺色的水晶麥。 CaraVienna, CaraMunich Weyermann麥芽廠的註冊名稱，從Weyermann的網站說明，是用滾筒式翻烤(Drum roasted)，所以算是Crystal malt(水晶麥)。 其他相關名詞注釋： 名詞 說明 Modification（修飾/修飾度） 大麥胚乳儲存了大麥種子生長所需要的能量，含有許多大顆的澱粉粒，並且由堅硬的蛋白質和複雜的碳水化合物網格所包覆。當發芽時，酵素開始分解蛋白質形成的網狀格子，把澱粉釋放出來，這個過程稱為”Modification”；修飾度愈高，蛋白質分子也就被分解得比較小；過度修飾可能會有泡沫持久性的問題，修飾不足則可能有不清澈 、收率比較低的問題。 Kiln &amp; Curing 麥芽發芽後的含水率高達40%~50%，為了長期保存，需要烘乾到4~6%以下。如果在濕度還很高的情況下溫度升得太高，會破壞糖化酶，因此，烘乾都是會有兩到三個階段，常見的行程是：第一段 50-60°C，第二段65-75°C，最後80-105°C；最後一個階段稱為Curing。 新手村的名詞解釋 名詞 說明 基礎麥芽 配方中比例最高，主要提供澱粉及糖化酶的麥芽。在第一大類《基本窯烘》類別中除了最後高溫窯烘的一類，都可以當作基礎麥芽。Munich和Vienna雖然在大部分的配方中都像特殊麥芽，在Bock和Vienna Lager及其他較深色的啤酒中常被當成基礎麥芽使用。（有些人堅持Bock一定要用Munich Malt。) 特殊麥芽 除了基礎麥芽外的提供風味或顏色的麥芽。 2 row 二稜麥；相對是六稜麥，六稜麥蛋白質比例比較高，糖化力比較強。沒有特別說明的話，家釀買到的都是二稜麥的產品。如果配方中只寫2 row，通常指的是可以用二稜麥的Pilsner malt或Pale Ale Malt；這兩種雖然顏色和風味有些差異，在某些類型或配方（例如深色或加入大量特殊麥芽）中可能分不出來。 M.O.(Maris Otter) Maris Otter其實是大麥的品種名稱，由英國Plant Breeding Institute培育出來的。如果在配方中見到，通常是指Maris Otter製成的基礎麥。香甜的風味很受精釀和家釀歡迎，在英式及NEIPA中很常見。 貝肯布的詳細說明。 Kilned Versus Roasted： Do You Really Know Your Specialty Malt? Is it Crystal or Caramel Malt? Caramel Malt vs Crystal Malt, by 貝肯布 Aromatic Malt Brew Beer The Hard Way, blog 有很多深入自己製作麥芽的研究 Kilning" }, { "title": "BrewPiLess簡易中文教學(一)簡介及硬體原件", "url": "/posts/brewpilesse7b0a1e69893e4b8ade69687e69599e5adb8e4b880e7b0a1e4bb8be58f8ae7a1ace9ab94e58e9fe4bbb6/", "categories": "BrewPi@ESP8266, 釀酒筆記", "tags": "brewpiless", "date": "2021-01-05 14:11:27 +0000", "snippet": "簡介BrewPiLess(BPL)是BrewPi的移植及簡化，保留大部分BrewPi的功能，但大幅地簡化了安裝和操作介面，最主要的是硬體從原本Raspberry Pi加Arduino(或spark)簡化成只需要一個ESP8266/ESP32。所以免除了RPI的一連串包括Web Server, Python等等設定。以功能性和穩定性來說，Raspberry Pi應該比ESP8266/ESP32...", "content": "簡介BrewPiLess(BPL)是BrewPi的移植及簡化，保留大部分BrewPi的功能，但大幅地簡化了安裝和操作介面，最主要的是硬體從原本Raspberry Pi加Arduino(或spark)簡化成只需要一個ESP8266/ESP32。所以免除了RPI的一連串包括Web Server, Python等等設定。以功能性和穩定性來說，Raspberry Pi應該比ESP8266/ESP32還來得好；不過，功能性來說，如果只是用來控制發酵，Raspberry Pi有點牛刀殺雞。穩定性來說呢，如果Raspberry Pi如果有98分，正常使用下ESP8266/ESP32應該可以有90~95分，也算堪用。而用ESP8266/ESP32的BPL其優點並非只是便宜，而是在於簡單。硬體組成比較簡單，軟體設定也比較簡單。BrewPiLess的功能有 精準控溫 核心是移植BrewPi，不是單純地控制冰箱溫度，而是調整冰箱溫度來控制啤酒溫度。 WiFi連線 支援無線網路，可透過網路設定。 自動溫度變化 可以定時任意變化溫度，實現溫度階度變化。也可以依比重自動變化溫度。 溫度記錄 記錄溫度變化，可以回顧檢討。記錄可以輸出cvs格式。 物聯網雲端 只要簡單的設定，就可以將溫度放到雲端。支援brewersfriend.com, brewfahter.ap, thingspeaking, ubidots.com, 以及自訂的格式。 比重記錄，包括 手動輸入 無線數位iSpindel整合 (ESP32限定）支援Tilt(tm) iSpindel整合功能 記錄iSpindel回報資訊 支援使用iSpindel的溫度當成啤酒測溫 邊釀邊校正iSpindel 壓力發酵監控 可以控制電磁閥，手動或自動開始蓄壓。 監控壓力 控制壓力 溼度監控 發酵室溼度監控 因為液體和發酵桶的隔離，iSpindel的訊號通常不強，如果WiFi基地台距離比較遠，會有連線不良的問題；BrewPiLess可以同時啓用一個無線網路(SoftAP)讓iSpindel連線，把它放在發酵桶附近，可以當成iSpindel的中繼站。BrewPiLess也可以同時記錄、並將記錄值往ubidots.com或thingspeak.com上傳的功能。同樣的，Tilt(tm)使用的BLE技術傳送距離無法太遠，通常需要一個Raspberry Pi或手機平板在附近才能持續監控，BPL可以取代這個Raspberry Pi或手機的功能。硬體組成原件視所需要的功能，會有不同的原件，目前建議使用ESP32，比較新速度比較快，也支援Tilt，能夠使用的pin腳比較多，功能也就比較多。以下以功能來分開列出需要的原件：基礎構成：只有ESP32及以電源，可以用來當iSpindel或Tilt(tm)的中繼，除了記錄資訊，也可以再把資訊轉發出去到雲端。 ESP32開發板 大部分的開發板都可以，但ESP32/ESP8266開發板良窳不齊，可能要碰點運氣。儘量找CP2102的板子。 電源 建議至少1.5A以上的電源。雖然5V的電源供應器是比較正規的做法，用USB供電也不是不行。發酵溫度控制：要”控制”，基本上就需要繼電器或SSR。BrewPi的演算法本身最佳的設定是使用兩條測溫線，分別測量冰箱和啤酒的溫度。如果是使用乙二醇/冰水機的方式，則只需要一條。另外，BrewPiLess可以用Tilt(tm)或iSpindel的溫度來當成啤酒溫度；不過Tilt的溫度精細度是1度華氏，而如果使用iSpindel來控溫，則回報時間應該使用1~3分鐘以內。 DS18B20測溫線 x2 4.7k 電阻 x1 繼電器或SSR 控制冰箱的可以考慮用SSR，其他的通常使用一般的Relay即可。要控制幾個設備就需要幾個繼電器或SSR。以下都以繼電器代表。*注意：大部分的SSR都是zero crossing，只有在電位為零的時才會開關，所以只能控制交流電的電器開關。 Relay用模組比較方便，最好找到RPI可以用的，至少要是支援5V的；像下圖這種藍色的通常電流可以到10A ，對大部分的東西都適用。Relay模組比較常找到兩路的，如果想要多控制幾個東西，甚至可以買四路的。 SSR用在有馬達類的電器控制比較好，可以減少EMI干擾；買SSR要注意規格，輸入端要是DC 3v~的，有些SSR是交流控制交流，有些直流控制是從5v甚至12v起，ESP32是3.3v，如果是直流3v~，可以直接接，不需要額外的電路。 使用介面：雖然可以透過網路使用，但有時候不開電腦就近控制也是很方便。可單獨只用LCD，但Rotary Encoder一定要配合LCD（不然不知道在調什麼東西）。 HD44780 20×4 I2C LCD 或 128×64 SSD1306 OLED LCD HD44780容易受EMI影響但是比較耐用，顯示也較大。相對地，OLED比較小，而且似乎不太耐用。（我己經壞了4，5個了） Rotary Encoder 用便宜的KY-040模組即可，電阻都上了，也比較方便。壓力發酵監控：壓力發酵監控總共有三種組合：只控制電磁閥來決定開始蓄壓的時間點、只是用傳感器讀取壓力值，還有同時用電磁閥和傳感器來控制壓力。控制壓力實做上不容易，洩壓的部分要使用很小的隙縫(可以考慮用針閥），否則一打開氣馬上大量洩走，控制器會反應不過來，壓力會一下子下降太多。而且，繼電器和電磁閥如果很頻繁地開關，使用壽命會大幅減少甚至故障。 電磁閥（及繼電器） 如果沒有要控制壓力，便宜耐壓的電磁閥就可以了。電磁閥需要使用一個繼電器或SSR控制，用110v的電磁閥會比較簡單。 壓力傳感器 是這種類型的，輸出為電壓，最高壓力視發酵桶耐壓及預計的最高壓力而定，一般而言，最高至少到45~60psi。 （optional）ADS1115模組 原生的ESP8266/ESP32的ADC並不是很準確，如果想要比較精準的壓力讀數，最好另外採用ADS1115溼度監控：支援DHT21/DHT22系列和BME280。DHT21/22系列和BME280都有溫度感測，也可以拿來當成發酵室和室溫使用。 DHT21/DHT22(AM2301/AM2302) 最多支援兩個，一個發酵室，一個室內（發酵室外）。一個DHT21/DHT22會佔用一個單獨的PIN。 （或）BME280 BME280準度較高，硬體接法不同，BME280用I2C，不會佔用PIN。最好找3.3v版本的板子。 除溼機(及繼電器） 加溼器（及繼電器）其他：BrewPi原生的、並不是太實用功能。 風扇（及繼電器） 有使用的話，冷卻和加熱啓動時都會同時開啓風扇；不過如果只有冷卻，把風扇和冰箱腈分二的插頭接在一起效果一樣。 燈（及繼電器） 微動開關：冰箱門開關感測 冰箱門開的時候會打開燈。下一篇：軔體編譯和燒錄" }, { "title": "BrewPiLess簡易中文教學(二)軔體編繹及燒錄", "url": "/posts/brewpilesse7b0a1e69893e4b8ade69687e69599e5adb8e4ba8ce8bb94e9ab94e7b7a8e7b9b9e58f8ae78792e98c84/", "categories": "BrewPi@ESP8266, 釀酒筆記", "tags": "brewpiless", "date": "2021-01-05 14:10:16 +0000", "snippet": "軔體燒錄有兩種方法：一是用燒錄軟體燒錄現成的bin檔，二是用開發工具自行編繹後燒錄。前者比較簡單，但現成的bin檔就沒辦法自定選項；例如目前預先編繹好的ESP32只有英文版。建議先燒錄軔體再組裝。BrewFlasherBrewFlasher是Thorrak所開發的一套針對ESP8266/ESP32釀酒相關的燒錄工具，使用上非常簡單，只下載BrewFlasher，選擇要燒的版本然後燒錄即可。強...", "content": "軔體燒錄有兩種方法：一是用燒錄軟體燒錄現成的bin檔，二是用開發工具自行編繹後燒錄。前者比較簡單，但現成的bin檔就沒辦法自定選項；例如目前預先編繹好的ESP32只有英文版。建議先燒錄軔體再組裝。BrewFlasherBrewFlasher是Thorrak所開發的一套針對ESP8266/ESP32釀酒相關的燒錄工具，使用上非常簡單，只下載BrewFlasher，選擇要燒的版本然後燒錄即可。強烈推薦。燒錄ESP32時要記得按下Boot鍵。燒錄軟體 安裝USB Serial驅動程式；如果接上USB後，電腦沒有找不到驅動程式，就必須自行安裝。常見的USB Serial有兩種晶片，一種是CP2102另一種是CH340；據說CP2102比較穩定，如果有選擇，優先選擇CP2102的版本。 CH340 CP2102 下載軟體：從ESPRESSIF下載。 下載預bin檔：在這裏選擇最近版本，有esp32.bin結尾的檔案下載。 燒錄軔體網路上有不少詳細的ESP32燒錄教學，可以google一下。使用開發工具BPL是用platformio開發的，platformio可以用 MS visual studio code當IDE（可以用Atom和Eclipse，為了簡化說明以下直接假設單一組態）。 安裝USB Serial驅動程式。如上。 下載VSCode 及 Platformio 照著這個連結，有分步驟的說明，包括下載VScode的連結。 下載及安裝VSCode 打開VSCode，進入VSCode Extension Manager (圖），search “PlatformIO IDE”，找到後安裝。 從Github下載BrewPiLess原始碼: Github 按”Code”旁的Download Zip。將zip檔解開後放到想要的地方。 開啓專案：File/Open… 選擇剛才解開的那個目錄打開 修改設定： 在目錄最上層找到platformio.ini，打開這個檔，找到最前面有default_envs的部分；有時候會是編譯全部，把它改成編繹 esp32-dev 接下來找到 esp32-dev的部分，更改設定： 選項:LCD類型、網頁語言 Serial port；如果不確定Serial port是那個，可以先把upload_port那行mark起來，platformio會嘗試自動找一下，不過有時候會失敗。 網譯及上傳：按左下邊”-&gt;” 按鈕然後開始祈禱。如果成功了，可以按一下像插頭的符號，看看debug輸出。&lt;pre class=\"wp-block-code\"&gt;```#default_envs = newui, newui-tw, newui-spanish, newui-portuguese-br, newui-slovak, newui-oled, newui-it, newui-norwegian, thorrax, sonoff, sonoff-esp8285 , esp32, d1pro, sonoff-am2301default_envs = esp32-dev```[env:esp32-dev]platform = ${common_env_data.esp32_framework}board = esp32devframework = arduinoboard_build.mcu = esp32lib_extra_dirs = ${common_env_data.esp32_lib} board_build.partitions = ./partition.csvbuild_flags = -DWebPageLanguage=chinese #使用中文網頁 -DOLED_LCD=true # 用 OLED，如果是用I2C HD44780，不要加這行 -DSerialDebug=true # 測試用，正式時可以消掉這行monitor_speed = 115200upload_speed = 115200lib_deps = ${common_env_data.lib_deps_external} #upload_port = /dev/cu.SLAB_USBtoUART # 改成你的 serial port#monitor_port = /dev/cu.SLAB_USBtoUARTmonitor_filters = esp32_exception_decoderdebug_tool = esp-progdebug_port = /dev/cu.usbserial-00001014A``````如果一切順利，BPL會建立一個brewpiless的網路，用你的電腦連上這個網路，密碼也是brewpiless。然後開啓browser，手動輸入 http://192.168.4.1， 如果網頁出現，就可以開始設定或使用了。*待續…*" }, { "title": "防止Cold Crash吸入空氣的方法", "url": "/posts/e998b2e6ada2cold-crashe590b8e585a5e7a9bae6b0a3e79a84e696b9e6b395/", "categories": "釀酒筆記", "tags": "", "date": "2020-12-18 06:27:14 +0000", "snippet": "Cold Crash (冷降）是加速酵母沈降的常用技巧之一，但由於熱漲冷縮的關係，吸入消毒液或鹽水的意外時有所聞，雖然用S型水封可以避免這種意外，但替代水的，卻是空氣被吸入，造成了氧化的問題。要防止吸入鹽水或空氣，有幾種作法 帶壓發酵或自然充氣 一開始或殘存少量糖時就把可耐壓的發酵桶用洩壓閥封起來，這是最理想的做法，但是一來需要可耐壓的發酵桶，二來如果是要裝瓶會比較不方便。條件可行的話，...", "content": "Cold Crash (冷降）是加速酵母沈降的常用技巧之一，但由於熱漲冷縮的關係，吸入消毒液或鹽水的意外時有所聞，雖然用S型水封可以避免這種意外，但替代水的，卻是空氣被吸入，造成了氧化的問題。要防止吸入鹽水或空氣，有幾種作法 帶壓發酵或自然充氣 一開始或殘存少量糖時就把可耐壓的發酵桶用洩壓閥封起來，這是最理想的做法，但是一來需要可耐壓的發酵桶，二來如果是要裝瓶會比較不方便。條件可行的話，這是最好的方法。 充Co2 類似上面的方法，只是額外添加co2， 實務上充氣的時間和份量不是很好掌握。一般的做法是充到用很低的壓力（5psi以下），但如果發酵桶完全不耐壓，操作上也有困難，因為調壓閥在很低的指數是很不準確的。 Co2 Harvest kit 用兩個罐子組成，剛開始時在第一個罐子充滿塩水或Starsan溶液，發酵時產生的co2會把水往第二個罐子擠，多餘的co2則從水封散逸。冷降時，發酵桶從第一個罐子吸取co2， 水則反過來從第二個罐子流回第一個罐子。如果發酵桶吸回的氣體體積比第一個罐子大，也會吸到外面的空氣。因為氣體會回流的關係，建議使用S型水封，三件式水封吸氣比較不順。 Co2 Harvest Ballon 用一個”袋子”來存co2，和Co2 Harvest Kit概念一樣，只是”存”co2的容器是用一個彈性的容器，所以一開始這個氣球或塑膠袋是乾癟的，發酵時產生的co2會把這個袋子充飽，逆吸時則從這個袋子的容氣先回收，如果超出袋子的容量，會造成負壓。逆止閥並不是必要的，不過有的話，整個運作機制比較明確。 。 那麼，冷降的過程中會吸入多少空氣呢？冷降時減少的體積有兩個部份：一是發酵桶頭部空間的空氣冷縮，二是因為溫度降低，co2溶入啤酒中所減少的體積。發酵桶頭部（上方）因為熱漲冷縮減少的體積可以用PV=nRT的公式計算出來；例如從20°C(293.15°K)降到0°C(273.15°K)，空氣體積減少了（頭部空間體積）x (293.15 – 273.15)/293.15 = （頭部空間體積）* 0.0682例如26公升的發酵桶發酵20公升啤酒，頭部空間是 6公升，所以從20°C降到0°C會減少的體積是6 x 0.0682 =0.4092 公升被啤酒吸入的co2體積：在20°C飽合co2是0.86氣體數，在0°C則是1.71氣體數，所以能夠被吸入的co2是(啤酒體積) x (1.71-0.86) = (啤酒體積) x 0.8520公升的啤酒從20°C降到0°C將可能吸收20 x 0.85= 17 公升17公升是一個很大的值，不過co2溶入啤酒並不是很快的事（所以強制碳酸化需要一些時間）, 所如果冷降完沒有放太久，不太需要考慮這個數值。參考資料： Homebrewtalk.com 的討論 Master the Action: Carbonation, by BYO" }, { "title": "糖與Candi Sugar", "url": "/posts/e7b396e88887candi-sugar/", "categories": "釀酒筆記", "tags": "candi-sugar", "date": "2020-02-29 13:46:55 +0000", "snippet": "Candi Sugar是比利時啤酒中不可忽視的存在，但卻也是最多誤解的原料。在試著了解Candi Sugar之前，先了解一下釀酒中會”遇到”的糖。請注意，糖相關的科學和研究據說自行一個學科，這裡只能簡單地帶過跟釀酒有關的事項。廣意的糖指的是碳水化合物，它的份子式是 CnH2nOn,也可以看成碳(C)和水(H2O)的化合物，故稱為碳水化合物。單糖中的葡萄糖(glucose)和果糖(fructo...", "content": "Candi Sugar是比利時啤酒中不可忽視的存在，但卻也是最多誤解的原料。在試著了解Candi Sugar之前，先了解一下釀酒中會”遇到”的糖。請注意，糖相關的科學和研究據說自行一個學科，這裡只能簡單地帶過跟釀酒有關的事項。廣意的糖指的是碳水化合物，它的份子式是 CnH2nOn,也可以看成碳(C)和水(H2O)的化合物，故稱為碳水化合物。單糖中的葡萄糖(glucose)和果糖(fructose)的分子式都是C6H12O6， 可視為”糖”的組成單位。 葡萄糖(glucose) 單糖，還原糖，最常見的單糖，分子式是C6H12O6 焦糖化溫度300F/149C 酵母最優先吃的糖，可以不費力地通過細胞壁為酵母所用 果糖(fructose) 單糖，還原糖，是葡萄糖的同分異構物（組成的原子一樣，但結構不一樣） 焦糖化溫度220F/104C 可以通過細胞壁為酵母所用 蔗糖(sucrose) 雙糖，非還原糖，由一個葡萄糖和一個果糖分組成，超市中最常見的糖，通常是從甘蔗或甜菜取得。 焦糖化溫度340F/171C 酵母處理蔗糖的方式是在細胞外用蔗糖酶(invertase)把蔗糖分解成葡萄糖和果糖。 麥芽糖(maltose) 兩個葡萄糖分子組成的雙糖，還原糖。 酵母必須把麥芽糖吞進細胞內，再用麥芽糖酶(maltase)分解成葡萄糖。 麥芽三糖(maltotriose) 三個葡萄糖分子組成的三糖，還原糖。 和麥芽糖一樣，酵母必須把麥芽三糖吞進細胞內，再用麥芽糖酶(maltase)分解成葡萄糖。或許因為麥芽三糖比較大，通常麥芽三糖是最後才吃的糖。甚至有些酵母不會吃麥芽三糖。 糊精(dextrin) 超過三個葡萄糖分子組成的糖。 一般Ale和Lager酵母(saccharomyces cerevisiae和saccharomyces pastorianus) 不能處理超過三個葡萄糖分子的長鏈糖。 帶有STA基因的saccharomyces cerevisiae var. diastaticus可以產生分解糊精的酶，進而發酵。(常見的saison酵母，包括Wyesat 3711, Belle Saison, WLP565都是saccharomyces cerevisiae var. diastaticus酵母） brettanomyces（俗稱野生酵母，常見於酸啤中的酵母）也可以處理糊精。 附帶一提，全麥芽糖化產生的麥汁中，通常這些糖佔的比例大約是 麥芽糖 50% 麥芽三糖 18% 葡萄糖 10% 蔗糖 8% 果糖 2% 糊精 12%那麼Candi sugar到底是什麼？Candi Sugar是用甜菜產出的糖加工的，基本上就是一種蔗糖。以前製糖的技術比較差，所以比利時的釀酒師們會再進行一次純化的動作，讓糖重新結晶。換句話說，白色的candi sugar就是比較純的蔗糖。至於深色的Candi Sugar，是用不太純的甜菜糖加熱做出來的，不純的甜菜含有蛋白質，在加熱過程中產生了焦糖化(caramelization)和梅納反應(Maillard reaction)所以增加了顏色以及風味。網路上有些教學最常見的錯誤是只是把糖加熱並加入酸，其實是利用熱和酸把蔗糖分解成葡萄糖和果糖的轉化糖漿(inverted sugar)。比起蔗糖，轉化糖漿有比較低的焦糖化溫度及還原糖的特性，還原糖比容易產生化學變化，也比較容易產生梅納反應，但如果沒有加入胺基酸/蛋白質，就不會有梅納反應。焦糖化(caramelization)是糖受熱後失去水(H2O)，並開始和其他分子結合的一種變化。常見的風味是雪莉、醋酸、奶油、果味、堅果、溶劑、烤土司。梅納反應(Maillard reaction)是糖和胺基酸或蛋白質產生的一種反應。常見的風味是肉味、花香、洋蔥、蔬菜、巧克力、咖啡、馬鈴薯，及以不同的的焦糖風味。這兩種反應都是很複雜的反應，尤其梅納反應甚至還沒有被完全了解，這邊就不（也沒辦法）深入了，所以暫且只要知道必須有這兩種反應才能做出真正的深色candi sugar就行了。焦糖化和梅納反應的差別，可以看這篇文章。網路上做出正確Candi Sugar的文章和影片也有不少，我覺得步驟比較明確的就是 sui Generis Brewing的部落文，而且還附影片。另外一個重點是，很多人教的都是使用DAP(Diammonium phosphate) ，但是DAP在加熱過程中會產生阿摩尼亞，所以格主Bryan是用DME，因為麥芽中就有蛋白質，加上DME的蛋白質成份會比單一的DAP複雜，能產生比較複雜的風味。（DAP還有提高pH值的作用）特別注意一般加酸的做法是做轉化糖漿，或者是焦糖化的轉化糖漿，在這個流程中，不僅不加酸，甚至還加鹼，因為在pH值較高的理境下，比較容易發生梅納反應。雖然加酸會加速蔗糖變成轉化糖漿的速度，但加熱就有讓蔗糖變成轉化糖漿的效果。整個流程大約是分成三個階段： 125-135C 把糖轉化成葡萄糖和果糖的轉化糖漿 135-145C 梅納反應及焦糖化（加鹼） 150C 焦糖化及煮乾水份材料 蔗糖，因為會有耗損，糖應該比想要的份量多個10%左右。 DME(麥芽精），每公斤糖加1茶匙(tsp、5ml) 的 DME。 水，1公斤糖加250ml水。儘量用礦物質含量低的RO、蒸餾水或軟水。 （選項）果糖，糖的1%。可以減少反砂（變成固體結晶）現象。 食品級的氫氧化鈣（pickling lime、熟石灰、消石灰），先用儘量最少的水溶解，並去掉不能溶解的固體。注意，這是有腐蝕性的鹼，要很小心。1公斤糖約需要～20ml的1M氫氧化鈣溶液（註：sui generis 內文寫20ml固體，但在回文中說打錯，應該是1M溶液的20ml；但回文是用氫氧化鈉，1M溶液是40g/L,氫氧化鈉的分子量接近40，而氫氧化鈣的分子量接近 74g，他也有另一則回文說氫氧化鈣比氫氧化鈉要多1/3；但在最早的回文是說10ml的1M氫氧化鈉溶液，他最後的說法是用眼睛判斷結果；所以可以視為1M溶液最多到20ml)。器材 鍋子 攪拌的湯匙 溫度計，最少要能到180/200度C 護目鏡及手套等保護裝備步驟： 將糖和DME加入250ml的水混合，緩慢加熱至完全溶解；要小心避免完全溶解前就沸騰。 完全溶解後，加熱到125-135度C，維持30分鐘。這個步驟是把糖變成轉化糖漿。如果過程中溫度太高，可以加入一大匙水降溫，但切記不要降太低。 接著升溫到145C，加入己經溶解的熟石灰水。慢慢加，不要一下子加太多，避免溫度降到135度C以下。 維持135-145C，直到達到目標的顏色及風味。 升溫到150C；如果想要加強烘烤的風味，可以維持150-165C一小段時間。 倒到烘焙紙(parchment paper)或矽膠上冷卻。注意事項及技巧 避免攪拌；溶解糖或加入水時可以攪拌，其他時候儘量不攪拌，避免反砂。 緩慢升溫，避免升溫太高需要降溫。 鍋子儘可能乾淨，避免反砂。用1.5kg的二砂試著做了一次；似乎很難溶解，溫度也很難控制，一直反砂；加入鹼後，顏色很快就變深，但可能是流動性不好，一下子就聞到焦味，被迫停止。特別提醒，鍋子至少要是用料的4倍以上，因為煮沸時膨脹很多，我中途換了一個大鍋。最後的成品：看起來比較像巧克力蛋糕。我想是因為轉化糖漿那個步驟沒有做好。風味上來說，比焦糖多了一個巧克力的味道；我以前做過幾次焦糖，包括做失敗燒焦、硬的、液態的，都缺少了巧克力風味，味道上也比較酸。我想應該是成功吧？下次或許試著用果糖做，少掉一個反轉的動作。Belgian Candi Sugar II文章中有影片可以參考。 Brewing Sugars &amp; How to Use Them, by BYO Candy Syrup the Right way (Hint- We’ve been doing it wrong!) by Ryans DIY Belgian Candy Syrup Candi Syrup Secrets, and how to make your own by Nate O.s Brew Like a Monk: Trappist, Abbey, and Strong Belgian Ales and How to Brew Them Belgian Candi Sugar II, sui Generis Brewing" }, { "title": "Kveik乾燥實驗", "url": "/posts/kveike4b9bee787a5e5afa6e9a997/", "categories": "釀酒筆記", "tags": "kveik", "date": "2019-11-15 02:21:35 +0000", "snippet": "Kveik傳統上就是用乾燥保存，而且是在家裏自然風乾，因為某種原因，目前酵母廠提供的都只有液態酵母（Lallemand將會發表乾酵母）。對家釀來說，保存液態酵母並不是太複雜的事，而且Kveik似乎天生體質強健，冰在冰箱中也可以保存很久，據說將近一年都沒問題。不過，玩家釀的人天生就有一個精神：我想要做是因為我覺得我可以。所以不少人試著自行乾燥Kveik。除了有趣，乾燥的酵母理論上保存時間更久。...", "content": "Kveik傳統上就是用乾燥保存，而且是在家裏自然風乾，因為某種原因，目前酵母廠提供的都只有液態酵母（Lallemand將會發表乾酵母）。對家釀來說，保存液態酵母並不是太複雜的事，而且Kveik似乎天生體質強健，冰在冰箱中也可以保存很久，據說將近一年都沒問題。不過，玩家釀的人天生就有一個精神：我想要做是因為我覺得我可以。所以不少人試著自行乾燥Kveik。除了有趣，乾燥的酵母理論上保存時間更久。照傳統的做法沾在木片上的大有人在，比較簡單且衛生的方法則是將酵母泥塗在烘焙紙（Parchment Paper)上，然後用食物乾燥機快速烘乾。我在HBT上看到有人說可以放在烤箱中，打開烤箱的照明燈就可以。剛好釀完一批，收集了一些酵母，就來試試看。酵母放在冰箱幾天，倒掉液體，用消毒過的湯匙挖取酵母泥，均勻地塗在紅蘋果買來的烘焙紙，放在烤箱架上，打開照明燈，用紅外線測溫，大約30幾度。塗薄一點會比較快，我這批大約24小時才乾，下圖是10幾個小時的狀態。全乾了後用夾錬袋收起來，感覺不太像酵母。不過，因為只是實驗目的，這批酵母泥混了一些酒花渣，並沒有清洗去除。我後來又做了一次，可是塗得比較厚，大約兩天才乾。幾個星期後，把前陣子留下來約800cc的麥汁拿來試試看。雖然整個乾燥過程並不是多講究乾淨衛生，卻也不想拿出來秤重增加風險，大概拍一下，用的酵母大概一截姆指大小。實驗的麥汁拿來煮沸後冷卻到30幾度，就整片投入。結果發現那一片維持原狀沒有化開，過了好幾個小時才稍微有點化開的跡象。過了一天後，出現了泡泡，基本上證明自行乾燥酵母的活性是在的。Kveik可以自行乾燥其實不需要做實驗，我比較好奇的是這麼簡陋的乾燥手段，是不是會感染。放了約一個星期，發酵過程都很正常，發酵完成後又多放了幾天也沒沒有看到長膜或奇怪班點，於是加糖裝瓶。裝瓶時試了味道，沒有感染或變酸的感覺。更新：裝瓶後一個多月，忍不住開來試試看。完合沒有感染的異常風味。因為是之前留下的麥汁，處理上沒有特別注意，加上裝瓶時就直接倒到瓶中，所以有些氧化的味道及顏色，不過這個麥汁是釀英式bitter留下的，所以些微的氧化反而覺得還不錯。而澄清度不佳似乎這支酵母的特性，也就不強求了。有機會，再拿放了幾個月的乾酵母來試試看。參考：SuiGenericBrewing的乾燥活力實驗" }, { "title": "Kveik &#8211; 挪威的酵母", "url": "/posts/kveik-e68caae5a881e79a84e985b5e6af8d/", "categories": "釀酒筆記", "tags": "kveik", "date": "2019-11-06 02:10:12 +0000", "snippet": "Kveik可以說是最近幾年啤酒界的熱門話題，本文是簡單介紹以及個人對Kveik的看法。英文尚可的人，建議直接前往Lars的blog觀看第一手的資料。Kveik是（部分地區）挪威語”酵母”的意思；傳統上在北歐斯堪地那維亞半島就有釀啤酒的習慣，他們使用的酵母不是買的，而是在高泡期時用木片沾上酵母，乾燥後保存，一代一代傳下來的。有個叫Lars Marius Garshol的人對這些農夫啤酒產生了興...", "content": "Kveik可以說是最近幾年啤酒界的熱門話題，本文是簡單介紹以及個人對Kveik的看法。英文尚可的人，建議直接前往Lars的blog觀看第一手的資料。Kveik是（部分地區）挪威語”酵母”的意思；傳統上在北歐斯堪地那維亞半島就有釀啤酒的習慣，他們使用的酵母不是買的，而是在高泡期時用木片沾上酵母，乾燥後保存，一代一代傳下來的。有個叫Lars Marius Garshol的人對這些農夫啤酒產生了興趣，從2013年開始到處尋找這些隱藏在斯堪地半島各處的釀酒人，除了記錄，也收集了這些酵母，更把收集的酵母寄給學術單位分析研究，也給酵母廠分離繁殖，然後這些酵母開始在自釀甚至商業釀酒流行了起來。這些酵母其實大不相同，但卻有些共通的特性，習慣上現在把這些酵母都稱為Kveik。Kveik包括了許多菌種(strain)，而且原始收集到的通常就包括了許多菌種-有的甚至有乳酸菌的存在。經過分析結果，這些菌種大都屬於Saccharomyces cerevisiae-也就是大家熟悉的Ale酵母以及麵包酵母家族。更進一步的DNA分析指出這些酵母比較接近德國和英國的酵母。 要注意的是，原始收集到或從”產地”收集到的都是多菌株的，而酵母廠販售的則通常是從其中分離出來的單一菌株，而且通常不含乳酸菌。如果是多菌株的，通常會注明。Lars有整理一個表格，註明了不同地方收集到的Kveik的特性。因為Lars的要求，酵母廠會標注酵母的取得的地方或人名，所以即使是酵母廠的Kveik也可以參考這個表格。雖然網路上是可以取得原始產地的酵母，除非經驗豐富，個人建議使用酵母廠販售的單一菌種；因為除了混合菌種比較難控制外，有些可能含有乳酸菌，如果不小心，器材被污染，以後就只能釀酸啤了。Kveik的共通特性： 可以高溫發酵而不產生高質酒精或乙酸異戊酯(香蕉味）。 通常是POF-，也就是沒有產生4-vinylguaiacol phenol（德式小麥和許多比利時的重要風味）的基因。 耐高酒精，通常可以到13~18%。 發酵快，而且通常也不太需要熟成。 可以（自行）乾燥成乾酵母。 （高溫及低接種率下）會有濃厚的熱帶水果或柑橘風味。Lars的Blog上有仔細說明”如何使用Kveik“，是所有使用Kveik的人都應該參考的。其中的幾個重點： 想要帶出熱帶水果等酵母風味，接種率要低。 儘量根據表格中建議的接種溫度（通常是30度C或以上) 回收的方法和時間點應該要依照表格說明的，尤其是混合菌種的，才能維持菌種比例。 如果是釀比重低的啤酒（13%以下？)，要加比較多的酵母營養劑。Omega Lab Yeast可能是比較早投入Kveik生產的酵母廠，所以也是自釀群眾最常取用、最容易取得，目前有這幾種酵母: #1 Sigmund/Voss Omega Lab Yeast 061 Voss/The Yeast Bay Sigmund’s Voss Kveik/Imperial Yeast Loki 接種溫度：39 °C 風味：柑橘、橘皮 #3 Stranda Omega Lab Yeast 057 Hothead 接種溫度：30 °C 風味：熱帶水果 #5 Hornindal Omega Lab Yeast 091 Hornindal Kveik 接種溫度：30 °C 風味：熱帶水果不久前Lallemand在Twitter上公佈即將發表Voss乾酵母，傳統的Kveik保存方法就是乾燥，所以應該不會和液態酵母有太大的差異，令人期待：https://twitter.com/LallemandBrewUK/status/1192040024231096322最後有一段使用Kveik，依照挪威傳統釀酒的影片，非常值得一看：以下是個人心得或想法：“低接種率”、”高溫接種”、以及”高果酯”是同一件因果；因為高溫，所以接種率可以低，因為酵母在高溫下長得很快；因為高溫，所以發酵速度也快；因為高溫，所以產生了很多果酯。更進一步來說，”高溫接種”可能是挪威鄉間的釀酒人在長期的釀酒經驗中發現的成功密訣，而Kveik也就是被這個密訣所「人擇」出來的酵母；怎麼說呢？而 Kveik其中一個特點-沾在木頭或木片上自然風乾，這種使用條件下，很容易感染雜菌，而採用「高溫接種」就能讓酵母很快地發展成優熱菌種，加上酵母產生的酒精和二氧化碳，雜菌的繁殖機會就被大幅降低了。*1更近一步來說，即使在夏天，挪威的平均溫度也只有20度出頭，”加熱溫控”並不符合”農夫啤酒”的概念，在上面那段影片中可以看到室外都還有殘雪。在這種氣候之下，高溫接種快速發酵完成似乎是一個很好的解決方案。隨著Kveik愈來愈受歡迎，相關的研究和討論也愈來愈多。以下是我收集的一些有趣的資訊： Kveik發酵的結果pH值相對比較低 Kveik的接種率研究 資訊量頗多的討論（影片）參考資料：1. Kveik的分析報告：http://www.garshol.priv.no/blog/301.html2.Kveik菌種表格： http://www.garshol.priv.no/download/farmhouse/kveik.html" }, { "title": "Keezer DIY記錄", "url": "/posts/keezer-diye8a898e98c84/", "categories": "釀酒筆記", "tags": "", "date": "2019-09-09 14:35:15 +0000", "snippet": "做了好久的keezer終於初步完工，記錄一下。相對於Kegerator是用小冰箱，Keezer一般的定義是用（臥式）冷凍櫃改成的。所有的事開始於冷凍櫃的取得，趁costco特價，我就買了一台Whirlpool 200L。Keezer的DIY最大的工程是做一個木頭框，加了一個木框可以避免在櫃體或蓋子挖洞，同時也增加了櫃內的空間。木頭框的尺寸當然是和冷凍櫃的大小一致，但有兩點是個人喜好可選的，一...", "content": "做了好久的keezer終於初步完工，記錄一下。相對於Kegerator是用小冰箱，Keezer一般的定義是用（臥式）冷凍櫃改成的。所有的事開始於冷凍櫃的取得，趁costco特價，我就買了一台Whirlpool 200L。Keezer的DIY最大的工程是做一個木頭框，加了一個木框可以避免在櫃體或蓋子挖洞，同時也增加了櫃內的空間。木頭框的尺寸當然是和冷凍櫃的大小一致，但有兩點是個人喜好可選的，一是厚度，二是高度。經過測量，這台Whirlpool 200L扣掉壓縮機突起的空間，可以放得下三個keg，如果木框的高度有20公分左右，壓縮機突起的部分還可以多放一個，所以我的目標就是接近20公分寬的木板，而且，我想做成不黏死的框，所以希望有一定的厚度和重量。在網路上找了好久，終於找到我覺得合適的木板：寬18cm，厚3.8cm。網路上看到美國人的DIY，好像所有人都有一套木工工具，我沒有這些重工具，只好手工慢慢鋸；不過，建議想辦法借到工具，才能得到比較平整的切口。我做的框有兩層，外層是寬28cm，厚1.9cm，這片木板賣家有裁切的服務，省了很多工。中略300字。組裝起來大概是這樣，因為木板有變形，加上切口不夠平整，接縫處有很大的隙縫，我用塑鋼土來填補。框上要挖洞，洞大約1英吋，洞的位置視個人喜好，但間距太小在裝龍頭時不好作業，應該要大於8~10公分；我選擇靠旁邊，因為留另外一邊進出keg時比較不會被龍頭擋到；另外，配合盛水盤的大小，這四個洞也比較靠近一點。貼上EPDM止滑條，加上前、左、右有擋板，還有木框本身重量夠，放上冷凍櫃很穩定，可以不用黏。工程中最危險的部分是拆活動關節的螺絲，不過我發現這台的設計，可以只取下下面兩顆螺絲，鬆開螺上面兩顆螺絲，就可拆下上蓋，降低拆螺絲時彈簧彈開的風險。拆下上蓋，鎖上木框。加上氣體分配器：鎖上龍頭和盛水盤：接下來就是要把酒裝滿了。補充說明一：矽膠不太適合當酒管，一來矽膠容易吸味道，二來矽膠透氣率高。我原本想用Accuflex Bev-Seal專用管，但需要從美國買，體積重量看起來運費也不便宜。後來決定試用kegland的EVABarrier管，也配合這個管，採用了kegland的Duotight插入式快接，整體而言還算滿意，至於會不會有塑膠味，可能要久一點才知道了。補充說明二：倒數第二張圖中靠近分體分配器的白色物體是簡易的調壓閥。一般如果想要不同keg調不同壓力，會用次級調壓閥，但是次級調壓閥很貴。圖中的調壓閥一個不到60台幣，是非常划算的替代品。" }, { "title": "Grainfather vs. Braumeister", "url": "/posts/grainfather-vs-braumeister/", "categories": "釀酒筆記", "tags": "", "date": "2019-06-05 09:45:11 +0000", "snippet": "Grainfahter和Braumeister是E-BIAB中最熱門的兩個，小弟有幸能玩過這兩台機器，分享一下兩台的比較。我的Grainfather是第一版的，而我取得的Braumeister控制器也是很舊型的，所以我並沒有使用這些控制器，而且新的版本的控制器我都沒用過，所以這裡不討論控制器的差異。   Braumeister 20L 舊版 Grai...", "content": "Grainfahter和Braumeister是E-BIAB中最熱門的兩個，小弟有幸能玩過這兩台機器，分享一下兩台的比較。我的Grainfather是第一版的，而我取得的Braumeister控制器也是很舊型的，所以我並沒有使用這些控制器，而且新的版本的控制器我都沒用過，所以這裡不討論控制器的差異。   Braumeister 20L 舊版 Grainfather 一代 用料做工 做工用料比Grainfather好上一大截。不計控制器，機體幾乎是金屬的。鋼板也比較厚。 有一些塑料的構件。 pump 金屬頭；容易拆下來清潔（不過要把機器翻過來）。 塑料頭。比較不容易拆。 電熱 外露。 2000w/240v 在鍋底，不直接接觸麥汁。 1600w/120V 2000w/240v 控制器位置 底部；機器適合放在桌子或枱面上使用，否則控制器太接近地面，不好操作。 上方。放在地上也很方便操作。 酒花過濾 無。 有過濾管；但個人使用經驗不佳；容易脫落，也容易被熱渣堵住。 出水口 有出水口，但出麥汁時不能用pump打。舊版的底部無法排出的水要抬起機器倒；新版的有另一個底部排渣口。 沒有出水口，麥汁可以用pump打出來。原廠的設計上是用pump打過熱交換冷卻器。缺點是洗機器排水也需要插電，用pump把水排出。最後無法排出的需要抬起來倒掉。 耳 有雙耳容易枱起機器。 沒有。比較容易抓的地方是控制器下方的框，但控制器是可拆的，容易脫落。 死角 ~4公升 1.5公升 冷卻方式 盤管；新版的plus有外包冷卻。 附熱交換冷卻器。 麥汁循環方向 反向由下往上沖過麥芽。 配合pump間歇性的停止，避免麥芽緊實，溫度也會比較平均。但麥芽過多或過細時，會對pump造成壓力，嚴重時可能會停止循環。麥汁從內桶上方溢流到外側，內桶外側的麥汁必須高於加熱器；所以有最少水量的要求。 從上往下流經麥芽。 隨著時間，麥芽床會變得堅實，麥汁流經麥芽速度會變慢，導致升溫時，麥芽床會有比較大的溫差。另一個問是是Stuck Sparge，也就是麥汁流速過慢。如果麥汁流經麥芽床的速度太慢，會由中間的溢流管往下流。雖然桶底是個平面，也是需要一定量的麥汁才能避免燒焦，而且下方液面如果低於溫度探頭，會造成誤判。 官方數據最大麥芽量 6kg 80% eff OG: 1.065左右 (有朋友曾經用到8kg麥芽、比重達1.095) 9kg 80% eff OG: 1.090左右 最小麥芽或水量 最少需要21~23公升的水。 2.5kg麥芽。 總容量 40公升 ~34公升（刻度到30公升） 小批量配件 比較短的內桶。 比較短的溢流管。 溫度探針位置 底部靠中間。 由於加熱線圈在外側，如果pump沒有啓動，內外側溫度會比較大。 側邊。 其他 BM放內鍋注意底部密合；如果壓到加熱線圈的螺絲，循環就不起作用。 我第一次用Grainfather釀的是一個用了7公斤麥芽的配方，糖化時沒有問題，但煮沸到98度左右，加熱線圈就跳掉了。然後鍋底有一層燒焦的麥汁。所以在還沒沸騰前，最好不時攪拌一下，或用pump循環麥汁。 加熱線圈跳掉後，需要按底部中間的一個按鍵。 個人意見 最大缺點：麥芽量限制。 最大優點：循環良好、不容易塞。 最大缺點：可能循環不良。 最大優點：使用簡單。 " }, { "title": "BrewManiacEx 0.4.5/0.4.6", "url": "/posts/brewmaniacex-0-4-5-0-4-6/", "categories": "BrewManiac", "tags": "", "date": "2018-10-29 07:24:50 +0000", "snippet": "0.4.5 Mirror LCD display on web pages New Web page display0.4.6 Fix of sensor calibration bugs for multiple sensors Heat@Pump option If this option is set to “YES”, the heating will be...", "content": "0.4.5 Mirror LCD display on web pages New Web page display0.4.6 Fix of sensor calibration bugs for multiple sensors Heat@Pump option If this option is set to “YES”, the heating will be stop when pump is not running. Draggable by “touch” event on mobile devices enabled by including *jQuery UI Touch Punch 0.2.3* " }, { "title": "BrewPiLess v3.1/3.2", "url": "/posts/brewpiless-v3-1/", "categories": "BrewPi@ESP8266", "tags": "", "date": "2018-10-10 09:16:19 +0000", "snippet": "v3.1 Bug Fixed. Beer profile which uses gravity as conditions didn’t work in v3.0. Ditch WiFiManager, softAP is always on. To configure WiFi, go to config page. Plato supported. ...", "content": "v3.1 Bug Fixed. Beer profile which uses gravity as conditions didn’t work in v3.0. Ditch WiFiManager, softAP is always on. To configure WiFi, go to config page. Plato supported. Spanish page supported. (Thanks to Fernando!) Tom’s frontend embedded, as an optionv3.2 Revision of remote logging setting page. Resolving the “null” issue of ubidots.com and dedicated settings for ubidots.com thingspeak.com Brewfater Special note on Tom’s frontend:Tom’s frontend is surely prettier. The reason I didn’t use it as default frontend is that it needs more space and can’t fit in current allocated program space. (Note: double space is needed for on-line update, program must not exceed 500k for 1M program space.) The framework 1.8.0 happens to include 2M program space linkage script so that we don’t have to create it.Please note that changing flash layout will result in lost of all data on the filesystem including BPL settings. Online updating firmware with different flash layout might have unpredictable result.If you are not sure or don’t care. Stick with classic ones. You can upload the pages to get the new pages.LocalizationThanks to Fernando, now there is a Spanish version of pages. The Spanish version is also embedded into standard option and new(Tom’s frontend) builds. You can build embedded Spanish version for other options by change options in platformio.ini. Like Tom’s frontend, you can update the pages by uploading html files.If you want to translate BPL into other language, check the wiki:https://github.com/vitotai/BrewPiLess/wiki/Localization-of-web-pages" }, { "title": "搶救爆瓶大作戰", "url": "/posts/e690b6e69591e78886e793b6e5a4a7e4bd9ce688b0/", "categories": "釀酒筆記", "tags": "", "date": "2018-08-12 03:02:36 +0000", "snippet": "所謂「人有失手，馬有亂蹄」、「仙人打鼓有時錯」，又所謂「吃燒餅沒有不掉芝麻的」、「釀啤酒沒有不爆瓶的」。爆瓶是釀酒人不願面對，但不小心就會遇到的問題。爆瓶有幾個原因： 感染 有些細菌會吃酵母不吃的糖、或是把長鏈的糖分解成酵母可以吃的糖。無解。 瓶子本身缺陷 製造瑕疵或有撞擊過。無解。 裝瓶時酵母還沒把所有的糖吃完 某些酵母，例如Saison酵母，吃糖能力很高，接近最後時，糖剩下的...", "content": "所謂「人有失手，馬有亂蹄」、「仙人打鼓有時錯」，又所謂「吃燒餅沒有不掉芝麻的」、「釀啤酒沒有不爆瓶的」。爆瓶是釀酒人不願面對，但不小心就會遇到的問題。爆瓶有幾個原因： 感染 有些細菌會吃酵母不吃的糖、或是把長鏈的糖分解成酵母可以吃的糖。無解。 瓶子本身缺陷 製造瑕疵或有撞擊過。無解。 裝瓶時酵母還沒把所有的糖吃完 某些酵母，例如Saison酵母，吃糖能力很高，接近最後時，糖剩下的很少，比重變化也變得很小，容易誤判。 算錯瓶發糖前兩者基本無解，建議一旦發現，迅速以拆彈手法處理之。這裡要分享一個方法可以解決後兩種狀況，但是要提醒的是，這不是唯一的方法，也不是最好的方法，甚至不是很建議的方法。這個方法適用於瓶發還沒有完成前，或是瓶發完成了，但碳酸化程度高於預期但還沒爆瓶的程度。如果有爆瓶的可能了，不建議使用。需要工具：開瓶器一支，以及必要的防護措施。開瓶器建議找下圖最左邊這種樣式的，其他的樣子會留下明顯的痕跡，甚至會造成瓶蓋的傷害。操作方式：作勢打開瓶蓋，輕輕且緩慢地用力，直到聽到「嘶～」的漏氣聲，馬上停止。視情況完成後用壓瓶器把蓋子壓緊。如果是裝瓶後發現，可以在裝瓶後12小時、24小時各操作一次，或是接下來多操作幾次。但漏氣後基本上無法預期最後的充氣情況，因為酵母吃糖速度和殘糖無法估算。有人說他操作了三天，最後完全沒氣；以Ale來說，可能性很高。我的經驗是瓶發糖加到超過5個體積數，然後12小時、24小時各操作一次，一星期後開瓶結果，氣體數感覺在3.5~4之間。這個方法也可以用來調整過度充氣，沒有爆瓶的可能前提下，可以多次操作直到到理想的程度。" }, { "title": "Kettle-RIMS wort level control", "url": "/posts/kettle-rims-wort-level-control/", "categories": "BrewManiac", "tags": "", "date": "2018-08-07 02:18:53 +0000", "snippet": "PrefaceThe operation of Kettle-RIMS is like a E-BIAB system with its “basket” outside of boil kettle. The advantages of Kettle-RIMS over BIAB are Less hot side aeration. The wort drains smoothly i...", "content": "PrefaceThe operation of Kettle-RIMS is like a E-BIAB system with its “basket” outside of boil kettle. The advantages of Kettle-RIMS over BIAB are Less hot side aeration. The wort drains smoothly into BK without splashing. No need of lifting the hot heavy “bag/basket”. The “basket” is already lifted.One issue, however, must be addressed: overflow of MLT. The wort is pumped from BK to MLT and then drains through grain bed, back to BK. It’s difficult, if not impossible, to get a matched flow rate. The flow rate through grain bed even changes as the status of mash changes. Overflow drain or AutoSparge by Blichmann are solutions for it. BrewManiacEx adapts more software-y way by using a level sensor, or float ball, to detect potential overflow of HLT.OperationTo support level sensor, the option “EnableLevelSensor” must be set to true. There will be three additional settings in “Misc” category. They are Enable LV Sen (Enable Level Sensor) what it literally means. You might sometimes just don’t need the sensor. LV Trig. ms (Level sensor minimum triggering time) The minimum time for BrewManiacEx to recognize the condition of “full”. This setting prevents false alarm but introduces latency. step by 50ms, range 50ms~ 1000ms(1 second) Ext pump Rest (Extended pump rest) The Rest state will be extended for a period of time after the “full” condition is cleared. 2 ~ 90 seconds When BrewManiacEx detects “full” signal, it waits for LV Trig. ms to recognize the “full” condition. If the signal is cleared before LV Trig. ms, nothing will happen. Otherwise, BrewManiacEx enters REST state and stops Pump as well as Heating. BrewManiacEx extends the REST state for Ext pump Rest time after the “full” signal is cleared.Hardware/Software ConfigurationOf course, you must know your hardware setup and config the software accordingly.The sensor I will use is like this one. (But, mine isn’t from Amazon.) It “opens” when triggered and “closes” when not triggered. The two signal lines are connected to GROUND and the signal PIN. The reading from the signal PIN should be 1/HIGH/NOT-GROUNDED when it is triggered.The signal PIN can be native ESP8266 pins or IO pins of PCF8574. The code is in pins.h has both configurations, but the correct setup depends on the real hardware.One thing to remember is that D3/D4/D15 must be HIGH/HIGH/LOW during booting.If one of these 3 PINs is chosen, the sensor might prevent ESP8266 to boot-up. A solution is to connect the sensor after booting up. However, it’s not a good idea.If the signal PIN is on PCF8574, the interrupt PIN to D3 must be disconnected. The interrupt PIN connection in BrewShield is for BrewPiLess only, it turns out to be a design flaw. It seems that PCF8574 initialized all PINS to HIGH at initial. If one of the PIN is GROUNDED at boot-up, PCF8574 regards it as a change and signal interrupt by pulling it to LOW. Pulling D3 to LOW prevents ESP8266 to boot-up. If for some reason, ESP8266 boots quicker than PCF8574, it might be fine, which is the case in my prototype setup.Enable the option: [env:nodemcuv2-multisensor]platform = espressif8266board = nodemcuv2framework = arduinobuild_flags = -Wl,-Tesp8266.flash.4m.ld -DEnableMultiSensor-DPUMP_INVERTED_LOGIC=true-DEnableLevelSensor=trueUsing D5 as the signal pin, a “normal-close” float sensor which closes when not triggered.line 56@pins.h #if EnableLevelSensor#define LevelSensorOnIoExpander false#if LevelSensorOnIoExpander#define LevelSensorIOExpPin 32 //P5#else#define LevelSensorPin NODEMCU_PIN_D5#endifline 213@pins.h bool isWaterLevelFull(void){return digitalRead(LevelSensorPin) != 0;}Using P5 of PCF8574 as the signal pin, a “normal-close” float sensor which closes when not triggered.line 56@pins.h #if EnableLevelSensor#define LevelSensorOnIoExpander true#if LevelSensorOnIoExpander#define LevelSensorIOExpPin 32 //P5#else#define LevelSensorPin NODEMCU_PIN_D5#endifline 207@pins.h bool isWaterLevelFull(void){// _portvalue is read for button every loop cyclereturn (_portvalue &amp; LevelSensorIOExpPin) !=0;}" }, { "title": "BrewManiacEx v0.4 and v0.4.2", "url": "/posts/brewmaniacex-v0-4-and-v0-4-2/", "categories": "BrewManiac", "tags": "", "date": "2018-08-04 13:07:20 +0000", "snippet": "(late) v0.4 release note. (I was waiting for an response from EspAsyncTCP, but We must move on. So.) Updated framework(to 1.6) and EspAsyncTCP/EspAsyncWebServer libraries WebSocket replaced Serve...", "content": "(late) v0.4 release note. (I was waiting for an response from EspAsyncTCP, but We must move on. So.) Updated framework(to 1.6) and EspAsyncTCP/EspAsyncWebServer libraries WebSocket replaced ServerSideEvent. (So now BrewManiacEx might work on IE and Edge) Continuously triggered button operation for Web interface. (thanks to WebSocket.)v0.4.2 release note. AP only mode fixes After v4.2, soft AP is ALWAYS available and password protected. The network selection is now part of the “network” tab. WiFiManager is ditched. (But I steal the interface style from it.) The default password is changed to “rdwhahb!“. The added “!” makes it 8 characters, which is minimum length for WiFi pass phrase. HopStand support for exported beerXML from BeerSmith and Brewersfriend.com Whirlpool hops are specified as “Aroma” hops in beerXML. Now the information will be used in automation. Brewersfriend.com does specify temperature in beerXML while beerSmith doesn’t. Therefore, an option for default whirlpool hop temperature is added. If temperature is missing, the default value will be used. Settings survive through formatting file system The settings will be kept before formatting and restored after formatting automatically. (Recipes and logs aren’t.) An option to “clean update” HTML/Javascript files. When the fragmentation of SPIFFS becomes higher, the access to file system will be slower. Formatting the SPIFFS is a solution for it. (The online firmware update still doesn’t work.) Low pass filtered applied to temperature sensor readings. To filter out some acutely changed, invalid values. The reading will lag for a few seconds. (untested, unverified, not enabled by default) Level sensor(float ball) support for Kettle-RIMS Pin assignment must be done according to hardware setup. The float sensor is installed at MLT. When the level of wort in MLT is too high, the sensor is triggered and pump and heating will be stop for a configurable period of time. " }, { "title": "簡介Quick Sour/Kettle Sour", "url": "/posts/e7b0a1e4bb8bquick-sour-kettle-sour/", "categories": "釀酒筆記", "tags": "", "date": "2018-07-25 01:35:10 +0000", "snippet": "1.簡介Quick Sour顧名思義，是一種快速釀造酸啤的方法。它的做法基本上就是”先讓乳酸菌發酵達到理想的酸度，再讓Sacc.酵母發酵完成“。用這種做法可以很快地釀出帶有酸味的啤酒，而且因為先讓乳酸菌單獨發酵，除了可以控制酸度外，也可以在乳酸菌發酵完成後再加酒花，解除了因為乳酸菌不耐酒花而造成的IBU限制。基本上，用Quick Sour可以讓所有類型的酒都加上酸味，包括IPA。因為不會污染...", "content": "1.簡介Quick Sour顧名思義，是一種快速釀造酸啤的方法。它的做法基本上就是”先讓乳酸菌發酵達到理想的酸度，再讓Sacc.酵母發酵完成“。用這種做法可以很快地釀出帶有酸味的啤酒，而且因為先讓乳酸菌單獨發酵，除了可以控制酸度外，也可以在乳酸菌發酵完成後再加酒花，解除了因為乳酸菌不耐酒花而造成的IBU限制。基本上，用Quick Sour可以讓所有類型的酒都加上酸味，包括IPA。因為不會污染冷端的器材，基本上也不需要額外的器材，非常適合酸啤入門。Quick Sour常見的有三種做法：Sour Mash, Kettle Sour, Sour in fermenter。分別是在麥汁製作流程中不同的點加入酸化的動作。一般的釀酒流程是：糖化 -&gt; Mash Out -&gt; 煮沸 -&gt; 發酵這三種做法分別是把酸化的動作插在MashOut前，煮沸前，和發酵前（三選一）：糖化 -&gt;( Sour Mash)-&gt;Mash Out -&gt;(Kettle Sour/Sour in fermenter) -&gt; 煮沸 -&gt;(Sour in fermenter) -&gt;發酵這三種方法的比較： Sour Mash因為麥芽最多只升溫到70多度，可能有一些微生物還存活著，最有機會產生異常風味 kettle sour最有彈性，有數種變化，是最多人採用的方法。 Sour in fermenter需要用一個專門乳酸菌發酵的發酵桶，但發酵桶隔絕空氣能力好，而且製作麥汁的器材不會被佔住。在煮沸前做和kettle sour的差別是移動麥汁到發酵桶，酸化完成後再移回煮沸鍋。Kettle sour和sour in fermenter在酸化後，也可以不煮沸保留乳酸菌；這樣子的風味會比較複雜，但是酸度難以控制，而且冷端的器材會接觸乳酸菌。有接觸乳酸菌的冷端器材應該和非酸啤的分開使用，以免感染，變成全部都是酸啤。2. Kettle Sour詳細步驟 糖化製作麥汁，直到取出麥芽 ［非必要但建議］短暫煮沸麥汁5-10分鐘。 ［非必要但建議**］**調整麥汁pH值為 4.0 ~ 4.5。 降溫到適合乳酸菌的溫度，通常是30-40度。 接種乳酸菌。 ［非必要但建議**］** 儘量將麥汁隔絕氧氣。 ［非必要，視菌種而定**］**維持乳酸菌適合的溫度。 監測pH值，直到理想的酸度，一般是3.2~3.7。（通常24-48小時內酸化完成是比較理想的。） 煮沸，加酒花，冷卻後接種嚴格來說，只有幾個步驟是必要的酸化動作，但要得到理想的結果，這幾個步驟會建議執行： 接種前短暫煮沸 雖然說糖化過程中基本上己經達到巴氏滅菌的標準，但實務上是有些菌可以存活，短暫煮沸則可以更加確保滅菌。 預先整調pH值到4.5以下 減少雜菌活動的可能。 乳酸菌在在低pH值發酵比較不會分解形成啤酒泡沫成份。 隔絕空氣 減少嗜氧菌活動的可能。 減少醋酸產生的機會。 可以簡單地用保鮮膜封住即可。 維持乳酸菌發酵溫度 視乳酸菌品種而定，在室溫30C以上對很多乳酸菌是理想的環境。有些品種，例如很受歡迎的L. plantarum在室溫就可以發酵得很好。 乳酸菌在完成使命後就直接在鍋中被消滅，不會有感染發酵桶和冷端器材如裝瓶器材等的機會，加上酒花是在後面加，己經不會影響到乳酸菌，所以沒有任何的限制。由於乳酸的分子量比水重，加上乳酸菌在接近pH 3.0時活動就會停止，所以乳酸菌發酵前後的比重通常變化不太；如果前後比重變化超過 0.002~0.004可能是有酵母感染。3.乳酸菌的來源乳酸菌廣泛地存在我們的生活環境和身體中，而常見的來源有： 商業販售的菌種 推薦使用。 益生菌 要注意成份菌種，有些菌種不適合。基本上 Lactobacillus開頭的菌種都可以。 有Sacc.開頭的酵母要注意，因為會消耗糖份產生酒精，如果酸化後煮沸，酒精會被煮掉。 Swanson的 L. plantarum很受歡迎。 益生菌飲料 參考益生菌注意事項。 Goodbelly的產品很受歡迎。 優格/優酪乳 參考益生菌注意事項。 無脂肪的比較好，希臘優格許多人用。 麥芽 由於麥芽中可能含有許多雜菌，使用麥芽酸化最好控制溫度、pH值，創造乳酸菌最佳環境，避免雜菌繁殖。 其他發酵食品，例如泡菜、德國酸菜、kefir等等 菌種複雜不明，結果很難預測。 人體 非專業人士，請勿嚐試。 乳酸菌的Starter乳酸菌也可以做starter，但目前沒有正確估算菌數的方法，所以只能用容量來計量；Milk the Funk的建議是5加侖用0.5 ~ 1公升。乳酸菌的starter很簡單，就是1.040的麥汁，可以加入10%的蘋果汁和/或酵母營養劑，也可以不加。培養時儘量減少空氣，避免接觸氧氣 。乳酸菌發酵也有可能產生二氧化碳，所以不能完全密封。視菌種控溫，發酵24-48小時即可。在starter中加入CaCO3可以達到更理想的結果，因為乳酸菌產生的乳酸造成pH值下降，過低的pH值會讓乳酸菌停止活動；CaCO3會平衡pH值，讓乳酸菌的活動時間更久。但是接種時，要小心不要把CaCO3加入麥汁。4.常見問題 Quick Sour/Kettle Sour和傳統的酸啤有何不同？ Quick Sour/Kettle Sour做出來的酸啤和傳統的酸啤是兩種東西。傳統的酸啤如lambic是同時發酵，甚至是自然發酵(spontaneous fermentation)，除了乳酸菌(Lacto)，通常有Brett和Pedio。乳酸菌產生的主要是乳酸，味道比較單純，而Brett會產生很複雜的風味(funky)。Quick Sour/Kettle Sour之後也是可以另外加Brett，這不在討論範圍中。 傳統的Berliner Weiss和gose據說大都有Brett的存在，但根據BCJP中對Berliber Weiss和gose的描述反而比較接近用Quick Sour/Kettle Sour做出來的。BJCP認定似乎是有Brett算是”古老”的做法。 可以用來釀什麼類型的啤酒？ 可以把任何類型的啤酒加上酸味；可以是任何類型，但都不會符合BJCP的標準。 BJCP的分類中，23A Berliner Weisse和 27(A)Gose是最可能適合的，也是最多人釀的。 Quick Sour/Kettle Sour和直接加乳酸有何不同？ 你告訴我。有人說直接加乳酸有藥水味，也有人說成果不錯。 乳酸菌除了乳酸以外，視品種而定，也有微量的副產品。 不煮沸殺死乳酸菌有什麼好處？ 乳酸菌和酵母的交互作用會產生一些酯類，像風味更複雜。 酸化到多酸？ 視個人喜好及想要達到的風味為主。 一般是到pH 3.2 ~ 3.7 需要使用pH計嗎？ 不需要，但最好用。否則只能嚐味道來知道酸度。但如果不是使用可靠來源的乳酸菌，在達到一定的pH值和酒發酵完成前，不建議食用麥汁。 需要特殊的酵母？ 不需要，但有些酵母在比較低的pH值可能會有問題。大多數的酵母在比較低pH值發酵都會受到影響，發酵速度變慢。 下列酵母一些有人試過成功發酵酸化麥汁的酵母：WLP644, US05, S04, WY1098/WLP007/OYL-006, Belle Saison, Sacch Trois, Bret brux, B. clausenii, B. custersianus, Bret Drie (BSI), WY3711, and WY3726 參考資料： Lactobacillus 2.0 – Advanced Techniques for Fast Souring Beer How Kettle Souring is making Sour Beer Cheap and Affordable Kettle Souring Beer- Brewing Techniques by BeerSmith blog Berliner Weisse (Napoleon’s Champagne) by BYO Gose – Brew Your Own Yeast And Bacteria 101 Fast Souring with Lactobacillus BJCP 2015 Guideline參考資料二（個人不負責任亂翻譯，請以原文為主）：23A Berliner Weisse整體印象：非常淡、清爽、低酒精的德國小麥啤酒，帶有乾淨的乳酸酸味及很高的碳酸化程度。低程度的麵團麥味支撐住酸度，以致於不會人工味。Brettanomyces的funk有限。香味：尖銳的酸主導（中等到中高），可以有相當程度的水果特性（通常是檸檬或酸蘋果）。隨著熟成時間變長，水果味會增加，輕微的花香也可能發展出來。沒有酒花香。新鮮的版本中，小麥呈現出生麵團的風味，和酸味融合會產生酸麵包的印象。可以擁有有限的Brewtanomyces的funky特性。外觀：顏色如乾草般淺，澄清度從清澈到有點混濁。大而厚重的白色酒泡。一直冒泡。風味：主要是乾淨的乳酸酸味，可能非常強烈。互補的麵團、麵包或小麥榖味通常可以查覺。感覺不到酒花苦味；酸味而非酒花提供了平衡。絕對沒有醋酸的味道。可能可以感覺到有限的柑橘或酸蘋果的果味。餘味非常的乾爽。平衡性由酸味主導，但些許的麥味應該出現。沒有酒花的風味。可以擁有有限的Brewtanomyces的funky特性。口感：酒體輕，高碳酸化，感覺不到酒精，乾淨利落，水果酸味。注釋：在德國，它被歸類為Schankbier，意味著是7-8P起始比重的輕啤酒。通常加入有樹莓、車葉草、或葛縷子風味的糖漿，以中和酸味。曾被描述為世界上最清爽的啤酒。歷史：柏林的特產，因為其有活力而優雅的特性，在1809年被拿破崙的軍隊稱為「北方的香檳」。曾經有過煙燻及Marzen強度（14P)的版本。在德國少見，但某些美國酒廠常態性地生產這個類型。特性原料：（如同其他的德國小麥啤酒）小麥芽通常佔50%以上，其他的通常是Pilsner。以上層發酵酵母和乳酸菌共同發酵，所以產生尖銳的酸度，也可產生於混合不同年份的酒或延長冷藏熟成時間。不存在酒花的苦。傳統使用Decoction。德國的釀酒科學家相信Brettanomyces是產生正確風味必要的，但這個特性絕不強烈。類型比較：和lambic相比，比較不酸、是乾淨的乳酸酸味，在味道極限下的funk。酒精度也較較低。數據資料：OG: 1.028 – 1.032 FG 1.003 – 1.006IBU: 3-8 SRM: 2-3 ABV: 2.8-3.8%27 History Beer:Gose整體印象：低苦度、帶有壓抑的芫荽仔和鹽味、高碳酸化、酸、水果味的小麥啤酒。非常清爽，明亮的風味，高度發酵。香味：輕微到相當的梨果類香味，微酸，一點點尖銳。感覺得到的芫荽仔會有點檸檬香氣的特質，強度到相當的強度。有點麵包、麵團、酵母味，類似生的酸麵包。酸味和芫荽仔提供了明亮和有活力的印象。如果有感覺到鹽，是輕微乾淨的海風或只是清新。外觀：未過濾，從相當混濁到全部混濁。相當高到很高的酒頭，良好的泡沬維持性。一直冒泡。淡黃色。風味：相當到有限但可感覺到的酸味，像是擠在冰茶中的檸檬。相當明顯的麵包/麵團的麥味。輕微到相當的梨果類或檸檬味。輕微到相當程度的鹹味，範圍直到味覺的極限為止。鹹味應該可以感覺到（尤其是一開始的感覺），但不能太鹹。低苦度，沒有酒花風味。尾韻乾爽，完全發酵，由酸味而非酒花來平衡麥味。尾韻酸味會更明顯，強調此類型啤酒的爽口特質。酸度應該平衡而不是突出（雖然歷史中的版本可能很酸）。口感：高到非常高的碳酸化，持續冒泡。中輕到中厚酒體。如果感覺得到鹽，會有一點刺激、流口水的特質。酵母和小麥提供了一點酒體，但不太重。注釋：在傳統直筒的玻璃杯中飲用。歷史中的版本因為自然發酵，比現在的酸許多，可能和Berliner Weisse一樣加糖漿或kummel。現在的範例是用乳酸菌發酵，所以比較平衡而不需要加糖。發音為GOH-zeh。歷史：和萊比錫有關，但發源自中世紀Gose河旁的Goslar鎮。文獻記載在萊比錫從1740以前就有。據說在這1900年萊比錫有80家gose酒廠。在第二次世界大戰後，產量下滑，在1966年幾乎消失。現代的生產是在1980年代重新開始，但尚未普及。特性原料：Pilsner和小麥芽，有限地使用鹽和芫荽仔及乳酸菌。芫荽仔應該有新鮮、柑橘（檸檬或苦橙）、明亮的感覺，而不是有像蔬菜味、芹菜、火腿味。鹽應該是海鹽或清新的鹽味而不是金屬或錪味。類型比較：感覺到的酸味應該不像Berliner Weisse或Gueuze一樣強。節制地使用鹽、芫荽仔及乳酸菌。不該過份地鹹。芫荽仔香氣和witbier類似，混濁類似德國小麥啤酒。數據資料：OG: 1.036 – 1.056 FG 1.006 – 1.010IBU: 5-12 SRM: 3-4 ABV: 4.2-4.8%" }, { "title": "家釀兵器譜", "url": "/posts/e5aeb6e98780e585b5e599a8e8ad9c/", "categories": "釀酒筆記", "tags": "", "date": "2018-06-21 01:34:35 +0000", "snippet": "從最基本的鍋碗瓢盆到全自動化的picobrew、brewie，自釀器材千變萬化。在釀酒過程中，就是要把水和麥芽變成麥汁，然後煮沸麥汁，主要處理的就是液體，所以”容器”佔很重要的角色。本篇主要討論常見系統中使用的容器、不同容器變化組成的自釀系統。全自動器材不在討論範圍；全自動器材其實也需要容器，只是為了全自動化有一些特殊的設計。組成家釀系統的主要元件：BK(Boil Kettle)煮沸鍋：可以...", "content": "從最基本的鍋碗瓢盆到全自動化的picobrew、brewie，自釀器材千變萬化。在釀酒過程中，就是要把水和麥芽變成麥汁，然後煮沸麥汁，主要處理的就是液體，所以”容器”佔很重要的角色。本篇主要討論常見系統中使用的容器、不同容器變化組成的自釀系統。全自動器材不在討論範圍；全自動器材其實也需要容器，只是為了全自動化有一些特殊的設計。組成家釀系統的主要元件：BK(Boil Kettle)煮沸鍋：可以加熱煮沸的鍋子。MLT(Mashing Lautering Tun)糖化過濾桶：有過濾裝置、進行糖化的桶子。HLT(Hot Liquid Tun)熱水桶：可以煮熱水的桶子。(0) Boil Kettle只用一個可以煮沸的鍋子，只能用麥芽精。要使用麥芽，必須有能過濾麥芽的裝備，加上一個”濾袋”，就成了 (1).BIAB，加上一個糖化過濾桶，就成了(4).2kettle。(1)BIAB -Brew In a Bag用”袋子”來過濾麥芽。先煮熱水，然後麥芽在袋子中加入進行糖化，糖化結束後取出含麥芽的袋子完成過濾，在同一個鍋子煮沸。是最簡便的系統。只用一個鍋子不能洗糖，效率會稍差。(1a)BIAB w/ SpargeBIAB加一個可以煮洗糖水的鍋子，以便煮洗糖水 。BIAB衍生的系統都可以如此操作，雖然增加一點效率，但需要額外一個鍋子。(2)BIAB recirculatedBIAB加上溫控和pump循環麥汁。在糖化過程中如果為了維持溫度而對麥芽汁加熱，就必須攪拌或循環麥汁，讓溫度平均。在單純BIAB中，就是手動加熱和手動攪拌。在電腦也會煮花生的年代，只需要很簡單的微電腦就可以用來控制加熱溫度。如果加熱由電腦決定，手動攪拌就變得不切實際，所以使用電子溫控的人，幾乎都同時用pump循環麥汁。不過，據說在德國是有不少人用自動攪拌器的。用溫控可以比較省事，用pump（或攪拌）除了平均溫度，糖化速度和效率也比較好。(3)BIAB w/ Basket如果把BIAB的袋子改成一個有假底的”內鍋”，就成了這個系統。這個類別中，最著名的就是Braumester和Grainfather，但Grainfather的設計是需要洗糖的，其實算是3a.3和2最大的不同在於”袋子”和實壁的內鍋，實際的影響是”麥芽床”的形成；Braumeister的循環方向是從下往上，所以在糖化過程中，也不會有麥芽床。麥芽床的作用和問題不在此討論。Braumeister是所謂的反沖式一體鍋，麥汁從底部向上沖，再從內桶上方溢流到外側，Braumeister的加熱器是在內桶外側，內桶底部直接接觸桶底，和示意圖有所出入。(4) 2kettle煮完糖化用的水後，放入糖化過濾桶糖化，然後麥汁回到煮鍋煮沸。不洗糖。糖化過濾桶通常是保溫桶改裝的，比較能維持溫度。再加一個鍋子，就可以變成3-kettle系統，或加上溫控和pump變成5. kettle-RIMS。(5)kettle-RIMS RIMS是Recirculating Infusion Mashing System的縮寫。在這個系統中，水和麥汁在鍋子和糖化桶中循環，鍋子充當RIMS的加熱，所以稱為kettle-RIMS。這個系統最有名的是brutus-20和BrewEasy。個人以為，這個系統和BIAB w/ basket類似，差別只是內桶和外桶的差別。kettle-RIMS相較BIAB w/ basket的優點是麥汁回流回煮沸鍋時比較不會飛濺造成氧化。如果不想把糖化鍋架高，就要使用另一個pump把糖化鍋的麥汁轉到煮鍋中，就是5a的配置。(6) 3-kettle三鍋系統最常見的系統。加上不同的組件，有許多的變化：用pump來轉移麥汁和水：(6a).用RIMS溫控：(7) RIMS用盤管熱交換：(8)HERMS7和8加上pump及溫控，變成9和10.其他BIAC(Brew in a Conical)：類似BIAB，但把不鏽鋼的錐形發酵桶當成BK(煮沸鍋），煮完後從底部把渣排掉後，就可以直接發酵。可以排渣的錐形發酵桶(Conical)是一個重點，如果是用一般的鍋子，煮完後直接當發酵桶，一般稱之為FiAK(Ferment in a kettle)。BIAC和FiAK都有廠商出的產品。" }, { "title": "Autoplay Policy Changed", "url": "/posts/autoplay-policy-changed/", "categories": "BrewManiac", "tags": "", "date": "2018-05-29 02:29:42 +0000", "snippet": "Google changed audio auto play policy, and audio won’t be played without user’s interaction. To follow the new policy, which is also requirement of mobile Safari, a new button is added so that user...", "content": "Google changed audio auto play policy, and audio won’t be played without user’s interaction. To follow the new policy, which is also requirement of mobile Safari, a new button is added so that user interaction can be done to enable audio playing.The new web(HTML/JS) interface is version 4.1, which works with firmware version 4.0." }, { "title": "Temperature and Calibrating iSpindel", "url": "/posts/temperature-and-calibrating-ispindel/", "categories": "BrewPi@ESP8266", "tags": "", "date": "2018-04-02 01:26:48 +0000", "snippet": "This post discusses temperature correction of iSpindel and the values to calibrate it. To be clarified, the meaning of **calibration** of iSpindel is ***deriving a formula*** which can be used to ...", "content": "This post discusses temperature correction of iSpindel and the values to calibrate it. To be clarified, the meaning of **calibration** of iSpindel is ***deriving a formula*** which can be used to calculate **specific gravity** from the ***tilt*** value. To derive the formula, multiple set of ***tilt*** and ***specific gravity reading*** vectors are needed. The definition of **specific gravity** is the *density* of the liquid compared to water. A common tool to measure specific gravity is the hydrometer. Hydrometers are usually calibrated to 20°C(68°F) or 15°C(60°F), and temperature correction is necessary if the temperature of the liquid, wort or beer, is not equal to the calibrating temperature of that specific hydrometer. Some people used to use plato instead of gravity and provide plato readings to calibrate iSpindel, which might have some issues. The reason is that ***the working principle of iSpindel is exactly the same as the hydrometer***, which measures the *density* of liquid instead of sugar content in it. For example, 10° Plato is converted to 1.0400 specific gravity. If the wort is heated or cooled, the plato readings will be the same while the specific gravity *readings* will not. All specific gravity *values* will equal to 1.0400 after temperature correction if no water loss or added. It is simply because the *density* of the wort changes while the ratio of sugar to water doesn’t. Take this example further. If a hydrometer calibrated at 20°C(68°F) is used to measure wort of 10° Plato, the readings will be - 1.027 @ 60°C- 1.035 @ 40°C- 1.040 @ 20°C- 1.041 @ 4°CWill the tilt values in these wort be the same? Obviously, the answer is **no**. The tilt value reflects the floating force which is related to the ***density*** of the liquid. The process and purpose of “calibration of iSpinel” is to get a formula to convert **tilt values** into readings of a hydrometer. Assuming there exists a perfect formula simple *polynomial* **f(x)** that can covert tilt values into readings of the hydrometer, Let f(x)=ax^3+ bx^2+ cx +d . Let tilt values be- 1.027 @ 60°C tilt: 21- 1.035 @ 40°C tilt: 30- 1.040 @ 20°C tilt: 40- 1.041 @ 4°C tilt: 45We will be able to derive the values of *a, b, c,* and *d* by using the 4 pairs of data, (1.027, 21), (1.035, 30), (1.040, 40), (1.041, 50).\\*1 This is an extreme example. Usually we use different wort of different specific gravities under roughly the same temperature, usually around 20°C/68°F. Therefore, using plato instead of specific gravity works fine as well. Moreover, the fermentation temperature is usually kept in a range as small as possible, which misleads us *not* to consider temperature correction. **The effect of ignoring temperature correction will show up when the beer is cold crashed** after end of fermentation, when the specific gravity should not change but iSpindel reports rise of specific gravity because the density of beer rises when the temperature is lowered. **Short summary**: the iSpindel works in the same way as the hydrometer. The best we can get is having a formula that convert tilt values into the exact *readings* of a hydrometer. The readings of hydrometers must be corrected to be real specific gravity , so do the results from iSpindel. The simplest way to calibrate a iSpindel is using the *readings* of a specific hydrometer without temperature correction in the same wort. Afterward, the result of iSpindel should be corrected to the calibrated temperature of that specific hydrometer. Taking the above description into consideration, including temperature corrected results of iSpindel, the “brew and calibrate” feature of BrewPiLess should be done in this way.- The specific gravity of water is not necessarily 1.0, so The reading of the hydrometer in the same water should be entered.- If the temperatures of beer measured by iSpindel and hydrometer differ, the readings used to derive the formula should be corrected to the *temperature of iSpindel*. - The OG might be measured before the wort is cooled to pitching temperature. - During fermentation, the beer should be measured as quick as possible so that the temperature won’t change a lot and the effect of bubbles might be included. De-gasing the beer might not be a good idea. - Usually, brewers care about specific gravity, not the reading of a hydrometer. Therefore, specific gravities will be recorded, and BPL will use corrected value. - For example, if the beer in the fermenter is at 10°C, the same beer measured is at 18°C, and the hydrometer is calibrated at 15°C, then the recorded gravity will be the one corrected to 15°C, and the gravity reading will be corrected to 10°C for iSpindel calibration. If the formula is perfectly derived, we will get an uncorrected gravity reading from iSpindel at 10°C. After corrected the temperature to 15°C, it will be the corrected specific gravity, which should be the same as the reading measured at 18°C and corrected to 15°C.*1: The way to derive the formula is *linear regression* instead of solving the equations. The real relationship is arctangent according the result calculated by a physician in the original iSpindel thread. Given the fact that there are errors in the **provided data**, tilt values and gravity readings, a third order polynomial is good enough. In fact, I usually get decent results by only two sets of data, the OG and tilt value in water. BPL will derive a first order polynomial when only two sets of data is available." }, { "title": "雙乙酰(diacetyl)測試", "url": "/posts/e99b99e4b999e985b0diacetyle6b8ace8a9a6/", "categories": "釀酒筆記", "tags": "", "date": "2018-03-30 01:53:36 +0000", "snippet": "雙乙酰(diacetyl)是酵母發酵過程中的間接副產品，它會讓啤酒有比較”滑順”的口感，如果比較多的話，會有奶油味。雖然有些類型的啤酒允許有少量的雙乙酰(diacetyl)，卻是被大部分人視為缺失。纈胺酸(Valine)是酵母發酵前期產生的amino酸之一，乙酰乳酸(acetolactate)是生纈胺酸(Valine)的中間產物，乙酰乳酸(acetolactate)有可能從酵母體內洩露到啤酒...", "content": "雙乙酰(diacetyl)是酵母發酵過程中的間接副產品，它會讓啤酒有比較”滑順”的口感，如果比較多的話，會有奶油味。雖然有些類型的啤酒允許有少量的雙乙酰(diacetyl)，卻是被大部分人視為缺失。纈胺酸(Valine)是酵母發酵前期產生的amino酸之一，乙酰乳酸(acetolactate)是生纈胺酸(Valine)的中間產物，乙酰乳酸(acetolactate)有可能從酵母體內洩露到啤酒中，如果氧化了就變成雙乙酰(diacetyl)。大部分的發酵副產品，都有機會被酵母重新吸收。通常裝瓶前放久一點或溫度提高一點，就可以讓酵母有機會吸收這些副產品。Pro的釀酒人會確定雙乙酰(diacetyl)和其前期化合物己經大部分被吸收了後，才開始裝瓶，以確保產品中的雙乙酰(diacetyl)含量感覺不出來。商業大廠可能會用比較高貴的色譜儀來檢測，小廠或家釀則可以用以下這個方法來檢測： 用兩個一樣的容器裝啤酒；其中一個是對照組。 用鋁鉑紙蓋住容器；將其中一組泡在70度C左右的熱水中，維持20分鐘。對照組則置於室溫。 將泡熱水的啤酒冷卻到室溫。 嘗嘗看兩組，看有沒有感覺到奶油味或滑順的口感。結果： 兩組都沒有 啤酒己經可以裝瓶了。 只有泡熱水的有 啤酒中含有雙乙酰(diacetyl)的前期產物，在加速老化實驗中變成了雙乙酰(diacetyl)，建議提高發酵溫度多放一陣子。 兩組都有 啤酒中含有雙乙酰(diacetyl)和其前期產物，建議提高發酵溫度多放一陣子。更新：BeerSmith podcast #168 中How to Brew的作者John Palmer針對啤酒酵母和啤酒熟成有詳細的說明。" }, { "title": "Weissbier釀造重點摘要", "url": "/posts/weissbiere98780e980a0e9878de9bb9ee69198e8a681/", "categories": "釀酒筆記", "tags": "", "date": "2018-03-13 02:14:59 +0000", "snippet": "（一）原料 冬麥比夏麥好，因為蛋白質含量比較低，轉換率(Extract)也高一點。 不同程度的軟硬水都可以用。 純淨啤酒法(Reinheitsgebot)規定只有發芽的小麥可以用來釀小麥啤酒（只有發芽的榖物可以用來釀啤酒）。 消費者預期weissbier至少使用50%的小麥芽。早期的小麥啤酒大約是35%，現在Lautering技術進步，有用到高達70%的。 Hefe Weissbi...", "content": "（一）原料 冬麥比夏麥好，因為蛋白質含量比較低，轉換率(Extract)也高一點。 不同程度的軟硬水都可以用。 純淨啤酒法(Reinheitsgebot)規定只有發芽的小麥可以用來釀小麥啤酒（只有發芽的榖物可以用來釀啤酒）。 消費者預期weissbier至少使用50%的小麥芽。早期的小麥啤酒大約是35%，現在Lautering技術進步，有用到高達70%的。 Hefe Weissbier淺色cara malt不超過5%，深色不超過1%。 Weissbier的IBU一般在10-20之間，很少超過18IBU，主要使用德國noble hop當苦花。（二）糖化 decoction是必要的。如果（大）麥芽糖化力夠高而且小麥芽不超過50%，可以用階梯糖化，大麥芽必須是高度修飾的，而小麥芽的可溶性蛋白必須高於40%。但如果要正統的weissbier，至少一次decoction是必要的。 decoction的作用 提供足夠的amino acids 打斷高份子量蛋白質，比較不會造成阻塞 減少冷霧（chill haze） 入麥芽(Mash-in) 35-37度C; 1度C/minute升溫到protein rest。 蛋白質休止(Protein Rest;45-55C) 必須夠長，以提供最大量的amino acid。 麥芽糖休止(Maltose Rest; beta酶；60-65C)可以維持10-30分鐘，要甜一點就短一點。 糖化休止(Saccharification；alpha酶；60-70C)通常是70-72C.（三）典型的糖化行程 Double decoction 37度mash-in 升到47度 緩慢升到50度，停留10-15分 用10分鐘升到53度 ［1st decoction］Thick decoction（2:1)，用一分鐘1度C的速度升到70-72, 停留10-15分；有時候也會在63-65度稍微停留。糖化完成後滾15-20分鐘。不要超過20分，以免顏色變深。 加回麥汁後，溫度升到63-65度，維持10-15分鐘。 ［2nd decoction］ Thick (2.5:1)，和第一次一樣，煮滾時間一樣或少一點 加回麥汁後到70-72C, 直到碘測試確認糖化完成 升到76-78C做Mash-out 總糖化時間3-3.5小時 Single Decoction Mash-in 37度 升到50度；維持20分 [decoction]Thick，升到70-72C, 停留10-15分, 然後在10分鐘內煮滾。煮滾至少 30分 混合，溫度到63-65C, 停留10-20分鐘。 升到70-72C, 直到糖化結束 Mashout 76度C 5-10分。 Single Decoction alternative 先升溫到64C, 停留10-20分後才做decoction （四）煮沸及發酵 煮沸要比一般的久，通常要1.5~2小時;因為weissbier麥汁成份中可凝蛋白質比較高。 德國法律規定，只有大麥芽可以用底層發酵，所以lager小麥啤酒在德國是不合法的。 典型的小麥啤酒80% attenuation 傳統用 open fermentation 4-乙烯基(4-vinylguaiacol/4VG)是丁香味的主要來源；具有POF基因段的酵母可以把ferulic acid轉換成4VG；而ferric acid會在糖化時釋放出來，最佳解離環境是44度C，pH值5.7 接種溫度加發酵溫度等於30度 ；例如接種12度，發酵18度。 weissbier碳酸化程度高，從2.8到高達5.1個氣體數，可以考慮3個氣體數。（五）補充 香蕉(banana)vs丁香(clove)Brew Bavarian Weissier這篇對Weissier也有很詳細的說明，更列出了如何控制香蕉味和丁香味的變因及原理。這裡摘要幾點： 小麥比例高，香蕉味高 初始比重高，香蕉味高 Mash-in溫度直接進入蛋白質休止，香蕉味高 低殘鹼的水，香蕉味高 酵母種類差異 不充氧，香蕉味高 發酵溫度高，香蕉味高 Open fermentation ，香蕉味高&lt;/div&gt;&lt;/div&gt;酵母選擇 Weihenstephan 68 ( W68,WLP300, Wyeast 3068, Zymoferm Z033) 乙酸異戊酯( Isoamyl acetate、香蕉味)高 4VG(丁香味）中等 Zymoferm Z034, Ayinger 可能是W68的突變，類似W68， 但果味更複雜 Weihenstephan 175 (WLP351, Wyeast 3638, Gutmann) 乙酸異戊酯( 香蕉味)高 4VG(丁香味）高 乙酸乙酯(ethyl acetate、泡泡糖風味)高 WLP380 丁香味高 丁酸乙酯（Ethy butyrate、鳳梨味)增加 Wyeast 3333 平衡風味，傾向於丁香多於香蕉。 高沈降性，適合Kristallweizen Wyeast 3056 德式小麥和中性Ale的混合，酯類和酚類都比較低 橫跨德式小麥和美式小麥之間 Danstar Munich Classic(乾酵母） Doemens 479， 也是 W68 很多德式小麥廠成功採用 Mauribrew Weiss(乾酵母） 經典巴划利亞小麥，丁香和香蕉味很平衡。 稍微有點容易產生硫味。 Mangrove Jack’s Bavarian Wheat(乾酵母） 丁香和香蕉味平衡,但風味都不是很明顯。 Fermentis WB-06(乾酵母） 結果好壞不一 Danstar Munich(乾酵母） 結果好壞不一 參考： Classic Beer Style Series: German Wheat Beer; by Eric Warner Brewing Bavarian Weissbier – all you wanted to know" }, { "title": "BrewPi介紹", "url": "/posts/brewpie4bb8be7b4b9/", "categories": "釀酒筆記", "tags": "", "date": "2018-03-11 13:38:04 +0000", "snippet": "BrewPi是很受歡迎的溫控器，也是唯一根據冰箱特性來控制發酵溫度的溫控器。在介紹眾多不同版本和其功能外，先說明一下BrewPi的溫控方式，讓讀者了解BrewPi的優越性。BrewPi的溫控原理大部分的溫控產品，都是用溫差的方式來控溫，簡單地說，設定溫度為18度，溫差為2度，則冰箱會在20度時啓動，到16度時停止。這是簡單又有效的方法，也可以達到不差的效果。但是，這種溫控控制的是冰箱內氣體的...", "content": "BrewPi是很受歡迎的溫控器，也是唯一根據冰箱特性來控制發酵溫度的溫控器。在介紹眾多不同版本和其功能外，先說明一下BrewPi的溫控方式，讓讀者了解BrewPi的優越性。BrewPi的溫控原理大部分的溫控產品，都是用溫差的方式來控溫，簡單地說，設定溫度為18度，溫差為2度，則冰箱會在20度時啓動，到16度時停止。這是簡單又有效的方法，也可以達到不差的效果。但是，這種溫控控制的是冰箱內氣體的溫度，而不是啤酒的溫度。有經驗的釀酒人會說，發酵前幾天可以把設定溫度調低一兩度，以補償因為發酵而產生的熱。這就是控制氣溫會有的問題。BrewPi不一樣的是，它控制的目標是啤酒的溫度，然後用PID來決定冰箱溫度，以達到控制啤酒溫度的效果。而且BrewPi有針對冰箱溫控的特性： 空氣質量小，啤酒質量大；換句話說，空氣升降溫快，啤酒升降溫慢。 用空氣溫度來控制啤酒溫度，很像是用一條橡皮筋來拉車子一樣。理論上用固定的速度來拉，一段很長時間後，車子還可以到達到差不多的速度；但是在剛開始”加速”會很慢，而且如果有突發狀況影響車速時，誤差會比較大。同樣的，控制冰箱內氣溫在一個範圍的做法，在發酵初期或剛開始麥汁溫度不在設定範圍內時，可能會有比較大的誤差。BrewPi是用PID演算法來計算，以決定冰箱內的氣溫應該維持幾度。例如，如果麥汁溫度比設定溫度高很多，PID中的P值大，算出來的冰箱溫度就會很低，BrewPi就會維持冰箱氣溫在低溫，加速麥汁達到設定溫度。相對溫差型的溫控，只會在低於設定溫度一點點就停止，沒效率又造成冰箱頻繁啓動和停止。 冰箱是用冷卻板來降低冰箱內空氣的溫度，在壓縮機停止運轉後，冷卻板的溫度還是比較低，所以溫度還是會再下降一些。 BrewPi會量測停止冷卻（或加熱）後，溫度又下降（或升高）了幾度，這個值會記錄下來，做為下次啓動或停止冷卻的參考。例如說，如果冰箱溫度設定是10度，停止冷卻後，冷卻板的溫度又讓冰箱下降了1度，下一次BrewPi就會在11度時關掉冷卻，讓冷卻板的降溫效應達到預定的溫度。 壓縮機頻繁啓動停止會故障。 很多人聽到PID，直覺反應就是壓縮機會壞掉，這個問題其實很容易解決，BrewPi當然有考慮到這個問題，只要限制最短運作時間和最短停止時間就沒問題了。（如果溫差型溫控器沒有這個限制，開關冰箱門就會造成溫度升高，會造成壓縮機的損害。）以下面幾張圖來說明 BrewPi的運作：紅色是設定的啤酒溫度，綠色是啤酒溫度，橘色是BrewPi算出來冰箱設定溫度，藍色是冰箱內（空氣的）溫度；圖下方淺藍色的條狀就是冰箱啓動的時間。啤酒溫度設定在17度，剛開始麥汁在17.3度，BrewPi決定冰箱溫度在10-14度，在符合壓縮機啓動和停止的條件下，將冰箱溫度維持在相對低一點的溫度，直到啤酒溫度降到低於設定。由於才剛接種，接下來溫度沒有上升，BrewPi雖然調整冰箱設定溫度，但沒有啓動冰箱。一直到啤酒溫度略高於設定溫度了，BrewPi開始調低冰箱設定溫度，最後啓動了冰箱。在這個期間，冰箱溫差很大，但啤酒溫差很小，而且一開始把冰箱設在10-14度，讓啤酒溫度能比較快下降。接下來發酵很穩定地進行，BrewPi也算出了幾次壓縮機停止後的溫差，整個運作都很規律；因為發酵初期產生的熱，冰箱內的平均溫度是比啤酒溫度低的。上圖最後是接種第三天，以冰箱內的溫度中線來看，約比設定溫度低了1.5度；而且可以看出隨著發酵劇烈，溫差也變大。另外要注意的是，如果冰箱內沒有風扇循環，冰箱上下層是有溫差的。所以發酵過程中，不要移動測溫線的位置，以免累積計算出來的值變成無效的值。主發酵結束了，酵母不再產生熱，BrewPi也將冰箱控制在接近啤酒設定溫度。（有一些不規則變化是開冰箱門，所造成的冰箱溫度變化。）從以上說明和例子可以看得出來BrewPi的溫控是很棒的設計。而且，BrewPi也可以設定為”冰箱定溫”(Fridge Constant)模式，就跟一般的溫差控溫一樣了。另外，BrewPi可以同時控制冷卻和加熱，也可以只用冷卻或加熱。*BrewPi的Arduino版到0.2.12 ，官方後來改用SPARK，而衍生的版本幾乎都是移殖自0.2.x。以上的說明是以0.2.x為主，新版0.4.x的演算法略有差異，但大方向及精神是一致的。BrewPi的特異功能除了基本溫控功能，BrewPi還有這些特異功能： 溫度記錄 就如上面的圖；可以看每個點的狀況。 網路連線 自動溫度行程 (Beer Profile) 可以設定例如三天的17度，接下來用一天的時間升到24度，維持24度五天後，用一星期時間降到1度。變溫過程全自動。BrewPi的硬體組成原本的BrewPi採用Arduino加Raspberry PI的架構；Arduino負責溫控，RPI負責溫度記錄、自動溫度行程和網路功能。單獨Arduino就可以執行溫控，加了RPI，才有上面列出來的特異功能。但BrewPi的衍生版本有不同的控制器組合，請看下列的說明。BrewPi的各種版本由於BrewPi有Open Source，所以除了官方出的版本，也有一些衍生的版本，例如，有人自己加入無線數位比重計TILT的記錄。以下列出我所知道的一些版本： BrewPi官方版 最新版把Arduino改成SPARK，也進化成了通用型的溫控，可以用來做糖化的控溫。目前最新的0.4.x只有SAPRK的版本。 Arduino DIY版 0.2.10/0.2.12版；用Arduino可以便宜地DIY一套BrewPi出來。這個版本也有完整加LCD版和I2C LCD版。 中文介紹一 BrewPiLess 用ESP8266取代Arduino和RPI。只需要一個ESP8266,就可以有溫控加上列的特異功能。也多了一些其他的功能，例如和數位無線比重計iSpindel整合、比重記錄、依比重調整溫度、雲端記錄等。 BrewPi-ESP8266 用ESP8266取代Arduino的部分，和RPI的連線改成WiFI。 Fermentrack 用BrewPi-ESP8266同一個作者，Fermentrack取代原本RPI上的軟體，採用新的介面，更方便的安裝方式。支援ESP8266和Arduino版的控制器。最近的進度己經支援TILT。 Raspberry Pi Python 把Arduino的工作搬到RPI，所以只需要RPI，不需要Arduino。可惜目前作者己沒有繼續發展了。BrewPi的缺點 比較貴或需要DIY 官方出的控制器是全功能型的釀酒控制器，以它的功能來說並不算太貴；但如果單以發酵功能來說，是比便宜的溫控器貴了不少。DIY的成本則可以和便宜的溫控器差不多。 需要測量啤酒溫度 雖然可以用”冰箱定溫”，但不使用啤酒溫度就不能發揮BrewPi的全部功能；其中，啤酒溫度行程(Beer Profile)需要使用啤酒溫度。理想的配置是用溫度探針（井）深入啤酒量測；否則，要儘量和空氣隔絕。 Glycol（乙二醇）熱交換控制 Glycol熱交換溫控功能在舊的0.2.x中並沒有，官方出的0.4.x支援完整，其他衍生的版本中目前BrewPiLess有支援，Fermentrack打算支援。其他的版本目前沒有支援。在使用不支援的版本其實也可以用冰箱定溫，但會失去一些功能。 參數調整 預設的參數用在冰箱控溫大都效果很好。少數情況下需要調整例如PID的參數。使用Glycol則需要一些設定。" }, { "title": "pH值的控制(更新)", "url": "/posts/e7b396e58c96phe580bce79a84e68ea7e588b6/", "categories": "釀酒筆記", "tags": "", "date": "2018-01-19 18:35:47 +0000", "snippet": "為了讓酵素正確地發揮作用，糖化的pH值，最好是維持在5.2-5.8之間，偏低比偏高好。而煮沸時的pH值也會影響啤酒的風味： 糖化效率 糖化酶的理想作用pH範圍在5.2~5.8之間。 啤酒的清澈度 理想的煮沸pH值在5.0~5.2之間，在這個範圍的pH值，有利蛋白質凝結沈澱。 酒花異構化 pH值愈高，異構率愈高，但太高的pH值會溶出太多單寧。影響pH值主要是水和麥芽，以及水麥比，和...", "content": "為了讓酵素正確地發揮作用，糖化的pH值，最好是維持在5.2-5.8之間，偏低比偏高好。而煮沸時的pH值也會影響啤酒的風味： 糖化效率 糖化酶的理想作用pH範圍在5.2~5.8之間。 啤酒的清澈度 理想的煮沸pH值在5.0~5.2之間，在這個範圍的pH值，有利蛋白質凝結沈澱。 酒花異構化 pH值愈高，異構率愈高，但太高的pH值會溶出太多單寧。影響pH值主要是水和麥芽，以及水麥比，和水的pH值沒有直接關係。水晶麥和深色麥會降低pH值，而比較低的水麥比，pH值也會比較低。通常情況下，pH值會自然地落在範圍中，最容易出現pH值問題的情況，除了水質問題外，就是用很少或沒有水晶麥的淺色酒，以及不洗糖的高水麥比。pH值的預測頗為複雜，主要和水中礦物質離子（Ca+, Mg+, HCO3-等等）的成份含量有關。調整水質是另一個問題，只調整pH值的話，大都是入麥芽後量測，再來調整。家釀界中，常見調整方式是加這些東西 乳酸 在家釀商店可以買到88% lactic acid，很有效的方法。 乳酸麥芽(saurmalz、acid malt) 傳統的作法是讓麥芽感染乳酸菌，有些是基礎麥芽加上乳酸(3%)，是為了符合純淨啤酒法的變通方式。 磷酸 磷酸比較不會對啤酒風味造成影響，但市面上的磷酸濃度不一，使用上比較不方便。 5.2 Stabilizer 一種磷酸塩產品。由乳酸麥芽就是麥芽加上乳酸，因為直接用乳酸調整會是比較方便的方法；不用調整麥芽配方，也可以在入麥芽後，量測pH值後再決定用量。磷酸據說比較沒有味道，理由是麥芽本身就存在許多磷酸。但是用乳酸會比較接近因為純釀法不得不使用乳酸麥芽的德國啤酒。雖然pH值的計算很複雜，使用88% lactic acid調整pH值卻意外地簡單：要降低0.1 pH值，每1磅麥芽，加入0.11ml的 88% lactic acid。例如，20公升5%的酒通常麥芽用是是10磅（4.54kg），如果量到的pH值是 5.8, 想要降到 5.5, 可以加入 3 x 10 x 0.11 = 3.3 ml的88% lactic acid。建議使用量不超過每磅0.5ml或每公斤1.1ml。如果是為了符合純淨啤酒法而使用acid malt，用量是 要降低0.1 pH值，每1磅麥芽，加入4.1g的乳酸麥芽。用前面例子，就是 3x10x4.1 = 123g。磷酸的使用要先確定濃度，在Bru’n Water中可以計算出需要的份量，依我個人使用的經驗來說，付費版的準確度算不錯。pH值受溫度影響，在糖化溫度量測的pH值比在室溫量的低0.3~0.35；有些pH計會標示「ATC(溫度補償)」，這個修正補償是針對量測計本身對溫度的變化，不是pH值量測本身的差異。書上寫的pH 5.2~5.8指的是「室溫」下量測的溫度，也就是說讓麥汁降到室溫量測的pH值。Fun facts #1: 在BeerSmith Podcast#237中，John Palmer說他有次遇到大師Narziss教授，他向大師請教Plzen的酵酒師是如何控制糖化pH值（影片中約33分的位置），因為Plzen的水來自山上融化的雪水，幾乎沒有礦物質，Pilsner又是很淺色的啤酒，通常pH值會比理想的稍高，結果Narziss教授回答說：他們會加鹽。我的理解是：在Josef Groll創造出Pilsner Urquell時代，”Burtonized”(也就是加很多硫酸鈣讓水質變成和Burton on Trent的水質一樣）這個技術雖然新，但已經有很多人知道而且會用了，考慮到Pilsner麥芽的創造是Josef Groll從英國淺色麥芽技術學來的，Josef Groll會知道並應用Brutonized的技術，這件事一點也不奇怪。Fun facts #2: Orval酒廠的水是殘鹼值偏高的，1993開始他們把煮沸時的pH值調降到5.0~5.2，結果有些人（包括Michael Jackson）就察覺到苦味變得比較平順柔和。Reference: Mash pH and Why It Matters for All Grain Beer Brewing The effect of brewing water and grist composition on the pH of the mash Beer Brewing Water with John Palmer- BeerSmith Podcast #237 Water Knowledge in Bru’n Water" }, { "title": "New ESP8266/Arduino framework, to update or not to update?", "url": "/posts/new-esp8266arduino-framework-to-update-or-not-to-update/", "categories": "BrewPi@ESP8266", "tags": "", "date": "2018-01-18 07:38:24 +0000", "snippet": "The recently released ESP8266 framework has caused some issues. The first issue is compile errors of ESPAsyncTCP. To solve this error, you can simply force to use old version of the framework, by e...", "content": "The recently released ESP8266 framework has caused some issues. The first issue is compile errors of ESPAsyncTCP. To solve this error, you can simply force to use old version of the framework, by editing platformio.ini```platform = espressif8266@~1.5```I do migrate to latest ESPAsyncTCP/ESPAsyncWebServer with latest framework(1.6), but that is the real issue. The new framework is about 26.5k bigger than previous release 1.5, and the image built with 1.6 framework will make OTA impossible.The current flash layout of ESP8266 use 1M for program, or sketch. To support OTA, the sketch size must be smaller than half of the total program space. The image of default BPL is about 500k, so using latest 1.6 framework breaks the limit.The latest ESPAsyncTCP/ESPAsyncWebServer libraries work pretty with latest 1.6 framework but seem to have some issues with 1.5 framework. The README.MD of ESPAsyncWebServer states that latest framework might be necessary, and I encountered some no-response issue when using latest libraries with old 1.5 framework.(BTW, one extra advantage of latest libraries with latest framework is that WebSocket is pretty solid, compared to the result I had a few months ago. My other Project, BrewManiacEx does benefit from WebSocket because of the short latency of uplink data transmission. BrewPiLess, on the other hand, does not gain much from that.)Staying with old 1.5 framework is a simple solution but I am not sure if it is a good idea.To upgrade to latest 1.6 framework, something will have to be removed. It’s unlikely that I can squeeze 25k or even 10k program space for it. A few solutions I come up: Remove OTA update support It’s unlikely that I would do this. Opening project boxes to flash it is PITA. Remove embedded files. Manually uploading the HTML file will be necessary. Expanding the sketch space to 1.5M or 2M. IMO, this might be the best solution. 2M file space is good for 5~6 months. The drawbacks will be Editing of flash configuration file needed. 2M file system is not built-in standard configuration while 1M file system is. However, 3M for sketch is a waste. Upgrading to latest version might require formatting of SPIFFS. Reference: How to add 4M2M layout in PlatformIO How OTA works Flash Layout of ESP8266 PlatformIO Flash layout configuration 4M2M configuration" }, { "title": "LoDO低溶氧釀造", "url": "/posts/lodoe4bd8ee6bab6e6b0a7e98780e980a0/", "categories": "釀酒筆記", "tags": "", "date": "2018-01-14 17:54:58 +0000", "snippet": "在啤酒釀造過程中避免氧化不是什麼新的想法，但把這個想法推到一個極致，是開始於2016年4月在德國釀酒論壇發表的這一篇文件：Brewing Bavarian Helles: Adapting to Low Oxygen Brewing。這份文件中主張，要做出某些德國啤酒真正風味的秘訣在於低溶氧，文件中主張，在還沒開始接種酵母前，氧氣就會氧化麥汁，所以要追求整個過程中最少氧氣溶入麥汁；目標是低於...", "content": "在啤酒釀造過程中避免氧化不是什麼新的想法，但把這個想法推到一個極致，是開始於2016年4月在德國釀酒論壇發表的這一篇文件：Brewing Bavarian Helles: Adapting to Low Oxygen Brewing。這份文件中主張，要做出某些德國啤酒真正風味的秘訣在於低溶氧，文件中主張，在還沒開始接種酵母前，氧氣就會氧化麥汁，所以要追求整個過程中最少氧氣溶入麥汁；目標是低於1ppm。這個主張後就是Low Dissolved Oxygen(LoDO)。1ppm的溶氧是什麼概念呢？這邊有些整理好的資料中有些數據： 冷的自來水或RO出來的水溶氧大約是 8-12ppm。 如果聞得到麥汁中麥香，代表這些香氣不會出現在最終的啤酒中。LoDO的目標就是要保留這些香氣。 在一般的糖化溫度63-71度C，可溶氧量是4-5ppm 先煮沸釀酒用的水並迅速冷卻有可降低溶氧量到0.5ppm。 正確的入麥芽會導入1-3ppm HSO（熱端氧化）在家釀的範圍中比商業釀酒還容易發生，因為液面對體積的比例上，家釀通常大很多。 HSO發生的高峰在入麥芽的30秒到1分鐘。 轉桶到keg會導入0.8-1ppm的溶氧。具體的做法也有整理： 去除糖化用水的溶氧。先煮沸五分鐘，然後用不鏽鋼冷卻器迅速冷卻。 加入Sodium Metabisulfite(SMB)做為吸收氧氣的方法。多餘的硫會被酵母消耗掉，殘留的硫會和商業德國啤酒的10-15ppm差不多。 使用RO水，加入產生30-50ppm鈣的calcium chlorde。因為會加入SMB，不用RO水很難計算礦物質的含量。 文章建講糖化用水加內SMB量為100mg/l，洗糖水為10-15mg/l 不洗糖的話，SMB可以減少為55mg/l 把水加入麥芽。或者麥芽加入水中時要很小心，避免飛濺，攪拌要很輕柔。 如果有使用pump，要檢查所有接頭有沒有氣密。 用pump移動麥汁的話，速度最好在3-4l/m(1 gpm) 不洗糖比較好 不要用銅製品，用不鏽鋼 糖化時用蓋子減少麥汁上方的空氣 30%的苦花用FWH 煮沸60分，不要煮太滾。微滾。 儘速冷卻，不要飛濺。 冷渣可以進入發酵桶，但熱渣和酒花不行。 儘快接種；接種後再打氣（打氧） 在離FG 0.004(1plato)時轉桶；需要採用FFT以預測FG Spunding 使用secondary fermenter當servering keg，避免轉桶引入氧氣 如果要裝瓶，用帶（等）壓裝瓶我看完的感覺是：在麥汁旁呼吸太用力可能就會導入超過1ppm的氧氣了。那麼實際上的結果如何？brulosophy.com做了一個實驗，結果是38個人中有25個人可以分辦，而分辦得出來的25人中，有15個人表示比較喜歡非LoDO的版本。有趣的是，John Palmer被問到對LoDO的看法，他表示LoDO釀出來的是另外一種啤酒(影片，3分鐘開始）。在Brulosophy.com的實驗中，格主表示加入SMB導致了明顯的硫味。另一個可以用來去除溶氧是Brewtan-B。Brewtan-B是Wyeast的產品，是一種從植物提煉出來的單寧酸產品，據說可以延長產品的保鮮期。以前只賣給釀酒廠，沒有零售給家釀客戶，最近開始有少數網售開始賣小量的產品給家釀用。有另一篇討論LoDO的部落文，有些看法蠻中肯的；他認為LoDO的大部分做法和理論都是對的，但是部份LoDO支持者會說，”如果你照著做，就會知道它的好；如果你沒有發現它的好處，那就是你做錯了”，這種論調就和跟某些宗教說法一樣了：”如果你很虔誠，你就會感受到，如果你沒有感覺，那就是你不夠虔誠”。參考資料： https://www.winning-homebrew.com/low-oxygen-brewing.html http://braukaiser.com/blog/blog/2016/04/30/low-oxygen-brewing/ http://www.lowoxygenbrewing.com http://brulosophy.com/2017/04/10/the-lodo-effect-evaluating-the-low-oxygen-brewing-method-exbeeriment-results/ Brewtan-B的資料和討論： https://www.homebrewersassociation.org/forum/index.php?topic=26830.0" }, { "title": "壓力發酵與Spunding", "url": "/posts/e5a393e58a9be799bce985b5e88887spunding/", "categories": "釀酒筆記", "tags": "", "date": "2018-01-14 17:46:05 +0000", "snippet": "Spunding（應該）是源自德文Spundungsapparat，是把發酵產生的co2留在啤酒中，自然充氣（碳酸化）的一種方法。如果對最終的FG值預估正確，發酵進行中的比重量測也很精準，只要在適當殘留比重的時候，把發酵桶密封起來就可以了。實務上為了監控及安全起見，會有一個可以洩壓的裝置叫Spunding Valve，設定好壓力，如果超過了這個壓力，CO2就會被排出；可以維持正確的壓力。使用...", "content": "Spunding（應該）是源自德文Spundungsapparat，是把發酵產生的co2留在啤酒中，自然充氣（碳酸化）的一種方法。如果對最終的FG值預估正確，發酵進行中的比重量測也很精準，只要在適當殘留比重的時候，把發酵桶密封起來就可以了。實務上為了監控及安全起見，會有一個可以洩壓的裝置叫Spunding Valve，設定好壓力，如果超過了這個壓力，CO2就會被排出；可以維持正確的壓力。使用Spunding Valve就不需要在很精準的FG預估，可以在差0.004~0.008之間就開始蓄壓。Spunding或Spundungsapparat符合德國的啤酒純淨法，不需要添加任何東西（包括CO2)，而且發酵結束也同時完成充氣碳酸化。商業釀酒很多都採用這種方法。一般家釀用的Spunding Valve並不複雜，就是一個洩壓閥，通常再加上壓力表用以監控及正確調整壓力。Spunding真正的困難在於：需要一個耐壓的發酵桶。市面上有耐壓的發酵桶（通常稱為unitank）價格昂貴，比較便宜的作法就是用keg來發酵。可以做Spunding，也就意謂著可以做壓力發酵；壓力發酵是發酵一開始就使用Spunding Valve，酵母一旦開始發酵，產生的CO2很快就會讓壓力達到飽合，有了Spunding valve，多餘的co2就會排出，會維持一在設定的壓力，沒有爆桶的風險。壓力發酵據說有著以下幾個好處： 抑制酵母的繁殖；發酵過程會比較溫和，發酵桶的頭部空間也就可以比較小。 抑制酯類及高級醇的產生；在比較高的溫度發酵也不會有不好的風味；比較高溫通常發酵速度也就比較快。 啤酒的香氣比較不會隨著co2跑掉。 Spundungsapparat的效果；自然充氣。壓力發酵也是有缺點： 酵母繁殖較少，回收酵母不利。 回收酵母時，如果讓壓力一下子降低，可能會造成酵母的死亡。 某些酵母對壓力有不良反應。商業釀酒據說採用壓力發酵的不在少數；個人去參觀Stone Brewing時，確認他們是採用壓力發酵。壓力發酵要用多大的壓力？我沒有查到確切的答案，或許不同的酵母和不同的啤酒類型對壓力的反應會有所不同，所以就像發酵溫度一樣，沒有固定的標準答案。但有些原則是大部分人認同的： 不要一開始就用很高（例如30psi）的壓力，會影響酵母繁殖。 比較多人採用的值大約在7-15psi之間。 15psi在Ale適合的溫度碳酸化程度有點不足，所以可以在發酵最後配合想要的碳酸化程度調高psi。Kolsh書中提到壓力發酵的部分： p153. 通常(商業釀酒的)大發酵桶設在8~10psi p154. Budding開始後，調到4.2psi，一旦到了50%的發酵程度(attenuation)，調到25psi在這篇中Dry Hopping Under Pressure，作者列出了一些實驗結果和數字，並且實驗在高溫（78F/25.5C）高壓 (20psi）發酵釀造NEIPA；據作者所言，壓力發酵結果的酯類和高級醇真的有比較低，甚至比低溫發酵的還低，但是酒花的香氣反而不如低溫沒有壓力的來得好。BeerSmith作者的podcast#163中找了white lab老闆、Yeast作者的Chris White和Blichmann的John Blichmann來討論壓力發酵，很值得一聽：https://youtu.be/R9V5MzB7auM個人心得/感想：酯類等酵母的副產品主要產生在發酵的前期（一般來說前三天），所以在發酵第三天後才開始使用「壓力」發酵，理論上不會影響風味；但是，本文中所提的「壓力發酵」是用壓力讓酵母不產生過多的酯類和高級醇，如果第三天才開始，個人以為算是「自然充氣」，而不是「壓力發酵」。即使不討論名詞的定義，前三天沒有壓力下的酵母己經決定了啤酒的風味了，第三天後再加壓也沒有多大的作用（除了自然充氣）。壓力發酵對減少酯類和高級醇在眾多文獻和實驗中已經得到了證實。然而，值得注意的是，BeerSmith的podcast中，Chris White的說法是會得到「不同的酯類組合（ester profile)」；換句話說：壓力並不是可以「中和」高溫的影響，因為「高壓高溫」和「低（無）壓低溫」得到的東西是不一樣的（這點和個人經驗及在網路上看到的他人經驗一致）。正如溫度高低不同可以產生不同風味的啤酒，不同的壓力也是。把「壓力」視為一個可以影響酵母發酵的控制因素；就像操作溫度一樣，如何操作則視目的而定，沒有優劣之分。個人以為在NEIPA的操作中，壓力讓酯類減少，也就減少了”水果”的風味，而NEIPA通常追求的就是熱帶水果的風味，NEIPA使用的酒花也都是強調柑橘和熱帶水果風味的酒花，當酯類減少，水果風味變弱，或許會有酒花風味變弱的錯覺。事實上在Chris White的實驗中，高壓之下，IBU值是比較高的。參考資料： Brulosophy.com: Under Pressure:the Impact of High PSI fermentation Build a Spunding Valve! How and Why. HomeBrewTalk.com: Closed-system pressurized fermentation technique! Dry Hopping Under Pressure" }, { "title": "快速發酵Lager及高溫發酵", "url": "/posts/e5bfabe9809fe799bce985b5lagere58f8ae9ab98e6baabe799bce985b5/", "categories": "釀酒筆記", "tags": "", "date": "2018-01-13 22:02:51 +0000", "snippet": "一般來說，Lager發酵溫度低，發酵時間相對比較長了，為了縮短Lager的發酵時間，有人發展出了一套方法： 一開始在10°-13°C溫度區間發酵，直到50%左右。 用 5°F(2.8°C)/12小時的速度昇溫到18°C-20°C 維持4-10天，直到比重不再變化 5-8°F(2.8-4.4°C)/12小時的速度，降低溫度到-1°C~0°C；也可以直接設定冰箱的溫度讓啤酒溫度自然下降 ...", "content": "一般來說，Lager發酵溫度低，發酵時間相對比較長了，為了縮短Lager的發酵時間，有人發展出了一套方法： 一開始在10°-13°C溫度區間發酵，直到50%左右。 用 5°F(2.8°C)/12小時的速度昇溫到18°C-20°C 維持4-10天，直到比重不再變化 5-8°F(2.8-4.4°C)/12小時的速度，降低溫度到-1°C~0°C；也可以直接設定冰箱的溫度讓啤酒溫度自然下降 完成這個方法會加速後半段，感覺上是提前執行D-REST的時間；也是Lager發酵模式的其中一種。理論上啤酒風味的決定在發酵的前期，這個方法應該不會影響太大，但實際上Brulosophy針對這個作法作了實驗，結果卻是有影響的。如果直接用相對比較高溫來發酵lager呢？Brulosophy.com針對發酵溫度做了多次的實驗，我把針對Lager酵母的部分整理出來；結果請自行解讀：[table id=1 /]在HomeBrewTalk.com有一個討論串專門在討論(相對)高溫發酵Lager的：HBT。這個討論串中的共識是有的酵母可以，有的不適合。其中以W34/70最受歡迎。有趣的是W34/70的技術文件中寫的發酵溫度是9-22°C,理想溫度是12-15°C。Lager酵母基因定序後被發現是Saccaromyces Cerevisiae和Saccharomyces Eubayanus兩種混種而成。(Ale酵母是屬於Saccaromyces Cerevisiae，但Saccaromyces Cerevisiae不全部是Ale酵母，不過Lager酵母是Ale酵母混種的可能性很高。）Lager酵母又可以分成兩大群，Saaz和Frohberg。Saaz群的沈絮比較好，產生比較少的酯類，比較耐低溫，但高溫比較不好，而且Saaz類對麥芽三糖處理能力不佳、或者無法處理能力。Frohberg保留了比較多S.Cerevisiae（可能是Ale酵母）的DNA，高溫表現相對好。Weihenstephan WS34/70是Frohberg群中被廣泛使用的酵母。參考： http://braukaiser.com/wiki/index.php/Fermenting_Lagers http://brulosophy.com/methods/lager-method/ http://brulosophy.com/2016/09/19/lager-methods-pt-1-traditional-vs-quick-fermentation-exbeeriment-results/ http://www.fermentis.com/wp-content/uploads/2015/12/Saflager-W-3470-en.pdf" }, { "title": "Fast Ferment Test快速發酵測試", "url": "/posts/fast-ferment-teste5bfabe9809fe799bce985b5e6b8ace8a9a6/", "categories": "釀酒筆記", "tags": "FFT, Homebrew, 家釀, 自釀", "date": "2018-01-13 20:59:04 +0000", "snippet": "FG是釀酒過程中很關鍵又相對難以掌握的值；因為影響FG的因子有許多 麥汁的組成：不可發酵糖的比例 糖化溫度、時間 特殊麥芽比例 酵母的發酵能力 發酵的溫度 充氧的多寡 酵母的活性、數量 FFT（FFT也可以是Forced Fermentation Test）的做法： 取出同部分的麥汁，數量要略大於可...", "content": "FG是釀酒過程中很關鍵又相對難以掌握的值；因為影響FG的因子有許多 麥汁的組成：不可發酵糖的比例 糖化溫度、時間 特殊麥芽比例 酵母的發酵能力 發酵的溫度 充氧的多寡 酵母的活性、數量 FFT（FFT也可以是Forced Fermentation Test）的做法： 取出同部分的麥汁，數量要略大於可以量比重；通常是200~250ml 加入大量的酵母(依比例 5-10倍） 用攪拌器當成擴培一樣處理由於攪拌器和大量的酵母，發酵會很快就結束，就可以拿出來量比重。啤酒酵母比較貴，用麵包酵母也可以，因為麵包酵母和啤酒酵母對糖的處理能力接近。與其說FFT是一種用來預測FG的方法，不如說是用來判斷麥汁可發酵性的方法。因為發酵的條件不同，發酵的結果會有一些差異。甚至如果不是採用同種酵母，結果可能差異更大。所以在家釀的範圍內，不是很多人會這麼做；如果在商業釀酒的條件下，一包乾酵母或從酵母庫取得相對大量的酵母量，成本不高。以下是我曾經做過的FFT實驗；麥汁的OG是1.072: 左邊：加入5g左右麵包酵母；採偶爾搖晃；目測40小時左右發酵結束。FG：1.016 右邊：接種後12小時取出，未添加酵母；用攪拌器加速發酵；目測72小時後結束。FG1.011 主麥汁：第三天量右邊比重時比重為1.040;最終在第10天達到FG 1.011參考；http://braukaiser.com/wiki/index.php?title=Fast_Ferment_Test" }, { "title": "Poorman&#039;s Glycol system", "url": "/posts/poormans-glycol-system/", "categories": "BrewPi@ESP8266", "tags": "", "date": "2017-12-23 02:59:57 +0000", "snippet": "A real glycol chiller is expensive, and DIY glycol chiller from an air conditioner is kind of too hardcore for people like me. Therefore, I am using a re-purposed fridge as “glycol” chiller. The ai...", "content": "A real glycol chiller is expensive, and DIY glycol chiller from an air conditioner is kind of too hardcore for people like me. Therefore, I am using a re-purposed fridge as “glycol” chiller. The air is bad heat conductor, so I ended up using a bucket of water and bending the plate into water. It works really well except that the water sometimes gets frozen because I use no glycol but plain water. One thing I also observe is that the beer temperature seem to be more stable if the temperature of “glycol” is not too cold.In a nutshell, a temperature controller is necessary to control the poorman’s glycol chiller.I have a spare BPL, but somehow I don’t want to use it. The BPL I am using has a two way relay board, and I am using only one for cooling, controlling the pump. The temperature of “glycol” is monitored by the “room” sensor. Simple hysteresis temperature control with timed constraints to protect the compressor would do the job.I am not going to make it “official”, but I would love to share if anyone wants to try it.The option is not enabled by default, so you have to build it by yourself.build_flags = -Wl,-Tesp8266.flash.4m.ld -DEanbleParasiteTempControl=trueYou will need a HTML file for setting. It is “paractrl.htm” in “extra” folder at Github. Manually upload it to BPL, and open it. The setting should be straightforward. Enable Parasite Temperature Control Cooling PIN /Inverted. Only coolingPin, heatingPin, and doorPin can be used. They are D5, D7 and D4 in default configuration. If they are used by BrewPi temperature control, the options of PINs used will be disabled. You CAN mess it by selecting the PIN and later assigning it for cooling or heating in Device Setup page. Don’t do that. Target Temperature The cooling will stop when the temperature is equal or lower than this value. Triggering Temperature The cooling will be started when the temperature is greater than this value. This value should be at least 0.5 higher than “Target Temperature” Minimum Cooling Time Must be greater than or equal to180 (seconds). Minimum Idle Time Must be greater than or equal to180 (seconds).My setup:The water level is higher when in use. (I was pumping out the water.) Before applying the parasite temperature control, the water might get frozen and clog the tubing." }, { "title": "Sharing BPL log online", "url": "/posts/sharing-bpl-log-online/", "categories": "BrewPi@ESP8266", "tags": "", "date": "2017-12-17 18:12:03 +0000", "snippet": "Here is a new easy way to share BrewPiLess logs over the internet, on-line.Step 0: Hosting on GitHub.If you have your own host, it should be easy and you can skip this part. Using GitHub hosting se...", "content": "Here is a new easy way to share BrewPiLess logs over the internet, on-line.Step 0: Hosting on GitHub.If you have your own host, it should be easy and you can skip this part. Using GitHub hosting service is simple and easy. I would suggest you too google on this subject to find better illustration and description.Step 2: Get the log viewerGet the “BPLog.htm” file from my GitHub:https://github.com/vitotai/vitotai.github.ioDon’t forget to get the “raw” version.Step 3: Upload the file and logs to shareThe logs will be put at the same place as the BPLog.htm file. Subdirectories can be used. I put my log in a subdirectory, named “log”.Step 4: Test the shared link.First open the log viewer page on your browser. The url should be something likehttps://[your_name].github.io/BPLog.htmIf you can see the empty log chart page. You are almost done.Step 5: Create the shared link.Append log name after the URL above in this formathttps://your_name.github.io/BPLog.htm?log=[Your log name]If the log is put in a subdirectory, replace “/” by “%2F”. You will need to uriEncodeComponent special characters. If you don’t understand previous sentence, please don’t use special characters in the path and log file names.eg. A log name “nottingham.035.20171114” in subfolder “log”https://vitotai.github.io/BPLog.htm?log=log%2Fnottingham.035.20171114To put the chart inside a page, you can use “iframe”. For example:&lt;iframe class=\"chart-frame\" src=\"http://www.vito.tw/brewlogs/BPLog.htm?log=log%2Fnottingham.035.20171114\"&gt;The result should be:Please note that there are some security concerns about iframe when the source is different from the page where the iframe resides.# Step 6: Optional with selection rangeSelect the desired range, right click mouse on the chart. A menu of “Open Selection” will popup, click that item to open a new window that will zoom to the selection range on open." }, { "title": "BrewPiLess release v2.4", "url": "/posts/brewpiless-release-v2-4/", "categories": "BrewPi@ESP8266", "tags": "", "date": "2017-11-10 00:05:54 +0000", "snippet": "BrewPiLess release v2.4 Brew and calibrate iSpindel Use iSpindel temperature reading as Beer Sensor. Display tilt value of iSpindel. This is part of the “Brew and calibrate” functions. Enhance...", "content": "BrewPiLess release v2.4 Brew and calibrate iSpindel Use iSpindel temperature reading as Beer Sensor. Display tilt value of iSpindel. This is part of the “Brew and calibrate” functions. Enhance SSE re-establishment Default configurable minimum cooling/heating time &amp; back-up sensor. (That is, Glycol supported.) HTTP Port settings in Config page. ## Please note: you will have to run Device Setup to setup temperature sensors and PIN usages if you are upgrading from old version other than glycol option.I really like the new “Brew and Calibrate” feature. My iSpindel works great. However, every time I open the cap to charge it, the stuff inside moves a little, and the readings will drift a little bit. The result of using this method is better than that of calibrated one.BTW, the working principle of iSpindel is exactly the same as a hydrometer. Therefore, temperature correction is necessary.In the following chart, Purple line is temperature-corrected reading and green line is non corrected readings. Without correction, the gravity reading rises when the temperature drops. The corrected reading also rises a little bit, though.The gravity readings used to calibrate iSpindel should be NOT temperature-corrected. The way of deriving gravity values from TILT values is using a function(formula) having a single parameter, the tilt value. We assume that there exists such a function exists and try to find one that is approximate to the perfect one.The physics principle of iSpindel is the same as a floating hydrometer. A hydrometer will show different values for wort at different temperatures.For example, wort of 2.6% BRIX will be measured as 1.010@20C, 1.011@4C, and 1.009@24C. The Specific Gravity, which is the value after temperature correction applied, will all be 1.010, calibration to 20C.The TILT values should be different in the same wort at different temperatures because the density of the liquid is different. Let the TILT values of 1.009, 1.010, 1.011 be x1, x2, x3. It’s not possible to have a function, f(x), so that f(x1) = (fx2) = f(x3) = 1010. Obviously, finding a function, f(x), so that f(x1) = 1.009, f(x2) = 1.010, f(x3) = 1.011 is possible. Applying the temperature correction, the correct Specific Gravity can be derived." }, { "title": "BrewPiLess for Glycol", "url": "/posts/brewpiless-for-glycol/", "categories": "BrewPi@ESP8266", "tags": "", "date": "2017-08-14 00:44:45 +0000", "snippet": "BrewPi is derived from BrewPi v0.2.x, which is designed for fermentation chambers made by fridges. The latest BrewPi v0.4.x has evolved to be a general temperature control unit. The code is very di...", "content": "BrewPi is derived from BrewPi v0.2.x, which is designed for fermentation chambers made by fridges. The latest BrewPi v0.4.x has evolved to be a general temperature control unit. The code is very different from v0.2.x, and porting v0.4.x might not be an easy job. Instead, I implemented two main features that might make glycol possible: fallback sensor and adjustable minimum time.In addition to using binary for glycol or building with “EnableGlycolSupport” defined, there are setups and settings that must be tweaked.Setup Don’t use Fridge Sensor. The “fallback” feature will use the reading from Beer Sensor as Fridge reading. (optional) Use second sensor as Room Sensor to monitor glycol temperature. Beer Constant or Beer Profile mode is preferred.Settings minimum times: including minCoolTime, minCoolIdleTime, minHeatTime, minHeatIdleTime,and deadTime All except deadTime are self-explanatory. deadTime defines the minimum idle time between heating and cooling, and the waiting time at power-up. 10 seconds seems to be good for all of the values. idleRangeH &amp; idleRangeL The values define the temperature range to stay in idle. That is, no action will be performed if the fridge temperature(from Beer Sensor) stays in this range. The default values are 1.0, so it will start cooling when the temperature reaches 21 degree if the set temperature is 20. maxHeatTimeForEst &amp; maxCoolTimeForEst After cooling or heating, the algorithm expects the temperature to go lower or higher. Usually the temperature won’t go too far in glycol setup. Therefore, set a smaller value for these two, so that it won’t wait too long for detecting peaks. PID settings. Kp, Ki, Kd If all of them are set to zero, the FridgeSet will be equal to BeerSet. (optional) filter settings: fridgeFastFilt, fridgeSlowFilt, fridgeSlopeFilt, beerFastFilt, beerSlowFilt, beerSlopeFilt Even the data is from the same sensor, the temperature readings of beer and fridge sometimes differ. It is because that they use different filters. The temperature of fridge is volatile, while the beer temperature changes slowly. If you want them to be strictly the same, the filter parameters should be set to same same.After setting, you can use “c” (single lower case c) to read back the setting for verification.My testingThis is my initial test by filling 6 gallons of water in my newly purchased Spike CF10 with coil.My test was conducted with a cooler with frozen PET bottles. The room temperature is the temperature of water in the cooler.I set all minimum times to 10 seconds, idleRangeH to 0.1. maxCoolTimeForEst to 30 seconds. PID parameters are left untouched. The result seems acceptable except that more PET bottles (or, a glycol chiller) are needed." }, { "title": "釀酒中水的計算", "url": "/posts/e98780e98592e4b8ade6b0b4e79a84e8a888e7ae97/", "categories": "釀酒筆記", "tags": "", "date": "2017-07-29 17:40:39 +0000", "snippet": "更新：我寫了一個自釀小幫手工具網頁，可以用來計算水量、比重、效率等，可以試著玩玩看。計算水的用量，有一些參數要考慮：(由於我參考的資料都用美制，所以下列都用gallon，採用公制請自行換算）麥芽吸水率 0.125 gal/lb 或 1.04 L/kg，不同的麥芽會有不同的結果，但這個數字應該是可以通用。比起來，最後有沒有讓麥芽中的水全部滴出來或擠出來，造成的差距可能會比較大。酒花熱渣等在 2...", "content": "更新：我寫了一個自釀小幫手工具網頁，可以用來計算水量、比重、效率等，可以試著玩玩看。計算水的用量，有一些參數要考慮：(由於我參考的資料都用美制，所以下列都用gallon，採用公制請自行換算）麥芽吸水率 0.125 gal/lb 或 1.04 L/kg，不同的麥芽會有不同的結果，但這個數字應該是可以通用。比起來，最後有沒有讓麥芽中的水全部滴出來或擠出來，造成的差距可能會比較大。酒花熱渣等在 20L(5 gal)批次中通常在在0.5L左右，酒花用得多，就更多。煮沸鍋死角，視器材而定，大部分20L(5 gal)的可能在1L~2L之間。也就是煮完後最後沒辦法進入發酵桶的量。糖化鍋死角，沒辦法進入煮沸鍋的水量。視器材而定。如果是BIAB，就沒有這個值。蒸發量可大可小，看火力大小及鍋子的形狀，業界據說是控制在5%，家釀我看到的有人說差不多是1 gallon/hr，實際上也有人只有0.5gallon~0.8gallon，也有到1.5 gallon/hr的。麥汁冷縮，一般是4%，是水在100度及20度的體積變化，5gal批次約0.8qt。除非你是直使用熱水，這個數值對水量沒有影響，但是在釀造過程中有記錄或調整水的話就需要考慮。發酵桶的損失：目標5gal的產品，應該要有5.5gal左右進發酵桶，因為發酵過程中會有水的蒸發、酵母或熱渣沈澱、取樣量比重的損失等。舉例說明：5.5 gal進發酵桶，10lb的麥芽，”普通”用量的酒花，BIAB，需要的水：5.5 gal + 麥芽吸水 0.125 gal/lb x 10 lb + 酒花熱渣 0.125 gal(0.5qt) + 器材死角 0.375 gal(1.5qt) + 蒸發量 1 gal = 8.25 gal從這個例子可以看到，麥芽吸水和蒸發量佔很大的損失比例，而且是剛開始使用器材時最難控制的。如果要達到預期的水量，就需要在煮沸前和煮沸的最後完成前調整。麥芽吸水量在糖化完成後，全部的麥汁進入煮沸鍋就馬上知道了，如果有另外的糖化鍋，也就是多了糖化鍋的死角損失，那麼煮沸前的水量就是全部水量減去麥芽吸水＋糖化鍋死角。所以煮沸前量一下水量，就可以知道要這些數值；正確的調整也必考慮比重，在此先不談。要提醒的是，這時候水的體積會比冷卻時大，所以要考慮麥汁冷縮的比例。至於蒸發量要不要算冷縮，其實我也不清楚，總之這些數值都是估算，會和實際有落差。煮沸完成前（可能是在5到10分鐘前），是最後調整的機會，這時候真的要考慮冷縮的量。這個補水的動作基上只是補水蒸發太多的量。很多人第一次釀酒，煮完後常常會發現，最後的麥汁比預期的少。比預期多的比較少見，原因是大部份的書都會說滾開時要滾大一點，以利DMS減少，另外，看到大滾比控制在微滾容易直覺得多了。最終麥汁量和預期不符的另一個原因是，初學者第一次釀很多是用配方包，然後配方包也通常有建議用的水量，問題是每個人的器材不同，結果也就相去甚遠。要注意到的是，需要調整的是比重，不是麥汁的多少；目標是比重達標，不是麥汁的量達標。所以水的計算在開始釀造前估算，調整則是根據比重來調整。幸運的是，糖不會蒸發，所以煮沸前就可以調整好最後的比重，然後，如果蒸發太多，直接調整要算好的目標就行了。水的調整用點數的概念來算很容易，點數指的是比重的點數，例如1.012=12點。假設煮沸前點數是a、麥汁量是V，目標比重是g，那麼最後的麥汁量是 a/g* V 。例： 煮沸前 1.040 5L，目標1.050, 最後麥汁量＝ 40/50 * 5 = 4 L。如果剛好蒸發1L，比重就會剛好是1.050。如果預計的蒸發量比1L多，那就要加水；如果預計的蒸發量比1L少，那就要兩個選擇：多蒸發一些（加大火力或延長煮沸時間）或加DME提高比重。如果要煮沸中途或末段加水，要考慮先把添加的水加熱，以免水加入後麥汁溫度降低。" }, { "title": "糖化效率", "url": "/posts/e7b396e58c96e69588e78e87/", "categories": "釀酒筆記", "tags": "", "date": "2017-07-29 17:40:19 +0000", "snippet": "Mash Efficiency糖化效率是一個容易讓人誤解的詞，直覺上會認為糖化效率是把麥芽轉變成糖的糖化效率，但是大多數人在講這個詞的時候，其實指的是Brew House Efficiency，也就是使用的麥芽量能得到的最終的麥汁OG值的效率。很不幸的，在舊版John Palmer的How to Brew，台灣圈內視為自釀聖經的書中就是用Mash Efficiency，但指的是Brew Ho...", "content": "Mash Efficiency糖化效率是一個容易讓人誤解的詞，直覺上會認為糖化效率是把麥芽轉變成糖的糖化效率，但是大多數人在講這個詞的時候，其實指的是Brew House Efficiency，也就是使用的麥芽量能得到的最終的麥汁OG值的效率。很不幸的，在舊版John Palmer的How to Brew，台灣圈內視為自釀聖經的書中就是用Mash Efficiency，但指的是Brew House Efficiency；第四版己經不使用這個詞。效率的用處在於估算需要的麥芽，或者是反過來說，用多少麥芽可以得到多少比重。所以大部分的時候，都是用Brew House Efficiency來計算。釀酒的流程也就是把麥芽的澱粉轉成糖，放進發酵桶。釀酒流程：糖化，過濾／洗糖，煮花，入發酵桶。在每個過程中，通常都有糖的損失。請參考這個網頁的圖，英文還可以的，請直接看原文：https://www.brewersfriend.com/brewing-efficiency-chart/轉化效率Extract efficiency(萃取效率），就是將澱粉轉成糖的比例，麥芽除了澱粉，還有其他的東西。大部分的基礎麥芽的能轉換成糖的比例在80%上下。目標就是儘可能把這80%能轉換的澱粉轉成糖。家釀的效率理想值在85%以上（80%的85%）。（大部分人-尤其是用美國的PPPG系統的人-在討論時用的數字是指最大可轉換率的比率，例如說85%；少數人-尤其是用plato算的人-有時候說的是得到的糖佔麥芽的比例，也就是80% x 85%＝ 68%。）過濾效率Lautering efficiency，把糖和麥芽殼分離的效率；糖化結束後，把糖放進煮沸鍋的效率；包括了第一道麥汁取得多少糖，以及洗糖的效率。酒花及煮沸鍋的損失，煮完後還是會有一些麥汁-也就是有糖，無法進入發酵桶。煮沸鍋的死角，有些人會收集起來另做它用，而酒花熱渣的損基本無解。那個英文網頁，也有提到有很少量的糖是被熱渣吸收，因為數量很少，所以忽略。轉化效率決定於糖化的條件，包括pH值、麥芽磨碎的情況、麥芽本身的轉化能力、麥芽和水的比例、糖化時水和麥芽的接觸、時間、溫度等等；Mashout也會提高轉化效率。轉化效率的好壞，量第一道麥汁的比重即可得知。如果不洗糖，基本上轉化效率就決定了最終的效率。Mashout也會提高轉化效率。過濾效率有兩個部分，就是第一道麥汁的量，以及洗糖的效率。假設糖平均溶在水中，留在麥芽殼的量愈大，殘留的糖愈多。洗糖的效率就是把殘留在麥芽殼上的糖洗出來的效率。批次洗糖batch sparge的效率理論是是推算得出來的，細節可以參考這個網頁。簡單的結論是分洗兩次洗比一次好，兩次水量平均比不平均好。fly sparge的效率則無從推算。進入數字推算前，簡單地回顧一個重點：想要知道效率不佳的的方法，就是量測：量測第一道麥汁的比重可以知道轉化效率。少了第一道麥汁的比重，只能知道過濾效率x轉化效率。雖然只有美國人用的gallon、lb的單位很討厭，美國人用的PPPG(potential point per gallon)很方便又容易計算，所以下面的例子會用這個系統。PPPG的定義是一磅的原料在一加侖的水中會增加多少比重。例如，一磅的糖溶到1gallon的水中，水的比重會是1.046,所以糖的pppg是46.如果是5gallon，就是46/5, 比重就會是1.009麥芽廠通常提供的數字通常是yeild（收率），也就是可以轉化成糖的重量和原料的重量比例，麥芽除了澱粉，還有其他的東西。大部分的基礎麥芽的yield在80%上下，也就是說，一磅的麥芽，能轉成0.8磅的糖，換算成pppg就是46 x 80% = 37左右。每一家麥芽廠的產品，甚至每一批都有些差異，大致來說都是36~38左右。也就是說，一磅的基礎麥芽如果100%的澱粉都糖化完，在1gallon的水中，麥汁的比重會是1.036~1.038左右。也就是說，80%的轉化效率下，糖化一磅pppg 37的麥芽，得到37×0.8=29.6 = 1.030的麥汁。特殊麥的pppg通常隨著顏色愈深愈低。例一：5gallon批次，10磅37pppg的麥芽。100%轉換，100%洗糖，合部糖都進發酵桶：370point。（最高比重是370/5 = 1.074)如果用3.5gallon的水糖化，得到麥汁是1.056, 則轉換效率是 56 x 3.5/370 = 53%。在進行下去前，也可以知道最高的OG不可能超過 56×3.5/5=1.039.因為即使lautering efficiency是100%，也就只有 56 x 3.5點的糖。如果得到1.074的麥汁，轉換效率是 74x 3.5/370 = 259/370=70%。麥芽吸水 0.125 gal/lb x 10 lb = 1.25gallon, 取得那麼第一道麥汁的量為3.5 – 1.25= 2. 25 gallon，麥汁中的糖為166.5點。而留在麥芽殼的糖為259 x 1.25/3.5 = 92.5點。如果第一道麥汁的量比較少，糖留麥芽殼的比例也就更高，整體效率會更差。假設洗糖水是4加侖，分成兩次2gallon的批次洗糖，每次洗糖都只留下麥芽吸收量的水在麥芽中。第一次洗糖後，洗出的糖為 92.5 x 2 / (2+1.25) = 57 點。（2gallon/2+1.25gallon)而留在麥芽殼的糖為 92.5 – 57 = 35.5點。第二次洗糖，洗出的糖為 35.5 * 2/(2+1.25) = 22點。得到 166.5 + 57 + 22 = 245.5, 2.25gallon+4gallon = 6.25 gallon, 煮沸前比重為1.039;假設蒸發掉1gallon煮沸後的麥汁是5.25, 比重是 1.046;扣掉酒花吸收的死角的量假設是0.5gallon，最終得到4.75比重1.046, 效率為 46×4.75/370= 59%例二：如果上面的例子，但不洗糖，用全部水糖化。假設轉換效率一樣是70%，也就是得到259點的糖，全部水是3.5 + 4= 7.5 gallon，259/7.5 = 34.5. 得到 7.5 – 1.25(麥芽吸收) =(一樣是)6.25 gallon的麥汁。蒸發掉1gallon煮沸後的比重是 (34.5 x 6.25)/5 = 43點（比重1.043) 。轉換效率一樣，麥芽吸收量也一樣，不洗糖的比重就是會低一點。例三：計算省略。如果是高比重的酒，為了維持一樣的水麥比，糖化水會比較多，洗糖水就變少了，結果是洗糖的效率變差。另外，最後被酒花熱渣吸收或死角無法進入發酵桶的部分因為比重高，損失的糖也變多了 。所以一樣的步驟流程，最終的效率也會不同。這個網頁有很詳細的說明和圖表。結論當發現效率不佳時，要先分析那一個步驟的效率出問題。要能夠分析，就是要在釀造過程中仔細記錄。事實上，大部分的新手，問題出在轉換效率的機會很大；主要的原因是麥芽通常不是自己碾的，粗細無法控制，或者是剛開始碾，沒有設定好。不洗糖的話，提高蒸發量有助於提高效率。前文提到基礎麥芽的yeild大約在80%；事實上，大部分的麥芽廠會提供兩個數字：粗磨(coarse)和細磨(fine)。你猜那個數字比較高？用來算PPPG的是那個數字？答案在這裡。" }, { "title": "冷卻器", "url": "/posts/e586b7e58dbbe599a8/", "categories": "釀酒筆記", "tags": "", "date": "2017-07-29 17:39:55 +0000", "snippet": "冷卻器有兩大類型，一是浸入式(immersion)，另一種則是對流式(Counter-flow)。對流式又有兩種，一是板式(plate)，另一種則是大管包小管樣式的。這兩種原理和作用一模一樣，差別在形狀，板式體積小，麥汁通過很薄的空間和水接觸，所以通常需要用pump，感覺上也容易阻塞。（也有外包式的，算是特殊的器材，在此不討論。）根據熱力學的定理，不可能把麥汁降到冷卻用水一樣的溫度。理想的結...", "content": "冷卻器有兩大類型，一是浸入式(immersion)，另一種則是對流式(Counter-flow)。對流式又有兩種，一是板式(plate)，另一種則是大管包小管樣式的。這兩種原理和作用一模一樣，差別在形狀，板式體積小，麥汁通過很薄的空間和水接觸，所以通常需要用pump，感覺上也容易阻塞。（也有外包式的，算是特殊的器材，在此不討論。）根據熱力學的定理，不可能把麥汁降到冷卻用水一樣的溫度。理想的結果是降到比冷卻水高個2~3度。要降低冷卻後麥汁的溫度，一定要降低冷卻水溫度。可行的做法有用冰塊直接降低冷卻水溫，或是用另一個盤管，先冷卻冷卻水。浸入式優點： 清潔容易，接觸麥汁的的部分在外面，看得到摸得到。 冷卻時形成的冷渣會留在鍋內。浸入式缺點： 後段麥汁比較低時，降溫速度變很慢。 批量大時需要比較大的冷卻器。實務上，大於10gal(40L)以上的批次就比較少看到用浸入式的。個人經驗：溫差小，降溫慢是物理法則。大部分的地區自來水溫在20度或更高，當麥汁降到40度左右，降溫開始變慢，不幸的是，那正是細菌開始可以大量繁殖的溫度。另外，麥汁的流動性不佳，在冷卻管旁的麥汁冷了，離冷卻管比較遠的麥汁卻沒冷那麼快；需要輕微的攪動麥汁否則降溫速度更慢。當溫度降到細菌喜歡的溫度，速度開始變慢，人工攪動麥汁時，又很怕汗、水滴進鍋內，所以冷卻時壓力很大。對流式優點： 滾燙的麥汁經過冷卻器，可以直接降到目標溫度，直接進入發酵桶。對流式缺點： 接觸麥汁的的部分看不到也摸不到。 通常需要pump。也需要過濾麥汁，以免堵塞。 麥汁直接進入發酵桶的話，冷渣也會進入發酵桶。個人觀點：大部分人是麥汁冷卻後進入發酵桶，所以麥汁幾乎不會停留在中間的溫度，可以降低感染的機會。有些人是把冷卻的麥汁打回鍋內。我認為這樣除了降溫速度會變慢外，也提高感染的風險。但是麥汁直接進入發酵桶，除了冷渣也會進入發酵桶外，還有另一個問題：酒花萃取。如果不是用酒花簍或酒花沒有從麥汁中移除，在冷卻的過程中，麥汁還是維持在高溫，酒花的異構化還是會持續進行，就變相成為了whirlpool hopping或Hop Stand。" }, { "title": "家釀系統3-1-2", "url": "/posts/e5aeb6e98780e7b3bbe7b5b13-1-2/", "categories": "釀酒筆記", "tags": "", "date": "2017-07-29 17:39:15 +0000", "snippet": "這篇的系統指的是”麥汁製作”的系統。麥汁製作是釀酒過程中，釀酒人花最多力氣的部份，也是初入釀酒最先面臨的問題。這篇是我在考慮轉換系統的過程中，所做的研究和比較分析，主要針對各系統的優缺點、特性以及自動化的可能性。對新手採購器材可能有些幫助。大部分的系統都可以採用不同的加熱方式；主要是瓦斯或電熱。電熱自動控制比較方便，所以自動化系統比較常見用電熱，瓦斯對大批量有優勢，但自動化比較難一點點，危險...", "content": "這篇的系統指的是”麥汁製作”的系統。麥汁製作是釀酒過程中，釀酒人花最多力氣的部份，也是初入釀酒最先面臨的問題。這篇是我在考慮轉換系統的過程中，所做的研究和比較分析，主要針對各系統的優缺點、特性以及自動化的可能性。對新手採購器材可能有些幫助。大部分的系統都可以採用不同的加熱方式；主要是瓦斯或電熱。電熱自動控制比較方便，所以自動化系統比較常見用電熱，瓦斯對大批量有優勢，但自動化比較難一點點，危險性似乎也高了點。電熱以220v/240v為佳，一般的110v/120v用到15A的電流只有接近1800w的電力，用在20升左右的大小算是勉強可用。(一般家用迴路上限通常在15A或20A。）糖化時的麥醪(Mash)流動性不佳，所以如果在糖化時要對麥醪加熱，除了攪拌就是需要用pump循環。3.三桶HLT(Hot Liquid Tun)：熱水桶。可以加熱。MLT(Mash Lauter Tun)：糖化過濾桶。需要假底之類的過濾裝置。BK(Boil Kettle)：煮沸鍋。可以加熱。需要過濾裝置過濾酒花。三桶系統可大可小，小到20公升，大到100加侖以上都有。可複雜可簡單，可以全手動，也可以接一堆管線用pump，所以很常見。操作：1.是先在熱水桶HLT加熱水。2.水導入糖化過濾桶MLT和麥芽混合做糖化。3.熱水桶HLT加入洗糖水加熱（也可以在一開始就加入足夠糖化和洗糖的水）。4.糖化結束後，麥汁入煮沸鍋BK。5.洗糖，水從熱水桶HLT到糖化過濾桶MLT。6.最後麥汁全部在煮沸鍋BK煮沸。水的移動可以靠重力或pump，大於20L以上的，靠pump比較多。通常需要兩個pump。糖化控溫，控溫可以分成維持溫度和升溫兩個方面。維持溫度最簡單的方法是用保溫桶做MLT糖化過濾桶，或是包棉被。升溫則需要加入熱水或直接加熱麥汁，還有傳說中的decoction。加熱麥汁又可以分為:RIMS、HERMS、R-HERMS。也是可以直接加熱MLT，但實務上家釀比較少人這樣做。HERMS(Heat Exchange Recirculating Mash System)是將麥汁導入HLT中的盤管做熱交換，藉熱水桶HLT的水間接加熱麥汁。RIMS(Recirculating Infusion Mash System)是麥汁導入一個加熱管，直接加熱麥汁。不考慮移動加熱器的情況下，HERMS只需要加熱HLT和BK，但RIMS還要多一個加熱管。三桶式系統大部分的自動化就是自動控溫，液體移動用pump但人工操作居多，要做到自動開始或停止需要能夠偵測水量的裝置，實做上比較複雜。3a.三桶變型：只用一個加熱桶把熱水桶HLT當成煮沸鍋BK，但需要一個保溫桶來暫存洗糖水。在糖化時煮好洗糖水 ，然後放到保溫桶，接下來HLT變成BK的功能。[個人意見]三桶式的系統優點是彈性很高，批次可以做很大，有些微型酒廠也是用類似的系統，只是一個批次的量是用桶(barrel=31.5加侖＝119.2升)為單位的。缺點是需要三個桶以及移動麥汁的設備。相對於其他系統，三桶可以連續釀造或做pari-gyle。在第一批次在煮沸時，就可以在HLT中加水開始煮下一批次的糖化水。1.一桶BIAB基本的設計就是用一個桶或鍋，用一個袋子把麥芽包起來。先煮水，然後加麥芽，糖化後把麥芽取出煮沸。袋子也不需要是真的袋子，可以是不鏽鋼網袋，也可以是一個下方開洞的桶子。BIAB可以不洗糖，也有不少人會洗糖，要洗糖就需要用另一個鍋子煮洗糖水。BIAB在糖化過程中如果有加熱，通常會需要讓麥汁流動，除了手動，pump是比較常用的方式，但據說在德國和英國也是不少人用自動攪拌器。E-BIAB就是用電熱的BIAB，加上自動控溫和麥汁循環，就成了Braumeister、 Grainfather。一樣用pump循環麥汁，Braumeister是由下往上沖、 Grainfather則是把麥汁打上去流經麥芽床。用一般真正的袋子，麥芽無法形成麥芽床，麥汁是靠袋子來過濾。但像Braumeister、 Grainfather的”袋子事實上是一個桶子，底面有假底，有機會形成麥芽床，可以得到麥芽床的效果。但值得注意的是，Grainfather麥汁循環方向會造成堅實的麥芽床，優點是麥汁一直經過麥芽床，缺點是麥芽床會影響麥汁流動的速度，也就造成溫度變化緩慢的問題。Braumeister是把麥芽往上沖，溫度一致性應該會好很多，但是麥芽桶取出時，前段麥汁就不會經過麥芽床。BIAC:Brew In a Conical，把錐形發酵桶當成BIAB的鍋子，煮完冷卻後不用轉移麥汁。用錐形發酵桶的重點在於接種前可以排渣。如果把煮沸的鍋子直接蓋上蓋子拿來發酵，叫FIAK(Ferment in A Kettle)。[個人意見]BIAB最大的問題是把麥芽取出的這個動作。這動作限制了BIAB的最大批量；用麥芽吸水比率約1.04L/kg來算，以最常見的20公升批次abv 5%用的麥芽約4.5公斤上下，以糖化率80%算，剩下20%重量，吸水後接近5~6公斤，而一開始袋子內還有大批的麥汁，很容易超過8~9公斤。如果釀40公升，20公斤就接近大部分人可以輕鬆提起來的上限。事實上，比較大的批量會需要一個吊輪，而且要用很堅固的”袋子”。提起袋子的讓麥汁滴回鍋子時，造成了另一個問題：HSA(Hot Side Aeration)，就是會造成大量接觸空氣，麥汁氧化。形成麥芽床對麥汁的清澈度有很大的幫助，但對成品的影響大小倒是有不同的看法。麥芽床對洗糖也有間接的影響，如果沒有辦法形成麥芽床，大概是不能做fly sparge。2.二桶式 k-RIMS(kettle-RIMS)在三桶系統中，如果不要洗糖，HLT熱水桶可以直接拿來當BK煮沸鍋，少用一個桶；k-RIMS是更進一步地把麥汁在兩個桶子中循環來做溫控；把一個鍋子（通常是糖化桶）放高一點，只需要一個pump；也很像是BIAB中把”袋子”拿到外面獨立成一個桶。K-RIMS通常不洗糖，簡化了三桶系統外，是解決BIAB中麥汁滴回鍋中，可能造成氧化的問題，也不會有BIAB需有要把很重的”袋子”提起來的問題。K-RIMS也使用糖化桶，也會建構麥芽床。代表性的產品是 Blichmann BrewEasy 及 DIY的Brutus-20.K-RIMS一定需要pump。只要有Recirculating，就需要pump。[個人意見]K-RIMS系統的DIY跟E-BIAB，相比差異不大，只需要一個pump把麥汁從下鍋打到上鍋。但有一個問題必需解決；pump打麥汁速度比麥汁靠重力及需要經過麥芽床的速度快很多，所以需要個能控制上桶麥汁的水位的機制。實做上有人是用用調整pump流速以達到兩桶水位變化不大，但如果麥芽床流動變慢了，還是需要持續觀察調整。Blichmann BrewEasy是用AutoSparge，一種跟馬桶滿水停止一樣的機關。另一個可能是像GrainFather一樣做一個溢流管，如果超過一個水位就直接流回BK/HLT。另一個問題是監控溫度的位置，加熱在BK/HLT，但麥醪在MLT，如果麥汁流動速度變慢了，麥醪升溫速度就會變很慢，持續加熱BK/HLT可能會造成BK/HLT中麥汁溫度過高（Decoction?）。Blichmann BrewEasy的監控點在PUMP入口處，也就是BK/HLT出口處。不過，糖化酵素主要是存在麥汁的部分，所以監控BK的溫度是比較合理的。自動化的討論三鍋和一鍋的關鍵性差別在於：三鍋是移動水和麥汁，而一鍋則是移動麥芽。二鍋可視為三鍋的不洗糖簡化，也是移動液體。液體的移動可以很簡單地用pump達成；但麥芽的移動則困難許多，對大批次來說更是不切實際。所以目前的半自動BIAB就是手動移動麥芽，而僅是自動控溫和提醒手動移動麥芽的時間。三鍋和二鍋式的自動化除了控溫，就是液體的移動。液體的移動本身是用pump，算是某種程度的自動化。而起動和停止的時間點要自動化，需要液位或水量等感測器。在使用pump的情況下，起動和停止的動作並不費力，所以自動化的需求也就比較低；換個角度想，停止糖化或洗糖的時間點，通常也需要一些確認，都自動了，反而有些不方便。綜合以上，再上洗糖會增複雜度，全自動化的系統基本上以二鍋式的最為可行。目前市面上全自動的機器，似乎都可以歸為二鍋式：一個糖化桶和一個煮沸鍋。一開始就把麥芽放到糖化桶，水加到煮沸鍋，然後水煮到一個溫度，機器就可以把水打到糖化鍋， 等糖化（時間）結束，再把水打回煮沸鍋，開始煮沸。（以下是我的推論）Brewie就是典型的架構。picoBrew比較特別一點，是使用加熱塊，雖然沒有傳統意義上的”煮沸鍋”，卻也是需要一個容器來進行煮沸的動作；也就是外加的那個keg。附註：需要多大的桶？HLT熱水桶: 能夠容納Striking water + sparge water；通常sparge water = 總用水 – Striking waterMLT糖化過濾桶: 死角 + 糖化水 (通常用3L/kg 或 1.25~1.5 qt/lb)+ 麥醪中麥芽增加的體積；要注意的是，據書上說，麥芽床的厚度應該至少要有4英吋才有作用。所以也不是愈大愈好。BK煮沸鍋: 煮沸前麥汁量 ＝ 最終麥汁量 + 蒸發量 + trub(酒花熱渣等) + 器材死角 + 麥汁冷縮 ~= 總用水 – 麥芽吸水量；煮沸鍋還需要一些空間，在沸騰的時候麥汁才不會濺出來。BIAB不洗糖：需要全部水+麥醪中麥芽增加的體積。幾個需要用的參數（概約值，YMMV)：麥芽吸水率 0.5 qt/lb 或 1.04 L/kg麥醪中麥芽增加的體積 1lb 10oz 或1kg 325 ml蒸發量可大可小，看火力大小及鍋子的形狀，業界據說是控制在5%，家釀我看到的有人說差不多是1 gallon/hr，實際上也有人只有0.5gallon~0.8gallon。酒花熱渣等在 20L(5 gal)批次中通常在在0.5L左右，酒花用得多，就更多。器材死角，視器材而定，大部分20L(5 gal)的可能在1L~2L之間麥汁冷縮，一般是4%，5gal批次約0.8qt。剩下的就是加減乘除就可以得到答案。但糖化桶值得仔細研究；不考慮死角，糖化桶大小要看用多少麥芽，因為糖化用水基本上是和麥芽成比例（例如常用的3:1) ，而要用多少麥芽，除了看想釀的OG多大外，又跟糖化效率有關。例一：假設是5gal批次，OG 1.080, 效率 60% （以下用美式的ppg算法計算)，糖化用水用1.5 qt/lb80 * 5 /0.6=666.6667 pt (80pt x 5 gal / 60%)667/36 = 18.5278 lb 18.5 lb18.5 * 1.5 + 18.5 * 10/32 = 33.5313 qt = 31.7 L 所以需要32L再加上一些空間，我想35L~38L是一定要的。例二：台灣常見的27L保溫桶：27L ~ 28.5 qt，不計假底空間用1.5 qt/lb來算 28.5 / (1.5+10/32) = 15.7241用1.25qt/lb來算 28.5/(1.25+10/32) = 18.24上限約在18lb，如果以糖化效率 70%來算，最大OG18 * 36 * 0.7 /5 = 90.72 =&gt; 1.09116 * 36 * 0.7 /5 = 80.64 =&gt; 1.081附註二：商業釀造用幾個桶？我參觀過一、兩家相對小型酒廠都是用三個桶；而在書上有看到的系統最多有五個桶：熱水桶、糖化桶、過濾桶、煮沸、旋沈槽。也就是把”糖化過濾”分開，再加一個專門的旋沈槽。有時候甚至不直接打到發酵桶，而另外使用冷卻桶，如果冷卻也算進來，就是6個。更大的設備據說有冷熱渣分離的設備。這些在家釀的範圍比較少見，但是也沒什麼理由要自我設限，尋求自己的最佳配置的沒必要有限制。參考資料： http://www.theelectricbrewery.com 很多人參考的電熱三鍋系統。有詳細的教學。 http://www.homebrewtalk.com/showthread.php?t=131411 K-RIMS系統介紹。" }, { "title": "家釀發酵溫控解析", "url": "/posts/e5aeb6e98780e799bce985b5e6baabe68ea7e8a7a3e69e90/", "categories": "釀酒筆記", "tags": "", "date": "2017-07-29 17:38:55 +0000", "snippet": "” Brewers make wort, yeast makes beer. “提到釀酒，釀酒人可能會想到煮麥汁的過程，但釀酒人的產品其實只是麥汁，酵母發酵才能產生啤酒。控制發酵溫度是發酵過程中很重要的一環，也是投入酵母後釀酒人少數可以控制的變數之一。溫控基本可以拆解成幾個部分：隔熱、冷／熱源、溫度控制、熱交換及介質。 熱隔離 如果我們生活在一個酵母喜歡的溫度環境，那麼根本沒有溫控這個問...", "content": "” Brewers make wort, yeast makes beer. “提到釀酒，釀酒人可能會想到煮麥汁的過程，但釀酒人的產品其實只是麥汁，酵母發酵才能產生啤酒。控制發酵溫度是發酵過程中很重要的一環，也是投入酵母後釀酒人少數可以控制的變數之一。溫控基本可以拆解成幾個部分：隔熱、冷／熱源、溫度控制、熱交換及介質。 熱隔離 如果我們生活在一個酵母喜歡的溫度環境，那麼根本沒有溫控這個問題；正常的環境通常是太熱、或太冷、或有時太熱有時太冷。所以，把發酵桶和環境溫度有效隔離對溫控來說是很重要的，隔離愈好，也就愈省能源。 最常見的隔離方式就是一個空間像冰箱、冷房，另一種是包覆發酵器，像是做件“衣服“給發酵器穿，或是泡在水中。 .冷／熱源 生活中經濟的冷源大約有兩種：壓縮機和電子致冷（peltier）。冰保特瓶基本上也是壓縮機，只是一種間接的方式。電子式的效率不佳，建議避免。 加熱來源則有：1，吹風機，2.冷血動物用電熱帶，3，電燈炮紅外線電燈炮 4.個人用的小型暖風機。 溫度控制 酵母有最佳的工作溫度範圍，雖然說是一個範圍，但比起只是控制在”不太熱”或”比較冷”這種模糊未定義的溫度，控制在一個穩定小範圍的溫度應該是比較專業的做法，也是穩定成品的關鍵。所以真正的溫度控制，指的是將溫度控制在一個指定小範圍的設備。另外值得注意的是，理想的溫控應該是控制啤酒的溫度，而不是空氣的溫度，所以用測溫探管來量測啤酒的溫度會是比較理想的做法。另外，雖然對台灣來說，”溫控”都等於”冷卻”，但在其他地方或是想要脫離氣候的限制，”加熱”也是必要的，如果是日夜溫差大的環境，理想的溫控器應該是可以同時控制”冷卻”和”加熱”的二路溫控器。 熱交換及介質 熱交換大約是兩種方式，一是透過發酵器的外殼，另外是內置盤管。介質也分兩種：空氣和液體（通常是水，有時會加防凍劑）。 內置盤管透過液體來冷卻麥汁可能是效率最高的一種。 把發酵器泡在水中算是一個很有效的方式（控制外部的水溫是另一個問題），但不是所有的發酵器都能泡在水中。 熱交換的介質需要循環，空氣就用風扇，水就用幫浦。 熱交換及介質基本上是決定了“溫控“的方式：氣冷就是冰箱或發酵室，水冷就是盤管（內或外，或泡水）。我把熱交換特別提出來的一個原因是想要強調”介質”。大家都習慣冷房或冰箱的概念，但其實”空氣”是熱的不良導體。常見的溫控器 簡易插座型 這種是最簡單又便宜的，500台幣左右可以解決，配合冰箱使用也不需要對冰箱對破壞性的變動，只要把冰箱電源插上去，溫度探測器放進冰箱就行了。不過這種簡易插座型比較少看到二路溫控器。 STC 1000型 很多都長得很像，STC1000是Homebrewtalk最受歡迎的機型，還有人DIY firmware，所以以它為代表。這類和插座型類似，只是沒有插座，美國很多人拿這個來DIY，加上插座，變成跟簡易型的一樣，因為ITC 1000是二路型的溫控，可以同時控制加熱和冷卻。要注意的是：並不是長這個樣子就都有二路溫控，買前還是要看清楚。如果沒有要DIY把它塞在冰箱上，也沒有想要有同時控制加熱和冷卻的需求，其實買簡易型的就可以了。它的售價和簡易型差不多，但要加上插座外盒等，就會多貴幾百塊。當然，多花幾百買個保險也不失為一種選擇。 DIY型(Brewpi) 這是最有得玩的一種，我只討論Brewpi。Brewpi的成本和STC1000差不多，但可玩性大很多，只是除非買比較貴的成品，不然會需要基礎的接線和操作windows的能力。在所有類型中，我認為這是目前最理想的一種，可以同時控制加熱和冷卻，可以排程溫度，還可以網路監控，它會調整冰箱氣溫把啤酒溫度控制在一個很小的範圍中。雖然說，brewpi可以設定控制冰箱恆溫，比較建議的做法還是採用溫度探針量測啤酒的溫度；不使用網路監控時，它也是一個很棒的溫控器。 值得一提的是，大多數簡易型和STC1000的溫度控制是採用高低溫；也就是溫度高到一個設定的範圍時啓動，低到一個點就停止的方式，溫差相對較大。Brewpi在設定為啤酒恆溫時是採用PID演算法，如果是冰箱恆溫則是用高低溫方式。常見發酵溫控： 冰箱改裝 冰箱基本上解決了“熱隔離“和“冷源“的問題，而交換介質當然就是空氣。冰箱唯一缺乏的是溫控，因為冰箱能設定的溫度範圍通常是比較低，但加裝一個溫控器並不是太難的事，所以這是最受歡迎的方法。 酒櫃算是一種特別的冰箱，因為儲存酒的溫度也適合釀酒，完全不需要改裝。缺點是貴。 冰箱最大的問題是空間。有些人會有冰箱”耗電“的疑問，這完全是錯覺。不管你用那一種方式，你都需要某種降溫的方法，除非可以不用電降溫，不然用到的能源 應該是一樣的。 冰箱基本採用“氣冷“的方式，熱交換效率其實不高，但通常隔熱很不錯，做為發酵的溫控是足夠的。 有些小冰箱和酒櫃是用電子致冷晶片而不是壓縮機，電子致冷晶片的效率不好，基本上不建議。 酒櫃 最貴的方式，但基本上，買了酒櫃，以下都直接略過了。由於大部分的冰箱不能將溫度設定在Ale適合的溫度，溫差也太大，所以都需要另外的溫控，酒櫃就可以。酒櫃外表漂亮使用方便不麻煩，所以有錢的話就上吧。 Son Of Fementation 基本是是一種自製的“冰箱“，只是拿冰塊（通常是用保特瓶冰）來取代壓縮機。因為還是需要製冰，並不是一個長久之計。只有在以下的情況，我會建議考慮用這個方法： 隔熱材料不用錢或很便宜。 .找不到適合大小的冰箱；包括冰箱內可容納發酵器空間及可以放冰箱的空間限制。 內盤管 在啤酒放一個不鏽鋼盤管，把冷水或熱水打進去做熱交換。基本需的元件有：盤管、管線、pump、控制器。這種系統中，最大的問題是冷源；冷水機很貴，比較簡易的方法是用保溫桶加冰塊或冰保特瓶水。但這樣就變成和Son of Fermentation一樣，只能算半套系統。水族用的冷水機比較便宜，也有人用，但據說能夠降到的最低溫度會高一點。美國很多人用冷氣機改裝，也些人用小冰箱改裝。用小冰箱改裝如果只是在冰箱內放桶水，據說效果不佳，而且需要5加侖以上的水。要搜尋相關的資料，可以用關鍵字: glycol 外盤管(Jacketed) 外置盤管是一種昂貴的方式，它的效率可能比內置盤管低一些，因為多了一層發酵器壁；但比內置發酵器好的部分是容易清潔（根本不需要？），容易保持衛生。據說大部分的酒廠都是用這種。内置盤管基本上都不銹鋼材質，外置盤管因為不直接接觸麥汁，所以可以用銅管，甚至有人DIY是用塑膠軟管。塑膠的導熱係數比空氣還高。 cool zone 這是一個產品，簡單地說就是用類似保溫袋的東西把發酵器包起來，而這個”衣服中又有水管，可以做溫控。大部分的時候，溫控的選擇是由發酵器決定的。例如，用美式發酵桶或玻璃桶，可能小冰箱或冰櫃就放得下，所以用小冰箱或冰櫃是很好的選擇；相對地，用錐形發酵器（Conical fermenter)，能放得下的冰箱就需要大得多，用盤管熱交換的就比較多。但要注意的是，如果只有一個發酵桶，盤管的方式其實省不了太大的空間，因為冰水機也是需要空間的。如果是兩個以上，又想要不同的溫度，盤管的方式應該可以佔比較小的空間。我建議提早把發酵溫控列入採購表中，甚至放在麥汁製作器材的前面。有溫控設備，就可以擺脫天氣的因素，對成品的掌握也大幅提升。沒有複雜的麥汁製作器材，還可以用DME或LME來釀酒，但沒有溫控，很難控制結果。理想的發酵溫控最低溫應該要到4度以下，這樣才能進行Cold Crash，也就是利用低溫讓酵母沈降。" }, { "title": "我的釀酒筆記", "url": "/posts/e68891e79a84e98780e98592e7ad86e8a898/", "categories": "釀酒筆記", "tags": "", "date": "2017-07-29 17:38:34 +0000", "snippet": "“如果我不是在釀酒，就是在準備釀酒。”入釀啤酒這個坑超過兩年了，資歷上只能算是半新不舊的新手。最近整理OneNote，看到了一些筆記埋没在雜亂的資料中，一來這些筆記如果不整理出來，大概就不會再看到了，二來，或許這些資料對一些人多少有幫助，所以就整理出來，讓有緣的人看一看。由於資歷不算深，這些筆記資料，主要是在建構採買器材時記下的，所以大都跟器材有關。另外有些主題則是初學者很容易會有問題的部分...", "content": "“如果我不是在釀酒，就是在準備釀酒。”入釀啤酒這個坑超過兩年了，資歷上只能算是半新不舊的新手。最近整理OneNote，看到了一些筆記埋没在雜亂的資料中，一來這些筆記如果不整理出來，大概就不會再看到了，二來，或許這些資料對一些人多少有幫助，所以就整理出來，讓有緣的人看一看。由於資歷不算深，這些筆記資料，主要是在建構採買器材時記下的，所以大都跟器材有關。另外有些主題則是初學者很容易會有問題的部分。所以對於想要開始的或許有些幫助。在自釀圈有個和其他領域（例如，攝影）大異其趣的地方：大部分的前輩都不會建議新手一次”攻頂”，甚至一再強調用最簡單最基礎的器材也可以釀出好酒。這當然是正確的觀念，器材的好壞和成品沒有絕對的關係。但是，就好像開BMW和騎機車都可以到達同一個地點，結果可能一樣，但過程和感受會完全不同。至於該花多少錢，完全取決於個人的預算和對釀酒的喜好。有錢可以花在自己喜歡的事物上是一件幸福的事。”喜歡又買得起就買”，這是我唯一的建議。" }, { "title": "BrewManiacEx 0.3", "url": "/posts/brewmaniacex-0-3/", "categories": "BrewManiac", "tags": "", "date": "2017-07-06 16:41:41 +0000", "snippet": "Disclaimer:There are more and more functions, but I can’t test all functions because I don’t have all the hardware setup. Neither can they be tested in one single brew. Therefore, please verify bef...", "content": "Disclaimer:There are more and more functions, but I can’t test all functions because I don’t have all the hardware setup. Neither can they be tested in one single brew. Therefore, please verify before put it into real use.What’s new Post Boil Hop(HopStand) Customized audio Multi-button in Web interface New setting options button feedback, buzz on button pressed, or not pump priming cycle, on time, off time. Iodine test. There are two options after Iodine Test. Go to Mash Out or Extend the mashing rest. Export/import settings in web interface Dual heater support by compile option. config.h@39 #define SecondaryHeaterSupport &lt;strong&gt;true&lt;/strong&gt; Others Sparge heater is no longer by default supported. revise setting temperature of web interface. Correct setting temperature will be displayed in manual mode. code revision.Known issues: The sound doesn’t paly on mobile Safari. If the audio file is larger than 120k, it might not work. Sometimes, Chrome don’t play the audio unless reloading the page.Post Boil Hop(HopStand)Check this post.Customized audioCurrently, it works on Safari and Chrome, not tested on other platform. It doesn’t work on mobile Safari of iOS because it doesn’t allow downloading and playing audio without users’ action.Two files are involve: sounds.json and the audio file. All segments of sound is put in a audio file, preferred to m4a(AAC) format, and specified by the sounds.json file.sounds.json should be put in the root of the file system of ESP8266. If it is missing or in wrong format, all the sound effect will be replaced by simple buzzing.The format of sounds.json is like this:{\"src\":\"sounds.m4a\",\"seg\":{\"open\":{\"s\":0,\"t\":2.2,\"r\":1},\"tr\":{\"s\":2.3,\"t\":1.5,\"r\":1},\"addhop\":{\"s\":4,\"t\":1.2,\"r\":3},\"addmalt\":{\"s\":5.5,\"t\":1.4,\"r\":1},\"boil\":{\"s\":7.1,\"t\":1.2,\"r\":1},\"boilend\":{\"s\":8.6,\"t\":1.2,\"r\":1},\"bye\":{\"s\":10,\"t\":2,\"r\":1},\"chill\":{\"s\":12,\"t\":1.2,\"r\":3},\"cool\":{\"s\":13.5,\"t\":1.2,\"r\":2},\"iodine\":{\"s\":15,\"t\":2,\"r\":3},\"maltin\":{\"s\":17,\"t\":1.4,\"r\":3},\"mashout\":{\"s\":18.5,\"t\":1.4,\"r\":1},\"nmash\":{\"s\":20,\"t\":2,\"r\":1},\"removemalt\":{\"s\":22,\"t\":1.6,\"r\":3},\"whirlpool\":{\"s\":24,\"t\":1.3,\"r\":2},\"disc\":{\"s\":25.5,\"t\":1.6,\"r\":2}}}“src” specifies the source of the audio file. It doesn’t have to be on the controller. It can be a HTTP URL, and you can put it anywhere that can be assess by your browser. (If your audio file is larger than 150k, you might need to put it anywhere else instead of the controller.)“seg” sepcifies the voices: “s”: start of the audio, by seconds “t”: duration of the audio, by seconds. Use 0 if not used. “r”: times of repeat.The meaning of the tags: tag When Example open Successfully connected BrewManiac, at your service tr Setting temperature reached. Temperature reached. addhop reminder of adding hop Time to add hop addmalt reminder of adding malt Time to add malt boil Boiling phase starts start boiling boilend Finish boiling boiling finished bye brew finished. brew finished. goodbye. chill reminder of chilling for hopstand start chilling cool start of cooling stage time to cool iodine reminder of iodine test Time for iodine test maltin temperature reaches mash-in temperature ready to doughing-in mashout start of mashout start mash out nmash proceed to next mash steop continue to next mash step removemalt reminder of removing malt Time to remove malt whirlpool reminder of whirlpool starts time to whirlpool disc connection disconnected Controller disconnected Guideline/tips of audio files Keep the file as small as possible. It’s not concert recording, so use lowest sampling rate as possible. If your audio file are larger than 150k, putting it on the controller might not work. (This might be issues of ESPAsyncWebServer/ESPAsyncTcp. Keep it as a known issue.) There is a lag of playing audio on Safari. Around 200~250ms silence before(including) and after(not including) the audio segment is necessary to make it work better on Safari. For example, if the audio segment is 1 seconds and will be appended at time 15 seconds, you should insert a silence of 0.2 second before the real audio, and another 0.2 second of silence after the audio segment. Then, mark the segment start at 15 second with 1.2 duration. OSX has text to speech built-in. You can type something like this to create a audio segment. ``` say -v “Samantha” “Hello, I am Siri.” ``` To output the audio to a file, add “-o” option, like “-o siri”. oceanaudio is very good for creating the audio file. You can use it to merge the audio segments insert/delete silence space between segments re-sample the audio to make it smaller check the start and duration of the audio segment. Multi-button in Web interfaceOn iOS, you can just press the buttons simultaneously, and release at the same time. (Not tested on Android devices.)Using mouse to press two or more buttons on laptops or desktops is trickier: Click (and hold) anywhere on the rectangle area around the buttons, but not on the buttons. Drag through the buttons. The buttons will be hiligh-lighted. Release the mouse on one of the button. Releasing the mouse outside the buttons will have no effect. Moving outside the rectangle area during dragging will also cancel the action." }, { "title": "BrewPiLess v2.1 available", "url": "/posts/brewpiless-v2-1-available/", "categories": "BrewPi@ESP8266", "tags": "", "date": "2017-07-03 18:21:47 +0000", "snippet": "By using the word “available”, I mean that it is not well tested, and I don’t have enough confidence of it.New FeaturesThe major improvement of this version is about gravity stability and beer prof...", "content": "By using the word “available”, I mean that it is not well tested, and I don’t have enough confidence of it.New FeaturesThe major improvement of this version is about gravity stability and beer profile handling. More flexible, and complicated, beer profile. Detail@Github New stable gravity condition by checking the gravity differences between current reading and up-to 72 hours ago. Specifying gravity condition by apparent attenuation(%), which makes it easier to reuse beer profile. OG must be provided. Fermentation progress indication It is just a simple indication that the gravity change within last few hours is less than the specified gravity stable threshold. Low pass filtered gravity reading To filter out wrong readings by bumping, a simple low pass filter is applied, and filtered data is used in beer profile algorithm. The filtered data is shown in this version. (check Github for more detail.) (LogViewer) Exporting data to CSV formatBug Fixes Wrong auxiliary temperature( temperature reading from iSpindel) display beer profile related bugs (Utility) iSpindel Calibration utility showing the same line for both polynomial." }, { "title": "Dual elements and 3-kettle system", "url": "/posts/dual-elements-and-3-kettle-system/", "categories": "BrewManiac", "tags": "", "date": "2017-06-19 04:47:51 +0000", "snippet": "Grainfather has a switch labelled as “normal/mash”. When the switch is at “Normal” position, the heating element runs at maximum power. When it is at “Mash” position, smaller power is used. Therefo...", "content": "Grainfather has a switch labelled as “normal/mash”. When the switch is at “Normal” position, the heating element runs at maximum power. When it is at “Mash” position, smaller power is used. Therefore, that switch is put on “Mash” only when mashing. I have forgotten to switch for serval times, so I have thought of using the additional actuator(relay control) to control it. By supporting dual elements, the controller can be configured to run at lower power when mashing and at maximum by using both elements during heating striking water and boiling stageThe setting should be able to config the usage of elements for Pre-mash (mash-in) Mashing (mash rest through mash out) Boil Post BoilTo provide maximum flexibility, the setting will be Primary, Secondary, and Both.How about 3-kettle system? BrewManiaxEx is designed for E-BIAB, right? Yes, but after reading the Electric Brewery, I found that by providing this new dual elements support, BrewManaicEx can be used to control a 3-kettle system.Hardware Setup: (Please check the Electric Brewery for detail) three kettle: HLT/MLT/BK with E-HERMS Two elements in HLT and BK. (Additional mechanical switch is highly recommended.) Two pump: water pump and wort pump. BrewManiacEx setup Three temperature sensors in three kettles Control the two elements of HLT and BK. (Let HLT be primary and BK be secondary) One pump can be controlled by BrewManiacEx, but the other must be controlled by a mechanical switch. BrewManiacEx settings Sensor setting (the primary sensor is the sensor used in PID algorithm.) Pre-Mash primary sensor: HLT sensor Mashing Primary sensor: HLT (or MLT) Boil primary sensor: BK Post Boil primary sensor: BK Elements Setting Pre-Mash: Primary(HLT):on, Secondary(BK):off Mashing: Primary(HLT):on, Secondary(BK):off Boil: Primary(HLT):off, Secondary(BK):on Post Boil: Primary(HLT):off, Secondary(BK):on Other related Setting PID doughing-in: ON PID remove malt: OFF (Currently this setting is call PID pipe, active or passive Pump setting, if BrewManiacEx controls water pump pre-Mash ON Mashing ON Boil Off Pump setting, if BrewManiacEx controls wort pump pre-Mash OFF Mashing ON Boil Off The pump can be controlled manually during the whole process, so it’s like a software switch.Let’s go through the brew step by step:| Step | Electric Brewing | 3 – kettle by BrewManiacEx | Note ||---|---|---|---|| 1. Fill HLT with water | Connect water pump input/output to HLT | After filling water and configuring the pump, start automatic process | || 1. Heat Strike Water | 1. \\[Water pump\\] Recirculate HLT to HLT 2. Set PID of HLT to 149F | PID runs on Heater of HLT, and the temperature is automatically set to 149F | Set preMash heater to Primary Heater(Heater 1) || 1. Transfer water to MLT | By \\[Water pump\\] | When temperature reaches. Controller prompt to Dough IN. Transfer the water. | || 1. Doughing-in | 1. HLT PID to 149F 2. \\[Water pump\\] recirculate HLT to HLT 3. \\[wort pump\\] recirculate wort from MLT to HLT(coil) back to MLT 4. Add malt when temperature is steady at 149F | Setup pump in the same way as described. Start the pumps. Wait the temperature reaches 149F and put malt in. | Set PID when Dough-In to ON || 1. Mashing | Start timer for mashing time. | Press “OK” for “Add Malt” prompt. The timer starts automatically when temperature reaches 149F. | Set Mashing heater to Primary Heater(Heater 1) || 1. Mash out | Rise PID of HLT to mashout temperature | Mashout temperature will be set when desired rest time expires. | || 1. Sparge | 1. \\[wort pump\\] transfer wort from MLT to BK 2. \\[waer pump\\] transfer water from HLT to MLT 3. All PID off. | When mashout time strikes count, controller will prompt “Remove Malt”. Use the pump to transfer wort/water as described. When it’s time to start heating of BK, press “OK”.(**The wort should at least cover heating element in BK.**) | PID removing malt is set to OFF. Elements are off. || 1. Boil | Manual PID (PWM) of BK | In boil mode, the heating power is full on until boil temperature reaches. | Set Boil heater to Secondary Heater(Heater 2) || 1. (Post Boil) | | Use heating element in BK if required. | |I am not going to say that BrewManiacEx supports 3-kettle system, but it seems applicable.Adding one more relay control for the pump is not difficult, but it complicated the user interface. Moreover, the user still need to manually control it because there is no sensor to detect the level of water/wort. I don’t see the advantages over mechanical button, except wireless control( which I really don’t recommend).Any opinions?" }, { "title": "Support of Hop Stands", "url": "/posts/support-of-hop-stands/", "categories": "BrewManiac", "tags": "", "date": "2017-05-28 19:30:06 +0000", "snippet": "Hop stands or Post-Boil Hops Additions is gaining popularity along with NEIPA. It should be convenient to have a controller that can help counting time and maintaining the temperature when necessar...", "content": "Hop stands or Post-Boil Hops Additions is gaining popularity along with NEIPA. It should be convenient to have a controller that can help counting time and maintaining the temperature when necessary.The illustration shows three hop additions in two temperature sessions. Let T1=85C, T2=60C, D1=30min, D2=20min, D3=30C for better illustration.After boiling finishes, the controller prompts for wort chilling to 85C(T1). When 85CT1 is reached, it alarms and starts the PID to control the wort at 85C(T1). After 10 minutes, the controller alarms for the addition of Hop2, and prompts for chilling after 20 minutes more.That is a perfect way to use hop stand, and it makes it possible to calculate a more precise IBU. However, cooling wort takes time and water. Heating the to-be-cooled wort does not seems right, and the “precise” IBU is not really precise. It might make no difference between 88C and 85C. Using a range of temperature instead of a exact temperate might save time, water, and energy.This illustration shows a more common and easy way to use hop stands. Hop1 is added when T1(90) is reached, the wort is not temperature controlled unless necessary(the lower line under T1). If the lower bound is set to 80C, the heating might never be activated if you brew indoors.It is a little more complicated to specify a range instead of a temperature, but it provides the flexibility. By specifying the same start and keep temperature, it will be exact the first scenario.Please share your opinions." }, { "title": "BrewManiacEx v0.2.3 Release", "url": "/posts/brewmaniacex-v0-2-3-release/", "categories": "BrewManiac", "tags": "", "date": "2017-04-26 18:44:58 +0000", "snippet": "Bugs Fixed PWM display for multiple sensors. Resumption after boil phase.Changes If PID is used during Malt-in., the setting temperature is set to the temperature of Mash-in. Pump access during...", "content": "Bugs Fixed PWM display for multiple sensors. Resumption after boil phase.Changes If PID is used during Malt-in., the setting temperature is set to the temperature of Mash-in. Pump access during Adding Malt. The “No” option during “Add Malt” is moved to “Temperature Reached” screen of Mash-In. (It was only “Yes”.) Full version label is displayed.Everything in v0.2.2[preview] is included." }, { "title": "Some thought about temperature control in Kettle-RIMS", "url": "/posts/some-thought-about-temperature-control-in-kettle-rims/", "categories": "BrewManiac", "tags": "", "date": "2017-04-20 17:50:42 +0000", "snippet": "I know nothing about kettle-RIMS until Abel Ribeiro and mojonojo mentioned about it.It was a coincidence that I saw people discussing this setup on HBT soon after that. After roughly surveying LOD...", "content": "I know nothing about kettle-RIMS until Abel Ribeiro and mojonojo mentioned about it.It was a coincidence that I saw people discussing this setup on HBT soon after that. After roughly surveying LODO(Low oxygen brewing), my interest about K-RIMS rises.Can BrewManiacEx support K-RIMS? Why not? If we move out the malt pipe of Grainfather, add a solid bottom and a drain, and then call the new malt pipe MLT. We are turning a Grainfather into a K-RIMS. BrewManiacEx works even better because we can use two temperature probes to monitor BK and MLT at the same time.IMO, the most advantage compared to E-BIAB is that K-RIMS avoids the splash during lifting malt pipe or the bag.(Saving a pulley system should be another one if you brew big batch.)The most disadvantage, except the lower efficiency of non-sparging nature, is the temperature difference between two kettles. The separation of two kettles will make the temperature difference bigger than the Grainfather.I have been thinking about using the probe inside grain pipe (that would be MLT temperature for K-RIMS system) as the PID input during mashing on Grainfahter. However, I am concerning the temperature of wort at the bottle of the kettle( BK for K-RIMS). I am not sure how high it will rise when the temperature of mash rises slowly because of solid grain bed.A solution I come out is to limit the temperature of BK(or the reading of probe inside kettle) while using the temperature of MLT(or the probe inside the malt pipe) as PID input. The AUXiliary temperature will be limited by a maximum valve or a maximum difference to mashing temperature.How do you think?Update:My concern about temperature difference issue was relived by a simple fact:The enzyme exists in the LIQUID part, not the solid part. It means that the temperature of the liquid is the temperate needs to be controlled. Sure, it is better to have consistent temperature, but if it is not possible, the temperature of liquid part is what we need to take care of." }, { "title": "PID, PWM, and Doughing-In temperature", "url": "/posts/pid-pwm-and-doughing-in-temperature/", "categories": "BrewManiac", "tags": "", "date": "2017-04-06 02:48:45 +0000", "snippet": "This is to clarify the time when PID or PWM is applied.There are a few settings involved: PID Start It specify when PID is applied. Before PID is applied, the heat is fully output. PID Active/Pa...", "content": "This is to clarify the time when PID or PWM is applied.There are a few settings involved: PID Start It specify when PID is applied. Before PID is applied, the heat is fully output. PID Active/Passive If PID is applied during Doughing-In(Malt In), which is the duration you put the malt into the kettle. Boiling Temperature PWM is applied after the temperature is higher than BOIL temperature and Setting Temperature. ( Yes, during boiling stage, there is a changeable setting temperature.)One thing worths discussing is “Mash-In” temperature and the temperature during “Doughing-In”.The picture above showing the condition that “Mash-in” temperature is used as “striking temperature‘, which is set a little bit higher than the first rest temperature. Because the temperature of grain is usually lower, mixing the grain with water at higher temperature will get the mash at a lower temperature, right on the first rest rest temperature.Some people use “Mash-In” temperature in other way, in which the Mash-In temperature is lower than the temperature of first rest. For example, mash-in at 45C, and then rise temperature to first rest, e.g. 55C.In normal condition, the temperature of mash after adding malt should be lower than the mash-in temperature.If PID is used(PID Active), what temperature should it keep? Mash-in or Mash rest 1?In the case of using Mash-in temperature as striking temperature, if the striking temperature is correctly and precisely calculated, the heating should be turned off during the time malt is added since the drop of temperature is already considered and expected. If PID should be used, the desired temperature should be Mash rest 1, which is the temperature we try to get.When a lower mash-in temperature is used, the desired mash temperature should be the mash-in temperature.Prior to v0.2, the temperature during Doughing-in is PID controlled and the temperature is set to Mash-In temperature. After v0.2.1, the option to enable or disable PID was added and Mash rest 1 temperature is used if PID is enabled.After above discussion, I am thinking to change the setting temperature to Mash-In temperature during doughing-in if PID is enabled. Then, for people who use higher mash-in temperature as striking temperature can set PID off to get desired first rest temperature. People who use lower mash-in temperature can set PID ON to get the mash-in temperature.Please share your opinions, if any." }, { "title": "BrewManiacEx Release v0.2.2[preview]", "url": "/posts/brewmaniacex-release-v0-2-2preview/", "categories": "BrewManiac", "tags": "", "date": "2017-03-28 03:40:56 +0000", "snippet": "New features Extended Mash Rest When decoction mashing is used or conversion doesn’t finished, it provides the option to extend the mash rest after the time runs out. During the mash...", "content": "New features Extended Mash Rest When decoction mashing is used or conversion doesn’t finished, it provides the option to extend the mash rest after the time runs out. During the mashing rest, long press STP(Enter) will bring a new option “Extend”(Up). Press the button to toggle extended mash. A “+” symbol will appear at the first line of LCD, indicating extended mash. The other two options is “Skip”(Start) and “Back”(Enter). “Skip”(Start) is used to skip current rest step and goto next step, while pressing “Back”(Enter) will result in returning to current rest step. When the time of the rest counts to zero, it will start to count UP if extended mash is enabled. During extended mashing, STP(Enter) can be used to finish current mash rest step. Paddle stirring instead of Pump recirculating (supported by compile option) change the UsePaddleInsteadOfPump to true at line 38 in **config.h** #&lt;span class=\"pl-k\"&gt;define&lt;/span&gt; &lt;span class=\"pl-en\"&gt;UsePaddleInsteadOfPump&lt;/span&gt; true Differences from PUMP no “pump priming” at the start of automatic mode The unit of Pump(stir) Rest/Pump(stir) cycle is second instead of minute Heating control(PID) is not turned off during “Stir Rest” ‘stir’ is used in place of ‘pump’ for button labels. Bug fixed Error updating automation/settings caused by misuse of ArduinoJSON library Error handling of Fahrenheit Now the data is saved in its own unit. The down side is that temperature related settings must be set after temperature unit is changed. Other changes In manual mode, “Pump”(Stir) rest can be enabled by long pressing of “Pump/Stir” button There will be no “–Pump Rest–” as button label when pump rests. During pump rest, the buttons are still accessible.The release is temporarily available at preview branch at GitHub. It will be pushed to master branch after I use it in a real brew." }, { "title": "Information of BrewPiLess v1.2.6 and V2.0", "url": "/posts/information-of-brewpiless-v1-2-6-and-v2-0/", "categories": "BrewPi@ESP8266", "tags": "", "date": "2017-03-09 04:55:43 +0000", "snippet": "I used to think that BrewPi already has everything for fermentation temperature control and there isn’t much to be done. It had been true before release v1.2.5, in which the basic functions of Brew...", "content": "I used to think that BrewPi already has everything for fermentation temperature control and there isn’t much to be done. It had been true before release v1.2.5, in which the basic functions of BrewPi are implemented.Well, there are always fresh ideas, and now I am working on gravity related features. Two main related feature are gravity recording/logging manual input updated by other device, iSpindle. gravity-based temperature scheduleThe logging function is trivial but the gravity-based schedule is not. In my opinion, the way to specify beer profile in BrewPi is a good design, but I couldn’t figure out a way to extend it. Therefore, a new way to specify the schedule is created, and I would like to put it in version 2.0 because I regard it as a break through. The gravity logging will be available in version 1.2.6 with original time only beer profile.BTW#1.My current design of new beer profile: “days” specify the duration of the step. It’s different from “Day” in original beer profile The condition to finish a rest step can be longer than a specified time less than a specified gravity both conditions meet (time AND gravity) either one meets (time OR gravity) A “ramp” step is necessary in the transition of two rest steps. this design allow specifying the speed of temperature change For steps that use gravity as condition, the “days” field is still necessary to draw the chart under certain conditions, it can be used to derive current steps. Changing the profile while beer profile is running will have undetermined result when gravity is involved.BTW#2,The logging with manual input is available in “preview” branch. The input of iSpindle hasn’t been implemented yet. Currently, only manual input of gravity is available.https://github.com/vitotai/BrewPiLess/tree/previewAn issue I would like to highlight is that the gravity values are more concrete than temperature especially when it is manually input. In my option, a line between two gravity values is meaningless, but it helps to track the values. It would be very difficult to find the points of gravity values without connected them by a line." }, { "title": "BrewManiacEx Release 0.2.1", "url": "/posts/brewmaniacex-release-0-2-1/", "categories": "BrewManiac", "tags": "", "date": "2017-03-05 17:38:43 +0000", "snippet": " Add “PID when Doughing-in” option in “PID-PWM” setting. If it is set to “NO”, the heater will be turned off after temperature reached and “Continue? OK” is confirmed, before “Mash-in OK”...", "content": " Add “PID when Doughing-in” option in “PID-PWM” setting. If it is set to “NO”, the heater will be turned off after temperature reached and “Continue? OK” is confirmed, before “Mash-in OK” is pressed. If “YES”, the PID will be applied during doughing in, the setting temperature will be the temperature of first mash rest. Add Plato/Gravity for recipe viewing Add kettle thermal mass option expressed in equivalence water amount " }, { "title": "Mashing temperature, PID tuning, and wort circulation.", "url": "/posts/mashing-temperature-pid-tuning-and-wort-circulation/", "categories": "BrewManiac", "tags": "", "date": "2017-02-22 03:05:50 +0000", "snippet": "This is about my recently finding and thought about mashing temperature measure and control in recirculated E-BIAB.Here is two typical designs of recirculated E-BIAB kettles. The main difference be...", "content": "This is about my recently finding and thought about mashing temperature measure and control in recirculated E-BIAB.Here is two typical designs of recirculated E-BIAB kettles. The main difference between them is the direction of wort circulation.A. Top-down, eg. Grainfather.B. Bottom-up. eg. BraumeisterI don’t have any experience with Braumeister or the like. My issues are about the design of Grainfather. My conclusion is that Braumeister might have a better design, and if you are going to build your own brew kettle, go with design B, the bottom-up method.The issue wasn’t clear to me until I drew the picture: the design of Grainfather creates 3 zones of wort/mash.When the wort drains down, a compact grain bed will be formed, which results in slow draining from middle part to the bottom. If the mash is mixed well when doughing in and the heat didn’t lose too much, it might be fine. However, it is a different story when multiple rest steps are needed becausethe main sensor and the heater are at the bottom and the flow from middle part to bottom part is slow. The result is slow temperature ramp of the mash in the middle.Conducting thin mash or add rice husks can speed up the wort draining but result in fast sparge.The temperature of top portion can be risen quickly if the flow of wort is quick and drains through the overflow pipe.I have been wondering why the PID parameters tuned with 2 gallon water worked “better” than that with 4.5 gallon water. Now it’s all clear to me: the PID was effectively controlling sound 2 gallon of wort.Here are some charts. FYI.I forget to switch the heater to “mash” position. The PID was tuned with 4(or 4.5) gallons of water.The heater was switched to “mash” position. The PID was tuned with 4 gallons of water (same as above.)The PID parameters were derived from tuning with 2 gallons of water." }, { "title": "BrewPiLess Release 1.2.5", "url": "/posts/brewpiless-release-1-2-5/", "categories": "BrewPi@ESP8266", "tags": "", "date": "2017-02-21 23:01:26 +0000", "snippet": " Showing temperature chart when it is not being recorded The data is saved in a circular buffer good for around 2-3 hours. Moving the temperature control to main page. Temperature...", "content": " Showing temperature chart when it is not being recorded The data is saved in a circular buffer good for around 2-3 hours. Moving the temperature control to main page. Temperature chart for beer profile editing Fast loading setting for temperature management control page(now main page) Reload the temperature chart after start/stop saving log Showing name of current saving log, blank if not saving Fix bugs of not showing room temperature in legend area(The BrewPiLess is running “Beer Constant” mode, and the Beer profile displayed is the saved one. )" }, { "title": "Mash-in/Dough-in temperature", "url": "/posts/mash-indough-in-temperature/", "categories": "BrewManiac", "tags": "", "date": "2017-02-17 22:35:39 +0000", "snippet": "The following change will be available on next release Kettle(equipement) thermal mass for more precise calculation A setting to specify if temperature control(PID) is applied during doughing-in,...", "content": "The following change will be available on next release Kettle(equipement) thermal mass for more precise calculation A setting to specify if temperature control(PID) is applied during doughing-in, which is the time you put malt into kettle. The calculated Mash-In temperature will not work as expected in current release.TL;DR part 1:The calculation of strike water temperature is easy if we simplify the model.Grain at Tg, water at Tw, and target temperature is Tm.The mash, mix of grain and water, will be at final temperature Tm.The heat absorbed by grain is (Tm – Tg)* [Grain weight] * [grain heat capacity].The heat loss of water is (Tw – Tm) * [water amount].Assuming no heat is lost, in a simplified world, the heat is perfectly transferred from water to grain. Make a equation of these two terms will derive the formula that is the same as Palmer’s.But, Wait, there are other objects in the “system”: the kettle. Because the kettle is heated with water, it is the heat-loss side. The relative idea formula should be added a term like grain: (Tw – Tm) * [kettle thermal mass]. This term can be simplified as “equipment adjustment“. Using [kettle thermal mass] should be more precise.If you know the value of [kettle thermal mass] in your system, or you know how to get it. That would be a better option.TL;DR part 2:I used to use the first rest temperature as Mash-In temperature because I thought that the temperature should recover in a short time. Of course, the more precise the better. Using a calculated temperature to get exact the first rest temperature might be desired. There is a problem here: should we control the temperature during doughing-in? In original Open ArdBir, there’s a setting for it, which is the PID Pipe(Active or Passive). I thought it was unnecessary and just implemented it as active. That is, PID is applied during doughing-in. If the Mash-In temperature is the same as first rest temperature, it is fine. However, if the Mash-In temperature is calculated by the formula which assumes a CLOSED system, then the equation is broken and the result might not be as expected. It might be fine if the setting temperature is the same as the first rest. In this case, PID algorithm won’t turned the heating element if the temperature is greater than setting temperature. However, in current release, the setting temperature during doughing-in is the Mash-In temperature. Therefore, the calculated Mash-In temperature will not work as expected. This will be fixed as well." }, { "title": "BrewPiLess Release 1.2.3", "url": "/posts/brewpiless-release-1-2-3/", "categories": "BrewPi@ESP8266", "tags": "", "date": "2017-02-16 20:06:11 +0000", "snippet": "This release is to solve one issue.Under certain circumstances, the log chart will not shown.TL;DRThe cause is that the reading from SPIFFS returns zero. I suspect it has something to do with resou...", "content": "This release is to solve one issue.Under certain circumstances, the log chart will not shown.TL;DRThe cause is that the reading from SPIFFS returns zero. I suspect it has something to do with resources for file handle of SPIFFS. According to an advice I googled, I kept file handle opened and reused it to read the log. The solution is to close re-open the file when reading fails." }, { "title": "BrewManiacEx Release v0.2", "url": "/posts/brewmaniacex-release-v0-2/", "categories": "BrewManiac", "tags": "", "date": "2017-02-08 20:32:53 +0000", "snippet": "New features Recipes management Import BeerXML View and brew recipes Bugs fixed: No logging if the automatic process is interrupted and power-off or entering manual mode before...", "content": "New features Recipes management Import BeerXML View and brew recipes Bugs fixed: No logging if the automatic process is interrupted and power-off or entering manual mode before resumption. Wrong hop schedule of automation editingChanges Add a minimum limit of time(500ms) for sensor reading. Without this limitation, the system will be busy trying to get temperature readings when the sensors are not correctly connected and response with error.About RecipesThe recipes are created by import of BeerXML. The imported BeerXML should have the following information so that it can be used and translated as automation settings: Boil time Mash profileThe following fields are also referenced if available Hop and other additions schedules The information will be translated into time of “Hop#1”, “Hop #2”, etc. Water amount of first mash step If the mash-in temperature is set to “calculated”, this field is used in the formula to derive mash-in temperature. Other fields are display only.Recipe Options The unit setting is for displaying the recipe only. Mash-in temperature will be inserted automatically based on the settings. The formula to calculate mash-in temperature is based on Palmer’s formula. Temp = R * [Grain weight] / [Water amount] * ( [First rest temp] – [Grain temp] ) + [First rest temp] + [Equipment Adjustment] R: is the heat capacity coefficient of grain. General speaking, the “Equipment Adjust” should be a minus value because the kettle is at the “mash-in” temperature when dough-in. Mash-out is necessary for BrewManiacEx. If the last mash step in the BeerXML recipe is in the mash-out range( &gt;75C), it will be regarded as Mashout step. Otherwise,”Default Mash Out” will be inserted automatically.Import BeerXML A BeerXML file might contains more than one recipes. Therefore, you might need to select desired recipe. The recipe can be “Save” and “Brew” only if it has at least Boil Time and Mash Profile. The saved name can’t contains special characters and space. The maximum length is 28. Using the same recipe name as existing saved recipe will overwrite the existing saved recipe. You can “brew” it without “saving” it. Press “Brew” button will set the automation settings. The “Mash-In” temperature is derived from the settings at the time it is shown. So does the “Mash-out” step if it is missed in the BeerXML imported. The original BeerXML is saved, and you can have different Mash-In and Mash-out(if not present in the BeerXML) if you change the options before “viewing” a recipe.Saved Recipes You can “delete” and “brew” the saved recipes. You can change the options to get different Mash-In temperature just before “brew” it." }, { "title": "Release v1.2.2", "url": "/posts/release-v1-2-2/", "categories": "BrewPi@ESP8266", "tags": "", "date": "2017-02-02 17:22:32 +0000", "snippet": "The major enhancement is on the format of “remote logging”. Add PUT method Use printf-like format Data Type.(Content-type)The printf-like format and specification of content type provides maximu...", "content": "The major enhancement is on the format of “remote logging”. Add PUT method Use printf-like format Data Type.(Content-type)The printf-like format and specification of content type provides maximum flexibility. You can use any format with your own “field name” or “variable name”. So far, form type (thingspeak.com) and JSON format (ubidots.com) have been tested and verified. I hope to test XML format if I can find one.You can find the example in readme.md at GitHub." }, { "title": "Boiling and Boil Temperature Setting", "url": "/posts/boiling-and-boiling-point/", "categories": "BrewManiac", "tags": "", "date": "2017-01-25 18:02:54 +0000", "snippet": "Boiling temperature is one important setting for boiling stage.First, counting of boil time starts when boiling temperature is reached.Second, the PWM control is available when temperature is highe...", "content": "Boiling temperature is one important setting for boiling stage.First, counting of boil time starts when boiling temperature is reached.Second, the PWM control is available when temperature is higher than “Boiling temperature” AND “Setting temperature“. (Setting temperature is the temperature controlled by UP/DOWN during boiling.)If the temperature can’t reach boil temperature for some reasons, the timer will never start and the brew will never finish.The default boiling temperature is 100 degree Celius, which might be a problem for some people, like me.At my very first brew, the temperature stop at 99.75. I had to stop the brew and change boil temperature setting to 99. The is also one reason for pause function during boil stage, which pauses counting of time.Conclusion: Set the Boil Temperature to 99 degree Celius or lower at your first brew. If the wort is not really boiling at 99 degree, you can just adjust the PWM to 100%, pause the timer, and resume the timer after it really boils. The default value of boil temperature will be changed to 99 on next release. The design is arguable. Checking only the setting temperature might just be fine." }, { "title": "A Facebook page for BrewManiacEx and my future plan", "url": "/posts/a-facebook-page-for-brewmaniacex-and-my-future-plan/", "categories": "BrewManiac", "tags": "", "date": "2017-01-22 03:55:25 +0000", "snippet": "I have been develop BrewManiacEx myself, but I am not alone. Although most of the features are design to fit my own requirements, some of them are from discussions with readers of this blog. I appr...", "content": "I have been develop BrewManiacEx myself, but I am not alone. Although most of the features are design to fit my own requirements, some of them are from discussions with readers of this blog. I appreciate your suggestions. To make it easier for you to provide your invaluable suggestions and to setup a better way of communication, I setup a Facebook page dedicated for BrewManiacEx. That should also provide a better notification of new release in the future, if you ‘like’ it. You can still comment here, though.BrewManiacEx@FacebookThere is not a project manager, so the development is erratic and arbitrary. Current release already has almost everything I need except recipes. Therefore, the next feature to added will be recipe. In my opinion, editing recipe on a brew controller doesn’t make much sense because the brew controller is usually only turned on at brewing day. Importing of a recipe is ratively reasonable. The current de-facto standard seems to be BeerXML, and that’s what I am going to support. Given the fact that browsers have XML parser built-in, the difficult part will be the presentation. I haven’t thought of a way to display. Any suggestions are welcome." }, { "title": "BrewManiacEx v0.1.2", "url": "/posts/brewmaniacex-v0-1-2/", "categories": "BrewManiac", "tags": "", "date": "2017-01-21 05:03:24 +0000", "snippet": "This release is to enable BrewManiacEx to work under AP mode, so that you can use it without an Access Point.It also fixes a bug which will result in RESET of system if the connected network disapp...", "content": "This release is to enable BrewManiacEx to work under AP mode, so that you can use it without an Access Point.It also fixes a bug which will result in RESET of system if the connected network disappears.A new button to “disconnect current WiFi” is added in “Network Config”. The username and password must be input to enable the button. This button is used to clear the WiFi data, so that you can disconnect from current WiFi. You must, however, restart the system to select new network after that.The user manual is also updated. Thanks to Iain, who corrected my typos and grammar errors." }, { "title": "LCD and Hardware Configuration of BrewManiacEx", "url": "/posts/lcd-and-hardware-configuration-of-brewmaniacex/", "categories": "BrewManiac", "tags": "", "date": "2017-01-10 20:49:33 +0000", "snippet": "Hardware configurationThere are three files you might need to check if you are not using default settings. config.h Most software configuration is defined here. The most important one is the numb...", "content": "Hardware configurationThere are three files you might need to check if you are not using default settings. config.h Most software configuration is defined here. The most important one is the number of sensor supported. #define MaximumNumberOfSensors 5 For single sensor, set it to 1(one), or 2~5 for multiple sensors. Changing other options is not recommended if you don’t what the options mean. Please also note that some of the options are used during development, and changing them might result in compile error. pins.h All hardware related definition is in this file, including PINs and PCF8574 address. ui.h LCD type definition. Please see following description. (I should’ve created a option in pins.h, but I did it in a rush manner.)I2C LCDMost of the cheap I2C LCDs available on eBay seem to be adapted by a PCF8574/PCF8574A. That is the type BrewManiacEx supports. Address of LCD BrewManiacEx uses another PCF8574 for input, the address of LCD should be different from the PCF8574 for input. The address of input PCF8574 must be defined in pins.h, while the address of LCD is derived automatically by scanning the I2C to find the other LCD. The reason of this design is because the two PCF8574 is non-distigunishable, but we have control over the input one. The address of I2C LCD is usually not clear from eBay sellers. Type of I2C LCD There are multiple way to interfacing LCD by PCF8574. The most popular one that marked as “sainsmart” on eBay seems to be “YWROBOT”, which is the default setting. Other configuration and information can be find here. If your LCD doesn’t work, you might need to find out the type of your LCD adaption, and change the last parameter at line 30 to one of the following values: HIGHNIB, LOWNIB, BUGNIB, POLLIN,RASP,BUGRASP,SYDZ,YWROBOT,MJKDZ Thanks to Robert Holmström who pointed out this issue. I might switch to the NewLiquidCrystal library, which seems to be more flexible. FYI, the reason I don’t use it is because you have to delete unused files because of the bad design of Arduino IDE.About Relay ModuleI am not good at hardware but just want to share my experience with you. I have two 2-way relay modules which work fine with NodeMcu 3.3V logic. However 2 of my 3 1-way relay modules are inverted logic and don’t accept 3.3V as HIGH. All the relay modules are marked as 5V. I have no idea how to differentiate them. I would suggest please test them by connect the signal directly to 3V3, GND, and 5V before you use them." }, { "title": "BrewManiacEx BrewShield", "url": "/posts/brewmaniacex-brewshield/", "categories": "BrewManiac", "tags": "", "date": "2017-01-06 04:15:10 +0000", "snippet": "Connections: 1~3, ACT1, ACT2,ACT3 connect to 5V driven SSR or Relay. for pump, heater, and sparge Heater control. If “Relay Modules” are used, use port “9. ACT Signal“. Buzzer 5V driv...", "content": "Connections: 1~3, ACT1, ACT2,ACT3 connect to 5V driven SSR or Relay. for pump, heater, and sparge Heater control. If “Relay Modules” are used, use port “9. ACT Signal“. Buzzer 5V driven buzzer. Sensor DS18B120 sensor. Connect 3V3 to power(vcc) of sensors. 6.Power 5V power supply. 1.5A+ is recommended. I2C LCD I2C bus connection for LCD. The power is +5V. Input For keypad or buttons. P0 for Down, P1 for Up, P2 for Enter, and P3 for Start. Pushing the keypad or buttons cause the PIN to GROUNDED. ACT Signal The direct control signals of pump, heater, and sparge heater. 3V signal. They control the same ACT1~ACT3 output and are used to connect to relay modules. WEMOS D1 The two 8pin headers are for WEMOS D1 mini or pro. Antenna Up, USB down. Size: 52mm x 52mmPrice: $15.00 USD $5.00 USD shipping within USA.Note: I wanted to run BrewPiLess on this board also. However, it turns out the rotary encoder doesn’t work smoothly without capacitors. Therefore, I don’t recommend to use it for BrewPiLess.Please leave the message if you want to buy. I will send you PayPal invoice." }, { "title": "Temperature Logs for BrewPiLess", "url": "/posts/temperature-logs-for-brewpiless/", "categories": "BrewPi@ESP8266", "tags": "", "date": "2016-12-30 04:40:07 +0000", "snippet": "BrewPiLess now supports data log LOCALLY. Given the fact that there is 3M space of 4M flash on NodeMcu or WEMOS D1 min, it seems to be a waste not to use the space, not to mention that WEMOS D1 pro...", "content": "BrewPiLess now supports data log LOCALLY. Given the fact that there is 3M space of 4M flash on NodeMcu or WEMOS D1 min, it seems to be a waste not to use the space, not to mention that WEMOS D1 pro has 16M flash.Some fact about the log: The log won’t start automatically. You have to start it at log setting page. The temperatures are logged every minute. A 30 day log will take around 350k bytes. That might imply that 3M space can record around 6 month data. However, there is no guarantee of the robustness of SPIFFS. Changing temperature when logging will result in wrong data interpret. Maximum 10 logs. The logs will not be deleted automatically. Manual deleting is necessary. Internet access is required to view the chart. To save some more space and to alleviate the loading of ESP8266, the library is not put in the ESP8266. Off-line viewer is available." }, { "title": "My New BrewManiacEx Controller and the result of latest brew", "url": "/posts/my-new-brewmaniacex-controller-and-the-result-of-latest-brew/", "categories": "BrewManiac", "tags": "", "date": "2016-12-10 03:11:28 +0000", "snippet": "This is my new controller.The log:The PID parameters used were tuned by using 2 gallons of water. I should’ve tuned with 5 gallon water, but I wanted to check the effectivity of PID parameters. The...", "content": "This is my new controller.The log:The PID parameters used were tuned by using 2 gallons of water. I should’ve tuned with 5 gallon water, but I wanted to check the effectivity of PID parameters. The result seems to be OK. However, the temperature stability seems to be vulnerable to pump actions. The first turbulence was caused by adding malt, which was expected. The second turbulence at the beginning of MashOut was caused by adjustment of the flow rate of wort. The others were caused by turning on the pump.What does it mean? Well, that means the temperature difference of the mash might be bigger than I have thought. Therefore, I will setup a multiple sensor for next brew." }, { "title": "BrewManiacEx Release", "url": "/posts/brewmaniacex-introduction/", "categories": "BrewManiac", "tags": "", "date": "2016-12-07 05:39:42 +0000", "snippet": "BrewManacEx is a brew controller based on ESP8266. It was started by mimicking famous Arduino-based Open ArdBir, so most of Open ArdBir functions are included. Manual and Automation brewing proces...", "content": "BrewManacEx is a brew controller based on ESP8266. It was started by mimicking famous Arduino-based Open ArdBir, so most of Open ArdBir functions are included. Manual and Automation brewing process control PID and PWM heat control Automatic PUMP controlThe most important feature that BrewManiacEx differs from Open ArdBir is WiFi Enabled, Web-based interface You can view, change the settings, monitor and control the brew on your phones, tablets, and computers.Additionally, Multiple sensors support Up to 5 sensors are supported. Different sensors can be used in different stages. PID autotune Run the PID Autotune to get the best PID parameters for your system instead of guessing. Sparge water Heating control Run the sparge water heating when the main heating element is idle during mashing to enable using only one 15A/20A GFCI socket. Temperature logging chart Watching the temperature chart during brew and after brewSpecial Note about the IO Expander and LCDMost 20×4 I2C LCDs are in fact interfaced by a PCF8574/PCF8574A. Therefore, there is two PCF8574/PCF8574A’s in the system on the same I2C bus. You have to make sure they have different addresses. The default address of IO Expander is 0x38, and the address of LCD can be any other address. BrewManiacEx will try to find the address of LCD on startup. It just has to be different from the address of IO Expander, and the address of the IO expander must be correctly set.Screenshots:Real Brew:Draft user ManualGithub" }, { "title": "BrewManiacEx Preliminary information", "url": "/posts/brewmaniacexpreliminary-information/", "categories": "BrewManiac", "tags": "", "date": "2016-11-04 05:56:35 +0000", "snippet": "BrewManiacEx is the integration of BME8266 and BrewManiac on ESP8266. All functions of BrewManiac are available for BrewManiacEx. There are a few extra new functions: PID Auto Tune Multiple senso...", "content": "BrewManiacEx is the integration of BME8266 and BrewManiac on ESP8266. All functions of BrewManiac are available for BrewManiacEx. There are a few extra new functions: PID Auto Tune Multiple sensors Sparge water heater control Temperature ChartPID Auto TuneIt is based on the implementation of PID AutoTune library. I am not going to explain how it works, but there are something you should know if you want to use it. The parameters are baed on how quickly and how far the temperature fluctuates, so that not only the heating power, the mass of mash, the environment temperature, and the desired temperature do mater. Therefore, to run the AutoTune, fill the volume of water as your usual brew, like 5-6 gallon for 5 gallon, put the kettle where you usually brew at, and set the temperature to the temperature you usually mash at.To run AutoTune, enter Manual Mode and set the desired temperature, like 150F/65.5C. When the temperature reaches, long press “heat” button.When the AutoTune process is finished, it will back to Manual Mode, and all parameters will be saved automatically. The quicker the temperature changes, the quicker the AutoTune finishes. If you run it at the same temperature of the environment temperature, you might never get it done.Multiple Temperature SensorsThe web UI is redesigned to support multiple sensors. Maximum 5 sensors can be supported, and different sensors can be used in different stages, including Pre-Mash, Mashing, Boild, and Cooling.Only two temperature readings can be shown on the LCD screen, but all can be shown on the web page.Multiple sensor support is available in BrewManiac as a branch. However, that is not complete. I might merge part of the code into it later.Sparge water heater controlHeating elements usually need large current. A 1500W of 120V heating element, while considered “weak”, will draw maximum 12.5A and running two of them will requires 25A. Inspired by Jelle Klinge, the sparge water heating control is to solve this issue by running them exclusively by taking the advantage of the fact that the heating element is idle most of the time during mashing.The sparge water heating is enabled from Mash-In to Mashout if it is enabled. As a reminder, BrewManiacEx will prompt “Sparge Water Added?” when starting automation process. Answering NO result in disabling of sparge water heating control function in that brew. Since the sparge water is heated when the main heating element is OFF, the temperature might not reach desired temperature if the mash time is short and the heating element of sparge water heater is not powerful enough.The heating of sparge water can be temperate-controlled or not. If temperature control is not applied, the heating is ON when the main heating is OFF. The temperature should be controlled manually or by other mechanism. If multi-sensor is not enabled, temperature control for sparge water heating is not available.If temperature control is enabled, the auxiliary temperature display during Mashing is always the sparge water temperature sensor.Temperature ChartPowered by Chart.js, BrewManiacEx will displayed the temperature chart during Manual and Auto mode. The temperature chart is refreshed every minute. The data of auto mode is logged, saved, and can be download later. Maximum number of saved logs is 20. The oldest log will be deleted when new log is generated. The data under Manual Mode is not saved, and the temperature data is not logged after the record buffer is full, which should happen after 4 hour for single temperature sensor.TL;DRTime runs continuously, so does the temperature. The log, however, is and can only be discrete. Using shorter period results in bigger log file and more memory usage. Longer period results in a longer ‘lag’ of chart update. IMO, one minute is a good value. The temperature chart looks good for one minute period while the memory usage is limited. The change of temperature is usually slow so that the lag doesn’t mater.However, it is a different story for the progress annotation. For example, If the time when the temperature reaches the set point is at 5th second of the minute, it will be shown after 55 seconds. Let’s say the temperature at 30minute is 63.9 and it reached setting 64 at 30m:05s, the “temperature reach” annotation will be at 31minute time line. It’s totally OK when displaying a “history” log. When in a really brew, you will feel the “lag” because the annotation will be shown after 55 seconds.There are ways to ‘solve’ this issue, but I can’t think of a “clean” and simple way to do it. Two ways I’ve tried are to set the time to “previous” time, like 30m in the example, and to “draw” next time point,31m, when the event happens. The former one seems odd because the temperature at 30m has not reached the setting point, the later is also odd because the temperature of 31m is not yet available and the line ends at 30m. I am leaving this for further enhancement, or leave it as is.Other Changes Temperature Sensor resolution There is a menu item under “PID-PWM” for configuration of sensor resolution. The readings of temperature will reflect the real resolution instead of .25 resolution in original Open ArdBir. Heating algorithm The heater is full ON before the difference between current temperature and setting temperature is smaller than a configurable value, which is the menu item “PID Start” under “PID-PWM”. The value ranges from 1.0 to 3.5 Celius. PID is not applied in boiling stage: it will be full on before boiling point reaches and controlled by PWM after boiling point. Pump control Sampling the pump control. No more sensor position selection. Network setting Configurable host name for mDNS, username, and password. Access to system update and file management are protected by simple username/password authentication. Authenticated access to main page can be configured. Delay Start There is an option under “Unit” menu to enable or disable Delay Start feature. Enabling Delay Start provides the chance of delay start when starting automation process. (I want this option because of not liking to be asked every time I start.) Brew calculators It’s handy to have these during brew: Hydrometer temperature correction, Refractometer reading converter with correction(BRIX to gravity conversion with wort correction), and boil off/dilution calculator. A first wort SG estimation function is also provided.Know Issues No sensor setup menu for web pages. The change of network takes effect after reset. Only last change is effective if multiple changes are made. For example, if the hostname is changed, and username is changed later before the system restart, the change to hostname is voided. The web page will not reflect the changing of sensor settings automatically. Manual reload is necessary. The sensor resolution is read from the sensor, and the resolution setting goes directly to the sensor. That is, setting of sensor resolution must be run again for new sensors. In multi sensor configuration, the resolution display is get randomly from one of all sensors. Setting the resolution result in the same resolution of ALL sensors. The temperature chart is updated every minute. That means the chart is always ‘out of date’ for one minute before next update. The temperature chart is ‘splined’. The values between two valid value points are not real values. They are interpolated to make the line smooth and could be wrong. The lines are changed to straight lines. Uglier, but less misleading.ToDos: Off-line log viewer. (well, copy-n-paste also takes time.)" }, { "title": "How to tune the Auto Tune?", "url": "/posts/how-to-tune-the-auto-tune/", "categories": "BrewManiac", "tags": "", "date": "2016-10-13 04:13:28 +0000", "snippet": "The PID parameters have bothered me for a while, so I managed to integrate the PID AutoTune library:https://github.com/br3ttb/Arduino-PID-AutoTune-LibraryIt was very easy, but testing it takes long...", "content": "The PID parameters have bothered me for a while, so I managed to integrate the PID AutoTune library:https://github.com/br3ttb/Arduino-PID-AutoTune-LibraryIt was very easy, but testing it takes longer than I have thought. I finally get a set of PID parameters for 2 gallons of water. (Yes, I was testing and didn’t want to spend too much time waiting the water to be heated.) It took almost two hours to get the auto tune done, and it took me two days to get this result. The reason: there are parameters for Auto Tune to tune the PID parameter automatically. They are Start output step noise range look back timeNoise and look back time are well explained on author’s page, and I mis-understood the meaning of start output and step until I checked the source code://oscillate the output base on the input's relation to the setpoint if(refVal&gt;setpoint+noiseBand) *output = outputStart-oStep; else if (refVal&lt;setpoint-noiseBand) *output = outputStart+oStep;I set both outputstart and step to 127.5 to make it finish the tuning, so that the output is full at 255 or nothing at zero. The time it took, however, is not reasonable. That might imply that the values of the other two settings are not appropriate. I have to figure out the correct settings of Auto Tune to get the correct settings of PID. That is kind of funny thing to me.The library needs a few “peaks” to get the tuning done, which means the quicker the temperature changes, the faster the tuning can be finished. Since I change the heating mode of my Grainfather to Mash mode, it heats up slowly. I am testing it indoor, so the temperature drops slowly. The result is a slow tuning process. I don’t know how other PID device can perform the auto tune so quickly in a few minutes.The parameters for different volume(or mass) and different heating power should be different. Even in different environment, the parameters should be different. However, I would bet the parameter for 5 gallon water would be good enough in most cases.To make this function more practical, the tuning time should be shorter.BTW, I’ve changed the heating(PID) algorithm. The original code will use PID when the temperature is 3.5 degree away from target and 1 degree from boiling. I think PID is meanness for boiling phase, so I make it full before boiling and turn it into PWM mode after boil. PID is only used before boiling phase after the temperature reaches a defined range. I think 0.5-1.5 might be a good value, given that fact that the mass of 5 gallon or more water won’t be heated up so quickly.Update:Using 0.2 as the noise range, 30 seconds as Look Back time, and tuning at 60C, the Auto Tune can finish in 30 minutes. The key seem to be the tuning temperature. The higher temperature, the quicker it drops, and the quicker to get peaks for the AutoTune algorithm." }, { "title": "General Brew Controller", "url": "/posts/general-brew-controller/", "categories": "BrewManiac, BrewPi@ESP8266", "tags": "", "date": "2016-10-04 19:02:37 +0000", "snippet": "I had thought that ESP8266 might not be as stable as Arduino because it is more complex and performs a lot of networking related jobs. It turns out that ESP8266 is stable enough for my purpose, tho...", "content": "I had thought that ESP8266 might not be as stable as Arduino because it is more complex and performs a lot of networking related jobs. It turns out that ESP8266 is stable enough for my purpose, though lacking of documentation and immature libraries are still issues.I have bought some Arduino boards for BrewPi builds and BrewManiac. Now they are all replaced by ESP8266. I am happy about it. However, my setup isn’t solid enough: The buzzer is not loud enough The driving voltage and current of SSR might be out of specification. The LCD contrast is not good under 3V3 The extra IO Expander board and DUPON lines look messy.I have limited knowledge about circuits, but I tried my best by referencing other circuits to create this schema which can be used in both BrewManiac and BrewPiLess. It is simple by just using transistors to control actuators, PCF8574 for input via I2C, and 5V-3V3 level shift logic.The design goals: Input can be 4x keypad or rotary encoder module. BrewManiac: 4x membrane keypad, connecting GND,P0-P3 BrewPiLess: rotary encoder, connection 5V,GND, P0-P2 Buzzer driven by 5V, controlled by a transistor. Direct connect to SSR and relay. BrewManiac:connect heater SSR to Act1. SSR or relay module to ACT2. BrewPiLess: 2 way relay board or SSRs by your choices Act3 is optional. 5V power. As far as I know, power isn’t a easy topic. Therefore, I avoid regulator. 5V interface for I2C LCD.SSR is good for AC devices, but the relay modules are very cheap and small, and it’s easier to find the whole module than to find the sole relay. It would be perfect if the same terminal can be used to connect both SSR and relay module, but I don’t how to do that by using the same terminal. Therefore, the PINs output is directly connected to the auxiliary header PINs.Any opinions are welcome." }, { "title": "BrewPiLess under AP mode", "url": "/posts/brewpiless-under-ap-mode/", "categories": "BrewPi@ESP8266", "tags": "", "date": "2016-09-22 19:30:59 +0000", "snippet": "BrewPiLess now can run in AP mode, which enables it to run stand alone. The newly modified WiFiManager has a new option, “Soft AP Mode”. Soft AP mode will also be entered if the network setting is ...", "content": "BrewPiLess now can run in AP mode, which enables it to run stand alone. The newly modified WiFiManager has a new option, “Soft AP Mode”. Soft AP mode will also be entered if the network setting is not configured in three minutes (and previous connected network doesn’t exist, or there is no previously connected network.) This design is to enable recovery from power shortage or system reset. Without this feature, BrewPiLess will hang at the network setting state and won’t perform temperature management funcitons.For scheduled temperature management, aka Beer Profile mode, the “time” information is needed to manage the temperature, but NTP server will not be accessible without internet connection. Therefore, manual setup of “time” is necessary in this mode. In page of “Temperature Management”, aka /control.htm, a SET TIME button will be shown when the time of ESP8266 is far away from the computer/phone. Pressing that button will set the time of ESP8266 to the time of the computer/phone, or the browser to be exact.To enable automatic recovery from power shortage or system reset, the time informatoin is saved periodically and restored at boot-up if NTP is not accessible, which means the duration of power shortage is assumed to be zero. If the power shortage lasts too long, the shedule will not be on track. For example, if the power shortage lasts 8 hours, the schedule will be off for 8 hours since that 8 hours is missing for ESP8266. Without a RTC, this might be the best I can do.mDNS doesn’t work under AP mode. Therefore, “brewpi.local” can not be used under AP mode, but “brewpi.org” will do the job. In fact, all domain names except those in Apple’s Captive Portal checklists will do.Known issues: Sometimes, under AP mode, the web server cannot be connected. I don’t have any idea about the reason. ESP8266 is not well documented, and we don’t have full access to the source code. I am guessing that it might because of timing issue. Sometimes, on Apple platforms, the setup page can’t be closed because of the “done” button does not show, but the “cancel” button persists. This might be the same issue as previous one." }, { "title": "BrewManiac@ESP8266", "url": "/posts/brewmaniacesp8266-2/", "categories": "BrewManiac", "tags": "", "date": "2016-09-14 16:48:30 +0000", "snippet": "I finally built a control box to be used with GrainFather. Using a water-proof project box and membrane keypad makes me feel more comfortable to use it in the environment of a lot of water. The por...", "content": "I finally built a control box to be used with GrainFather. Using a water-proof project box and membrane keypad makes me feel more comfortable to use it in the environment of a lot of water. The ports for lines under the box does void water-proof, but at least I don’t need to worry about water and wort drop.Only a small hole is ported for the membrane keypad to ensure maximum water-proof. The clear cover of the project box in fact makes reading a little more difficult. However, it doesn’t bother me too much.I should’ve cut a wood sheet and printed something on it to beautify the front cover, which is in fact more difficult to me, compared to writing the program.Inside, it is a mess. Including the membrane keypad and LCD, the other components are: buzzer NodeMcu board small PCB for “power bus” and temperature sensor pull-up resistor. PCF8574 board 5V Power supply (The black object. I attach tab on it to avoid contact to the LCD.) SSR and Really board.The brew went well. There is not a glitch during the whole brew. Although there are things to be improved, I like it more than the original Arduino and ESP8266 version.Somehow, it reminds me the brain bio chip in Battle Angel." }, { "title": "BrewPiLess", "url": "/posts/brewpiless/", "categories": "BrewPi@ESP8266", "tags": "", "date": "2016-08-21 17:56:42 +0000", "snippet": "Software Installation**Arduino IDE is no longer used.** **1.Install Arduino IDE 1.6.8 or above (I am using1.6.9)**&lt;https://www.arduino.cc/en/main/software&gt;**2.Install ESP8266/Arduino Board**O...", "content": "Software Installation**Arduino IDE is no longer used.** **1.Install Arduino IDE 1.6.8 or above (I am using1.6.9)**&lt;https://www.arduino.cc/en/main/software&gt;**2.Install ESP8266/Arduino Board**Open “Arduino/Preferences” menu, input the following link at “extra board manager link”[http://arduino.esp8266.com/stable/package\\_esp8266com\\_index.json](http://arduino.esp8266.com/stable/package_esp8266com_index.json)Under “Tool” menu, select “Manage Board” in board selection menu. search esp8266, and install that board setup.You should have NodeMcu1.0(ESP-12E module) option available under board selection menu. Select that, and choose 4M(3M SPIFFS) as Flash size.Select the correct Serial port.Reference：&lt;https://github.com/esp8266/Arduino&gt;**3.Install Library** The following libraries are needed. Some of them can be found under “Sketch/Import library/Library Management”. The following links are for reference, please use the archives on GitHub.- ArduinoJson &lt;https://github.com/bblanchon/ArduinoJson&gt;- WiFiManager &lt;https://github.com/tzapu/WiFiManager&gt; I created a brach for adding ad new “Soft AP” option: https://github.com/vitotai/WiFiManager- ESPAsyncTCP &lt;https://github.com/me-no-dev/ESPAsyncTCP&gt;- ESPAsyncWebServer &lt;https://github.com/me-no-dev/ESPAsyncWebServer&gt;- ESP8266HTTPUpdateServer (newer version is needed. you might need to manually download the files.) &lt;https://github.com/esp8266/Arduino/tree/master/libraries/ESP8266HTTPUpdateServer&gt;- OneWire &lt;https://github.com/PaulStoffregen/OneWire&gt;***!! Please use the[ libraries on GitHub](https://github.com/vitotai/BrewPiLess/tree/master/libs). Some of them are modified, while some of them might be updated and incompatible to BrewPiLess.!!!*** **If you can’t find the library, you have to find the Arduino Library directory, which usually locates at \\[User directory\\]/Documents/Arduino/libraries/ on Mac.****4.Download &lt;https://github.com/vitotai/BrewPiLess&gt;** Arduino IDE requires the source be in specific path, usually it is **\\[User directory\\]/Documents/Arduino/BrewPiLess****5.\\[Optional\\]Upload data files to ESP8266**If you plan to write some pages of Javascript/HTML yourself, you can do this. It’s better to turn on “DEVELOPMENT_FILEMANAGER” option in espconyfig.h to enable management of files from web interface.&lt;https://github.com/esp8266/Arduino/blob/master/doc/filesystem.md&gt;**Hardware Setup(Reference)**Requirement NodeMcu 1.0 Board, ESP-12E or D1 mini is possible for those good at these things. Two way Relay Board Two DS18B20 sensors 4.7K resistor. [Optional] 20×4 I2C LCD [Optional] KY-040 Rotary Encoder module Don’t use it. Power supply to ESP8266. (I use a USB adapter)![brewpiless](http://vito.tw/wp-content/uploads/2016/08/BrewPiLess-1.png)** If this photo contains your working and infringe your copyright, please notice me to remove it.Check the following link for reference, where I got the DS18B20 pictures.http://www.homebrewtalk.com/attachment.php?attachmentid=217946&amp;d=1408145422***\\*\\* Note:You need a IO expender to use Rotary Encoder.*** **Usage:** On the first time use or when the network disappears, you have to setup the WiFi. ESP8266 will create a WiFi network named “brewpi”, Use your phone or computer to connect to that WiFi AP. There will be a WiFi setup page popping up. If your phone or computer doesn’t open the setup page automatically, open your browser(Chrome, or Safari), and try to browse to any site, like google.com. Please reference the following link for network setup：https://github.com/tzapu/WiFiManager New: After three minutes, ESP8266 will enter AP mode. If you are lucky enough to use Apple’s products, you can use URL like “http://brwepi.local”. Otherwise, you have to figure out the IP address by looking up from your router. The main page is the LCD like: Touch or Click the LCD, a menu will pop up. Select “Device Setup” is to setup the sensors and actuators. When prompted for username and password, input “brewpi” for both. The interface mimics original BrewPi. You can find the the manual of BrewPi for your reference. Basically, you have to “Refresh Device List” to list sensors and PINs, select the setting and “Apply”. “Temperature Management” is used to control the temperature. Select “Beer Const.”, “Fridge Const.”, or “Off”, input the temperature desired, and “Apply”. That’s it. To use “Beer profile”, you have to edit and save the profile first. The interface mimics original BrewPi again. Please check BrewPi manual for detail instruction. **Internet connection is necessary for Beer Profile.** Temperature logging. BrewPiLess can log data to clouds or other servers. The “Data Log” menu is for this. ESP8266 will invoke the specified URL with the temperature values at specified period. Because of limitation of resource, HTTPS is not supported. If you want to log data to GoogleSheet, you need to do it indirectly. Please check Github for detail instruction. I have tried “thingspeak.com”, which does not require https. You can put data to it direct from ESP8266. Here is the result of my testing: https://thingspeak.com/channels/139809 “System Config” is used to setup the system related setting. Host/Network Name: The hostname for mDNS. User Name &amp; Password：trivial. All pages except the LCD page require authorization. Always need password：If this option is not set(checked), the access to the “main page”(LCD display) will not require authorization." }, { "title": "Hardware Woe", "url": "/posts/hardware-woe/", "categories": "BrewManiac", "tags": "", "date": "2016-08-17 22:22:39 +0000", "snippet": "I have been looking for a 5V ready ESP8266 board, so following Luiz Gabrie’s link, I bought this board. I was happy to find that it has 4M bytes flash.It might be its level shifting circuit, I can’...", "content": "I have been looking for a 5V ready ESP8266 board, so following Luiz Gabrie’s link, I bought this board. I was happy to find that it has 4M bytes flash.It might be its level shifting circuit, I can’t flash it under Arduino IDE, via a USB-Serial adapter of course, but I made it by directly invoking the esptool.py. However, I soon found that the receiving of this module seems to have some problems. It didn’t receive data from the Arduino. Neither with my working horse, nor my test platform. It’s strange because it can be flashed so it should has a working serial. I then tried the baud rate of fishing, 115200. It did work with my test platform but still failed with my working platform.I am tired of it, totally. I decide to kiss goodbye Arduino, like what I have already done with BrewPi." }, { "title": "BrewManiac+BMESP8266 V0.9", "url": "/posts/brewmaniacbmesp8266-v0-9/", "categories": "BrewManiac", "tags": "", "date": "2016-08-17 20:01:04 +0000", "snippet": "-use WebSocket instead of original ServerSideEvent. The new version of ESPAsyncWebServer breaks the original ServerSideEvent.-Simple Mash Steps is now the master branch. The Arduino code has to be ...", "content": "-use WebSocket instead of original ServerSideEvent. The new version of ESPAsyncWebServer breaks the original ServerSideEvent.-Simple Mash Steps is now the master branch. The Arduino code has to be updated also.-Default baudrate changes to 115200." }, { "title": "BMESP8266 is broken", "url": "/posts/bmesp8266-is-broken/", "categories": "BrewManiac", "tags": "", "date": "2016-08-17 06:06:56 +0000", "snippet": "I had been using the ESPAsyncWebServer before mid June.After updating to newest version, I found my Server Side Event implementation is broken.I am going to migrate to WebSocket. If you can’t wait,...", "content": "I had been using the ESPAsyncWebServer before mid June.After updating to newest version, I found my Server Side Event implementation is broken.I am going to migrate to WebSocket. If you can’t wait, please find the version of ESPAsyncWebServer." }, { "title": "BrewManiac-Multiple Sensor support", "url": "/posts/multiple-sensors/", "categories": "BrewManiac", "tags": "", "date": "2016-08-11 17:03:28 +0000", "snippet": "DS18B20 uses OneWire bus which can be connected to multiple devices at the same time, which implies that supporting multiple sensors seems trivial. It is. However, there are some software issues th...", "content": "DS18B20 uses OneWire bus which can be connected to multiple devices at the same time, which implies that supporting multiple sensors seems trivial. It is. However, there are some software issues that must be addressed. Usage of sensors One sensor will surely provide one reading. The temperature reading is used as input of PID and to be displayed for information. Using multiple sensors rises a question: “which one to be used?” PID input I make them selectable in these phases: PreMash, Mash, Mashout, Boiling, Cooling. The Primary one will be the one used as PID input. Display It is nearly impossible to display all readings. Although more might be better, TWO are displayed because of minor impact to original screen display. The Aux**iliary one will be the one displayed next to **Primary one. Identifying the sensors: To use multiple sensors, identifying them is necessary. Thus, the first thing before everything could work is setup the sensors. Depending on the compile option and the number of sensors connected, you will need to identify them in the setup menu. ## Simple Usage direction Setup sensors In “Menu” after “Automation Setup”, a new menu “Sensor Setup” is added. It is for sensor setup. The first step is to identify the sensors by assigning a number(id) to each one. Starting from “#1” to the number of sensors, the addresses and temperature reading will be displayed. Use UP and DOWN buttons to change the sensor, and press ENTER to assign that sensor. **Due to the limit of LCD display, only last 4 bytes(8 digit) of the address are displayed. The temperature reading will not be updated unless it is re-printed by UP/DOWN*.** Setup sensors used After assigning the sensors, assign Primary and Aux sensor for each brew stage, including PreMash, Mash, Boiling, and Cooling. Calibration setting The calibration setting is the same as original design, but multiple sensors. Display The reading of Primary sensor is always displayed at TOP or Left. (*note) Displaying the temperature readings makes it easier to identify the sensors, since the address is meaningless unless another program is used. By a cup of iced water or holding the sensor, you will be able to identify the sensors by the change of readings. However, since the sensor setup procedure is supposed to be run once, or at least rarely. I don’t want to use too much code to refresh the reading. The reading is updated only when it is “printed” on LCD, which means you can use UP/DOWN to change sensors and force updating of readings.Compile optionSingle sensor is the default configuration, so you have to change the option by yourself. The option can be found atBrewManiac.ino @line 96#define MaximumNumberOfSensors 1Memory ImpactFlash: roughly additional 2.5K flash is needed.RAM: nearly additional 100 bytes for 3 sensors.WarningI don’t have the setup of multiple sensors. Please test before use, and use at your own risk.Github:https://github.com/vitotai/BrewManiac/tree/MultipleSensorKnown issues: The temperature reading in IDLE/Main screen and Manual mode is not defined. When Power up, the default Primary is the first sensor(#1) and default Auxiliary is the second sensor(#2). However, entering auto-mode process will change the configuration, but it won’t change back after entering idle screen.TODO Using average temperature of all sensors as input of PID." }, { "title": "不用RPI的BrewPi安裝教學", "url": "/posts/e4b88de794a8rpie79a84brewpi/", "categories": "BrewPi@ESP8266", "tags": "", "date": "2016-08-03 18:16:05 +0000", "snippet": "軟體安裝可預先下載預先編譯好的bin檔: https://github.com/vitotai/BrewPiLess/tree/master/bins下載nodemcu-flasher: https://github.com/nodemcu/nodemcu-flasher用 nodemci-flasher燒錄bin檔即完成。硬體配置需求 NodeMcu 1.0 板子一塊或D1 mini，比...", "content": "軟體安裝可預先下載預先編譯好的bin檔: https://github.com/vitotai/BrewPiLess/tree/master/bins下載nodemcu-flasher: https://github.com/nodemcu/nodemcu-flasher用 nodemci-flasher燒錄bin檔即完成。硬體配置需求 NodeMcu 1.0 板子一塊或D1 mini，比較厲害的可以找ESP-12E。 二路Relay Board一塊，可以同時控制冷熱，一路沒有便宜多少，買兩路就好。 二條DS18B20測溫線，一條只能用冰箱定溫，三條可以順便量室溫，兩條最常用。 4.7K電阻一顆。 20×4 I2C LCD，不接也可以，只是要看溫度都要用網路看。也可以用 OLED Lcd 電源供應；我是直接接一個小的usb充電器。 電線插頭及杜邦線。接線圖：（參考配置，電源的部分可以再考慮一下） ![brewpiless](http://vito.tw/wp-content/uploads/2016/08/BrewPiLess-1.png)** If this photo contains your working and infringe your copyright, please notice me to remove it.接插座的部分，可以參考下面這個連結（我的DS18B20圖從這裡來的）：http://www.homebrewtalk.com/attachment.php?attachmentid=217946&amp;d=1408145422設定使用***\\*\\*\\*\\*\\*\\* 不支援Microsoft IE&amp; Edge，請愛用Chrome \\*\\*\\*\\*\\*\\**** 第一次使用或之前使用的網路消失時，需要設定網路。用手機或電腦連上名為brewpiless的無線網路。然後應該會跳出一個設定網路的網頁，如果沒有，打開chrome，隨意前往任何網站，就會出現設定網路的網頁。 參考：https://github.com/tzapu/WiFiManager 連線網路成功後，就可以開始使用。如果你是用apple產品，可以用http://brwepiless.local 網址，否則，請想辦法從你的router知道ESP8266的IP。連進去即是LCD顯示的畫面。第一次連進去應該沒有溫度顯示，必須先設定溫度感測器。 選”Device Setup”做設定，輸入使用者名稱和密碼都是”brewpiless”。出現的畫面和Brewpi幾乎一樣，操作也差不多。請參考brewpi的設定。操作就是先Refresh Device List，列出所有的溫度sensor及可用的PIN，選一個當Beer Temp，選一個空的沒在用的Device Slot後，APPLY； 接下來第二個sensor選Chamber Temp，也是選一個空的沒在用的Device Slot後，APPLY。如果照上面的接線，把D3設成Chamber Cooler，D0設成Chamber heater。（這張圖沒有D0是舊的設定。） 設定完成後就可以開始使用，在LCD顯示的部分應該可以看到溫度。接下來設定溫控，選”Temperature Management”。Beer Const. Fridge Const.都是輸入想要的溫度，按Apply即可。不想溫控，則選Off按Apply。 溫度行程的必須先編行程，Save後Apply。這部分的設定也都和BrewPi一樣。不過，我當初有點看不懂，還是看了程式碼才看懂。稍微解釋一下，如果你和我一樣笨，就可以參考一下： a.想像有一個圖（原版的BrewPi有圖），橫座標是時間，緃座標是溫度。這個表就是列出整個溫度曲線。例如，以這個例子來說，第0天是21度，第0.25天也是21度，第0.5天是12度，表示0-0.25天維持21度，在0.25天開始降溫，在0.5天降到12度，中間的時間溫度會用內插法自動算出來。第三行的Date &amp; TIme就是對應的真實時間。 b.Start Date通常是從現在開始，按Now就會設成現在時間。但也可以設成過去時間，溫度行程就是照著什麼時間溫度應該是幾度去控制的。如果設成”未來”時間，那麼在Start Date時間還沒到之前，不會做有動作；如果之前是調定BeerConst，還是會維持設定的溫度，直到行程時間開始。 **要使用定時溫控，必須能連到internet，因為需要從網路取得時間** 溫度記錄。BrewPiLess只能把溫度記錄到雲端或另外的主機。選Data Log可以設定。這個運作方式就是在設定時間間隔時，ESP8266會呼叫設定的URL，把資料傳送過去 。因為資源不夠，ESP8266無法在運作其他功能時使用HTTPS，所以如果要把資料傳到Google Sheet，需要另一台主機協助。github上有詳細的說明。 網路上有些免費的IOT資料儲存服務，thingspeak.com就是一個例子，thinkspeak.com可以不需要https，所以可以直接上傳： 結果大約像這樣： https://thingspeak.com/channels/139809 系統設定，選單的System Config可以做一些系統設定。 Host/Network Name: APPLE產品及部分Android有支援mDNS，可以直接用類似http://brwpi.local的方式，這個就是用來設定名稱的。 User Name &amp; Password：在所有的設定都必須有認證。可以在這裡修改，預設兩個都是brewpi。 Always need password：指的是看LCD畫面需不需要密碼，因為其他的頁面都需要。進階安裝**1.安裝Arduino IDE 1.6.8以上，我是用1.6.9**。&lt;https://www.arduino.cc/en/main/software&gt;**2.安裝ESP8266/Arduino板子環境**打開Arduino的Preferences(偏好設定)，在”額外的板子管理員網址”欄，輸入[http://arduino.esp8266.com/stable/package\\_esp8266com\\_index.json](http://arduino.esp8266.com/stable/package_esp8266com_index.json)在”工具”, 選擇板子選單”選”板子管理員”，尋找esp8266，然後安裝。安裝後，板子選擇 NodeMcu1.0，Flash Size選擇 4M(3M SPIFFS)。如果己經把板子插上usb，serial選擇對應的序列埠。參考：&lt;https://github.com/esp8266/Arduino&gt;**3.安裝Library**找到你的Arduino Library目錄，通常是在 [使用者目錄]/文件/Arduion/libraries/，試著在”䓍稿碼”／”匯入程式庫”／”管理程式庫”中搜尋並安裝，如果沒找到，就手動下載後放在libraries目錄。- ArduinoJson &lt;https://github.com/bblanchon/ArduinoJson&gt;- WiFiManager 請用我改過的版本：&lt;https://github.com/vitotai/WiFiManager&gt;- ESPAsyncTCP &lt;https://github.com/me-no-dev/ESPAsyncTCP&gt;- ESPAsyncWebServer &lt;https://github.com/me-no-dev/ESPAsyncWebServer&gt;- ESP8266HTTPUpdateServer (newer version is needed. you might need to manually download the files.) &lt;https://github.com/esp8266/Arduino/tree/master/libraries/ESP8266HTTPUpdateServer&gt;- OneWire &lt;https://github.com/PaulStoffregen/OneWire&gt;整包下載所有程式庫：https://github.com/vitotai/BrewPiLess/tree/master/libs **（有時候，這些程式庫可能會有更新，導致其他問題，建議使用這個下載包）****4.下載 &lt;https://github.com/vitotai/BrewPiLess&gt; ，試著編譯及上傳（如果有接上板子的話）。**" }, { "title": "Simplified Mash Step", "url": "/posts/simplified-mash-step/", "categories": "BrewManiac", "tags": "", "date": "2016-08-01 00:05:27 +0000", "snippet": "I created a new branch for BrewManiac &amp; BMESP8266. The main difference of these branches is the simplified mash steps. The original mash steps has a name, and you can skip all except that last ...", "content": "I created a new branch for BrewManiac &amp; BMESP8266. The main difference of these branches is the simplified mash steps. The original mash steps has a name, and you can skip all except that last rest, bAmylase2.The new branch simplifies the mash steps. There are no names for the rests, but only labeled with number. The editing of mash rests on Arduino(BrewManiac) changes:1.You cannot skip the first Mash Step, because at least one mash step is needed.2.First step of editing a rest is entering the temperate. In original BrewManiac, you can SKIP the first rest. Now you can’t.3.In second step of editing rest time, the buttons are “Up Down Done More” instead of original “Up Down — OK”. Both “Done”(start) and “More”(Enter) will finish current rest editing, but “More” means you need more rest while done means that this is the last rest.4. Maximum 6 rests are supported. Exactly the same number of original named rest.No changes were made to Mash-in and Mash-out.If you want to do singe rest as most brewers normally do, you just enter mash (1) temperature, and “OK” enter mash (1) time, and “Done“.compared to original named rest, you have to skip Phytase skip Glucanase skip Protease skip bAmylase skip aAmylase1 enter temperature of aAmylase2 enter time of aAmylase2.3-step rest is common, too. The procedure will be enter mash (1) temperature, and “OK” enter mash (1) time, and “More“ enter mash (2) temperature, and “OK” enter mash (2) time, and “More“ enter mash (3) temperature, and “OK” enter mash (3) time, and “Done“.compared to original way skip Phytase skip Glucanase enter temperature of Protease enter time of Protease enter temperature of bAmylase enter time of bAmylase skip aAmylase1 enter temperature of aAmylase2 enter time of aAmylase2.The source is atArduino: https://github.com/vitotai/BrewManiac/tree/SimpleMashStepESP8266: https://github.com/vitotai/BMESP8266/tree/SimpleMashStep" }, { "title": "BMESP8266", "url": "/posts/bmesp8266/", "categories": "BrewManiac", "tags": "", "date": "2016-06-23 06:35:42 +0000", "snippet": "BME8266 is a project to enable wireless access to BrewManaic, an Open ArdBir clone. The system is cheap to build yet convenient. You can use any compatible browser to change the settings, program a...", "content": "BME8266 is a project to enable wireless access to BrewManaic, an Open ArdBir clone. The system is cheap to build yet convenient. You can use any compatible browser to change the settings, program automation steps, monitor brew process, and control the buttons. However, please remember that ***leaving the brew unattended is dangerous and not recommended.***Before text, let’s see the video first.- - - - - -Hardware setup***Due to the limitation of SoftwareSerial, hardware serials are recommended.***An Open ARdBir system, of course.A 4M bytes(32M bits) ESP8266 is necessary.Connect the serial between ESP8266 and Arduino: TX to RX and vise versa. There are two important things: Provide adequate power to ESP8266, which requires peak 500mA current. The signal of ESP8266 is 3.3V while Arduino is 5V. You need a level shifter/converter.The 3.3V-5V level converter can be done be lever converter board or simple register divider method.**Serial of Arduino**: Software or Hardware. The default setting is the hardware serial, or more specifically **Serial**, which uses D0 as RX and D1 as TX.SoftwareSerial can be used and other PIN can configured. The default configuration uses D10 as RX and D11 as TX.If you are using Arduino MEGA, you can use Serial1, which uses 19(RX) and 18(TX). I’ve tested these configurations, and they all work well.**Serial of ESP8266**. Software or Hardware. SoftwareSerial uses default GPIO4(RX) and GPIO5(TX). Hardware serial can be used, and there is an option, ***SwapSerial***, to change PINs to GPIO13(RX) and GPIO15(TX).*To use the hardware serial of NodeMcu, the USB cable should not be connected. I spent some time to figure out this.*Examples of wiring:![BME8266_HWHW](http://vito.tw/wp-content/uploads/2016/06/BME8266_HWHW.png)![BME8266_swhw](http://vito.tw/wp-content/uploads/2016/06/BME8266_swhw-1.png)- - - - - -Software Setup.The whole system comprises three parts: **BrewManiac**, **BMESP8266**, and the **Web**. They run on **Arduino**, **ESP8266** and the remote computer/tablet/phones, precisely the **browsers**.**BrewManiac** is just like Open ArdBir and can run independently without ESP8266.To install BrewManiac, use Arduino IDE 1.6.7 with board configuration Arduino AVR Boards 1.6.10.**https://github.com/vitotai/BrewManiac****BMESP8266** is based on esp8266/Arduino. setup esp8266/Arduino: follow the direction in the following link:&lt;https://github.com/esp8266/Arduino&gt; install additional libraries. If you cannot install them in Library Manager of Arduino IDE, download and put in Library directory.ArduinoJson https://github.com/bblanchon/ArduinoJsonWiFiManager &lt;https://github.com/tzapu/WiFiManager&gt;ESPAsyncTCP &lt;https://github.com/me-no-dev/ESPAsyncTCP&gt;ESPAsyncWebServer &lt;https://github.com/me-no-dev/ESPAsyncWebServer&gt;ESP8266HTTPUpdateServer &lt;https://github.com/esp8266/Arduino/tree/master/libraries/ESP8266HTTPUpdateServer&gt; (***newer version is needed. you might need to manually download it***) Download the source files from Github: https://github.com/vitotai/BMESP8266/tree/master/data Build and upload the image. The “Flash size” setting under “Tool” should be “4M(3M SPIFFS)”.**The web part** comprises HTML files, Javascript and images that will be downloaded and rendered by the browsers. There are two ways you can upload these files. Using ESP8266FS to upload. Follow the instructions in the following link&lt;https://github.com/esp8266/Arduino/blob/master/doc/filesystem.md#uploading-files-to-file-system&gt; Online update. See the operational sections for detail information.- - - - - -Usage: Connect ESP8266 to your WiFi network. At the first time or when previous connected network is not available, ESP8266 will configure itself as an Access Point and create a Network, named “bm”. Use your computer or phone to connect to the network “bm”. If the browser does not show automatically, open the browser and browse any page, a captive portal will be shown, and you can use that page to configure the network setting. After the ESP8266 connects to the WiFi network successfully, the IP will be shown on the LCD of Arduino. Open your browser and type browse to the IP. If you are using Apple’s product, you can also use “http://bm.local” instead of the real IP address, like “http://192.168.1.x”. “bm.local” instead of the IP address will be used in the following sections for convenience. If the web files haven’t been uploaded by ESP8266FS, the “update” page will be shown. Otherwise, the normal main page will be shown.URLs:BME8266 is web-baed. The interface is rendered by the browsers, and the functions are accessed by browsing to the pages. In the following description, “bm.local” should be replaced by the really IP address shown on LCD if you are not using Apple’s product. Main application: http://bm.localIf you know how to use Open ArdBir or BrewManiac, you should know how to use it. One thing to remember is that **you can access setting and automation setting only when BrewManiac is in Main Screen state, not Manual, Auto, nor Setup.** Update Page: http://bm.local/updateIf your router/WiFI is connected to internet, you can update the firmware and Web files on-line. BMESP8266 will check the availability of new firmware and web files. If there are new files to be update, you can update them in this page. If you don’t upload the web files by ESP8266FS, they can be downloaded in this page too. NOTE: the firmware update supports only **default** configuration.***The following pages are for developers. That is to say, you should know what you are doing and you are on your own by accessing them.*** Firmware update page: http://bm.local:8008/systemupdateThis page can be used to upload ESP8266 image over the air. The username is “brewmaniac”, and the password is “Relax, Don’t Worry, Have A Home Brew”, all first letters, non-capital. File Manager: http://bm.local:8008/filemanagerYou can manually manipulate the files through this page. Be careful when doing so.- - - - - -**Known issues.** Incompatible to Microsoft Edge and IE. The fact is that both browsers doesn’t support SSE, Sever Side Event, a HTML5 feature. SSDP does not work. I leave this as next enhancement, if possible. The fraction part of temperature reading doesn’t match the real value. No continuous button action from web page. When a button is pressed without release, the value under editing won’t change like it does on BrewManiac. No simultaneous buttons pressing. Only one button at a time. Sometimes, the response of button lags. It is the nature of networking.Q&amp;AQ: Is it possible to keep the phone from sleeping or get noticed when events happen?A:No. Not for WEB pages. Those are privileges of native APPs. I might write a wrapper APP for iPhone in the future, which will be able to do both.Q: Are you going to support Microsoft Edge?A: Do me a favor. Download and use Chrome. More than tow ways I can think of to support Edge, but using Chrome might be easier for both you an me.Q:May I use ESP-01 or other ESP8266 boards?A: Yes, as long as it has 4M Bytes(32M bites) flash and you can program it. (I assume every ESP8266 has a Serial(UART) port.) I preferred nodeMcu 1.0(ESP-12E) because it is the only one board that is sure to have 4M flash and there are additional PINs available.Q: How many concurrent connections does BMESP8266 support?A: I would say maybe 3 or 4, because the information I red states maximum 5 connections are possible, and one have to be reserved for uplink. However, it is a tiny system and there is no benefit for you to stress it. More than 2 concurrent connections might result instability.Q: Can you make the display prettier?A: No and Yes. I am never an artist, and I used to write non user interface related programs. This might be the best I can do. Besides, I tried my best to reduce resource requirement of the system. For example, there are a lot of shiny button icons available, but using a few lines of CSS save memory and network traffic. However, I won’t reject any help and effort to beautify the interface." }, { "title": "Video of working WiFi", "url": "/posts/video-working-wifi/", "categories": "BrewManiac", "tags": "", "date": "2016-06-09 20:01:34 +0000", "snippet": "I am going to try it on tomorrow’s brew. Wish me good luck!OK, The test run well before boiling. However, EMI attacked and the LCD blinked with random patterns. ESP8266 has nothing to do with EMI b...", "content": "I am going to try it on tomorrow’s brew. Wish me good luck!OK, The test run well before boiling. However, EMI attacked and the LCD blinked with random patterns. ESP8266 has nothing to do with EMI because I had it before using ESP8266. I should have fixed this before. In fact, I couldn’t see the LCD in the middle of MASHING, but the ESP8266 worked fine and I could check the status on my iPhone. After Mash-out, I quit the automation, power recycle the system, and resumed the brew. Everything was fine until boiling point was almost reached. The connection between Arduino and ESP8266 lost. I still could connect to ESP8266 by my iPhone, but it was not able to connect to Arduino. After the brew finished, everything went bak to work normally.I am not sure if it is a hardware(bad connection) or software issue. ESP8266 requires peak 500mA power. If the power supply is not enough ESP8266 would be very unstable. “Thanks” to my bad soldering skill and loose hardware connections, I had some experiences about it. ( I “fixed” it by place the boards at different places.) Further investigation is needed.To Robert,Basically, just connect the SERIALs, software or hardware. I have tried the following configurations successfully. You have to change the definition in the source code, of course. I think the divider method will also work.(The pictures of the boards are copied from other sites. If it infringes your right, please let me know.) Picture sources:NodeMcu: https://github.com/nodemcu/nodemcu-devkit-v1.0Arduino:https://www.arduino.cc/en/Tutorial/EEPROMClearconvert board: aliexpress" }, { "title": "BrewManiac goes online with ESP8266", "url": "/posts/brewmaniac-goes-online/", "categories": "BrewManiac", "tags": "", "date": "2016-05-07 07:09:53 +0000", "snippet": "I finally make it to the first development milestone of WiFi-enabled BrewManiac.Being excited, I want to share with those who watch BrewManiac by providing my plan of WiFi features.***Features*** ...", "content": "I finally make it to the first development milestone of WiFi-enabled BrewManiac.Being excited, I want to share with those who watch BrewManiac by providing my plan of WiFi features.***Features*** Web-based interface, including setting, automation editing, and status monitoring. Check the following pictures to get some feeling. ESP8266 firmware OTA update. Web-based. Captive portal for wifi configuration, which includes network selection and password setting. (Maybe in case there isn’t a router, the ESP8266 can serve as an AP.) Zeroconf. The IP information will be shown on LCD, but it is more convenient to connect by just “http://brewmaniac.local”. Currently mDNS(for Apple) is working smoothly, and the library supports DNS-SD(Android). I will try to make SSDP( Windows) work.***Future development,*** which means it won’t happen soon or be available at the first release Recipe(mash schedule and boil/hop time) editing and saving. UI enhancement ( don’t hold your breath. I am not good at this. Browser notification. ( I haven’t study them yet.)***Hardware*** ESP8266-based boards. ESP-12E is recommended. I use a NodeMcu, which is ESP-12E with breakout board and a USB port connected to UART0. The connection between Arduino and ESP8266 is basically UART or Serial. Currently I use SoftwareSerial on both platforms with 38400 baud rate. However, hardware UART is highly recommended. Please note that a converter board or voltage divider circuit is necessary because the signal of ESP8266 is 3.3V while Arduino is 5V.***Technical Software Detail*** The Arduino code has not been changed too much. Basically, the code for WiFI is a revised version of Bluetooth one. Instead of text, I change to binary for lower data rate and more information carried. The ESP8266 code is baed on ESP8266-Arduino. https://github.com/esp8266/ArduinoThere are still a lot of jobs to be done and bugs to be fixed. However, I am glad to prove that the architecture works.The current display is designed for screens of phones, it doesn’t look good on computers. It’s not a big deal. right? " }, { "title": "Grainfather + BrewManiac", "url": "/posts/grainfather-brewmaniac/", "categories": "BrewManiac", "tags": "", "date": "2016-02-05 03:17:56 +0000", "snippet": "Finally, I brewed with my BrewManiac with Grainfather. Yes, it is not really finished, and I have not yet find a good control box. Nevertheless, it just worked.I used three steps mash, 50(C)-57-67,...", "content": "Finally, I brewed with my BrewManiac with Grainfather. Yes, it is not really finished, and I have not yet find a good control box. Nevertheless, it just worked.I used three steps mash, 50(C)-57-67, and got 88% pre-boil efficiency, which is very good.Here are some catches: There should be a way to control PUMP during boiling stage. The original Open ArdBir has a setting for PUMP ON/OFF during Boiling stage, but you can’t turn it on or off during Boiling. Using GrainFather, the pump is not necessary to be ON during boiling, but if the counterflow chiller is to be used, the pump should run for 5 minutes to sanitize the counterflow chiller. It’s very easy to add pump control during boiling because only UP and DOWN buttons are used in that stage. I’ve already modified the code on github to support PUMP control during boiling. PUMP REST. I had no idea of the reason to use PUMP REST, but I programmed it as what OPEN ARDBIR does. I set it to 5 minutes and found the temperature dropped a little during the REST period. Maybe I should set it to zero next time. The setting of boiling temperature. I set it to 100 Celius, however it was boiling at 99.75, which made it fail to reach “boiling” stage. I had to quit the process to adjust boiling temperature setting and resume the process. There was a bug of negative number display. patched, already. GrainFather is built to be modified. I believe.[Update:] More fixes: Adding Pause function during boiling. The Pause function during boiling will pause TIMER only and keep the heating element working under PID control. It will be available after boil temperature reaches. It should be useful when too much wort is collected, and extended boiling time is desired. In that case, you can PAUSE the timer after boiling and resume the process after a period of time. Bug fixed. No sound alarm when boiling finishes. Bug fixed. Blinking time and repeating buzzing when return to Main Screen. [Thanks to Andy.]" }, { "title": "LazySusan- Auto Hop Dropper", "url": "/posts/lazysusan-auto-hop-dropper/", "categories": "BrewManiac", "tags": "", "date": "2015-12-23 20:16:50 +0000", "snippet": " Sometimes, we do something because it can be done. This is something like that.Components: Arduino Uno KY-040 rotary encoder I2C LCD 16×2 (I use a 20×4 LCD, but I design to use 16×2) Stepper m...", "content": " Sometimes, we do something because it can be done. This is something like that.Components: Arduino Uno KY-040 rotary encoder I2C LCD 16×2 (I use a 20×4 LCD, but I design to use 16×2) Stepper motor 28BYJ-48 w/ ULN2003 driver board Optional a microswitch or photo interrupter Buzzer A Spinner or conveyor that can be driven by the motorWiring: (5V&amp;GND has to be wired for Driver Board, Ky040, and LCD)[![hop dropper](http://vito.tw/wp-content/uploads/2015/12/hop-dropper.png)](http://vito.tw/wp-content/uploads/2015/12/hop-dropper.png)I don’t have the resource to build a complicated machine. Therefore, I let the motor directly drive the spinner or rolling band. If the motor is not powerful enough, a gear set or a more powerful motor can be used. A larger torque stepper motor might cost more, so a cheap servo motor is also a good option. The sketch must be modified to use different components.A cheap continuous servo I found:http://www.ebay.com/itm/201482392044?_trksid=p2060353.m1438.l2649&amp;ssPageName=STRK%3AMEBIDX%3AITUsage:1. you have to enter correct settings according to your system. The settings are **Number of Buckets** (hop holders, I felt like calling it buckets), **Auto Anchor**, **Spin Over**, and **Forward Rotate**. To access the setting, enter \\[**More../Settings\\]**2. Set the correct moving distance for every bucket. in \\[**More../Set Position** \\].3. Optionally check if it works as expected. in \\[**More../Test Spinner**\\].4. Edit the hop schedule. in \\[ **Edit** \\]5. \\[**Run**\\] the hop dropper.Ready to go? Wait. Here is One More thing. The hop holders can be at any position when the system is started, and putting them into correct and “ready” positions is necessary. I call it “anchor” because there should be a mark or microswitch at the “anchor point” which indicates that the holders are at the correct positions, in which the first hop holder is ready to dump the hop. Moving the bucket to correct position is necessary when “**Run**“, “**More../Set Position**“, and “**More../Test Spin**“.Details:**Main** menu Edit: edit hop schedule Run: start auto hop dropping Remote: to be implemented. it doesn’t function for now. More..: setting and othersMore.. menu Test Spinner: to test the hop dropper Set Position: set hop dropper position. to set correct distance to move between hop Manual Spin: manually move the hop holders. Push to enter/exit. Settings: settings Back: back to upper level**More../Settings**: Bucket Number: the number of hop holders. It ranges 4-12. Auto Anchor: by using microswitch or photo interrupt, the dropper can move to ready position automatically. Spin Over: If this value is not zero, the dropper will move over the amount specified, hold for one second, and then move back. FW Rotate: CW(clockwise)/CCW(counterclockwise). Facing the shaft of the motor, the rotating direction of the shaft to make dropper move forward.**How to put the dropper/spinner in ready state?**If Auto Anchor is set to YES, the dropper/spinner will move to the position automatically. Otherwise, the dropper/spinner will start to move until the rotary encoder is pushed, when it moves the holders to correct positions. After that, turn the encoder to adjust the position and push again to finish “anchoring process”.**How to set the position?**First, anchoring the dropper/spinner. Then turn the encoder until the first hop is dumped, then push the encoder. Do the same thing for other holders.**How to test the dropper/spinner?**First, anchoring the dropper/spinner. Then push to “dump” first hop, then the rests.**How to edit the hop schedule?**First, set the boil time by turning the encoder (5~120min). Then, edit the time of each event. An event can be an Alarm or Hop Adding. LONG PRESSing the encoder to edit the type to Alarm/Hop. Push the encoder to back to editing time. Push for next event editing. Change the time to ZERO to finish editing. The time can be the same as previous event. In that case, the hop will be dumped right after the previous one.**How to run?** First, anchor. Then, put hop in the corresponding holders. When the wort starts boiling, push the encoder to start counting time. LONG PRESS the encoder to abort running.Find the code at:https://github.com/vitotai/LazySusanYou will need three libraries that I created:[libraries](http://vito.tw/wp-content/uploads/2015/12/libraries.zip)You will also need I2C LCD library for Arduino." }, { "title": "BrewManiac 0.01alpha released", "url": "/posts/brewmaniac-0-01alpha-released/", "categories": "BrewManiac", "tags": "", "date": "2015-11-25 04:10:05 +0000", "snippet": "WARNING, use at your risk.Please regard this as a preview release.After using a MEGA platform and being able to use the serial as a debug tool, I found that SoftwareSerial receives wrong data frequ...", "content": "WARNING, use at your risk.Please regard this as a preview release.After using a MEGA platform and being able to use the serial as a debug tool, I found that SoftwareSerial receives wrong data frequently. Since I didn’t expect such high error rate, I didn’t design to handle it. The next release will address this issue.iPhone APPhttps://itunes.apple.com/us/app/brewmaniac/id1030609251Arduino Sketch:https://github.com/vitotai/BrewManiacKnown issues:– The data transmission error rate is too high that loading setting from Arduino frequently fails. (I’ve modified the code to for better efficiency. The APP, however, need some time to pass Apple’s review)– I cannot change BAUD rate by issuing AT+BAUD command.Mysterious phenomena of HM10 behavior. To make the AT+BAUD*, like AT+BAUD2 for 38400, effective, the power of HM10 must be disconnected for a while, like 10 seconds.[Update: the baud rate of HM10 will change after next power cycle. Reset or restart won’t do the magic, but totally disconnecting power will do.]" }, { "title": "BrewManiac", "url": "/posts/brewmaniac/", "categories": "BrewManiac", "tags": "", "date": "2015-08-20 05:31:22 +0000", "snippet": "BrewManiac is a rewritten program which runs on the hardware for Open Ardbir. The functionality an behavior is almost the same as Open Ardbir. The reason to re-write from scratch is to support wire...", "content": "BrewManiac is a rewritten program which runs on the hardware for Open Ardbir. The functionality an behavior is almost the same as Open Ardbir. The reason to re-write from scratch is to support wireless communication. Currently, HM10, a BLE transceiver, is supported. I might consider supporting WIFI by ESP8266 in the future.[Some technical Detail]The real detail hides in the code. In a nutshell, Open Ardbir is like single-threaded while BrewManiac is event driven. The difference of program structures makes different behaviors between Open Ardbir and BrewManiac. For example, Open Ardbir seems to lock-up when buttons are pressed because the counting time will stop running. On BrewManiac, temperature and time will keep updating while the buttons are pressed. In addition, the timing of buzzer of Open Ardbir is precise while it is not very precise on BrewManiac. Open Ardbir stops to wait while BrewManiac notes the time an let buzzer code decide when to stop. Since no interrupt is used, the time cannot be guaranteed.[/Some technical Detail]The differences between Open ArdBir and BrewManiac are listed as below. The response time to button pressing. The response of BrewManiac is very quick. The program uses 150ms to filter fat fingers. The real time needed for BrewManiac to recognize button pressing will be a little more than 150ms. It is usually less than 250ms. Skip Rest. During Automatic Brewing, users can skip current rest and go to next rest. Users need to confirm the operation. Before confirmation is made, the count down will stop on Open Ardbir. The timer will keep counting on BrewManiac. Sound of Buzzer. Delay Start. When waiting for delay start, users cannot interrupt on Open Ardbir, except back to main menu. On BrewManiac, users can go to Mash-In directly or back to main menu. However, this function may not be available in final version for FLASH size issue. Cooling. BrewManiac shows time since entering cooling stage. Different representation. BrewManiac will display 5m to represent 5 minutes, while Open ArdBir uses 00:05:00 or 5’. Temperature Unit. BrewManiac uses only Celius only. Fahrenheit can be displayed, in price of non-integer numbers. Count down for manual mode. I see it in source code of 2.8.3. However, I was not able to make it work on my test platform. Therefore, I implement this functionality in the way I like. When “Enter” and “Start” buttons are pressed at the same time, the time display(00:00:00) will start to blink to indicate that it is under editing. Use Up/Down buttons to change the value, and press “Enter” and “Start” buttons at the same time again to end the edit of count down time. If the time ends with a non-zero value, count down mode is activated. When setting temperature is reached, the count down will start. When the time counts down to zero, BrewManiac starts counting up and exits count down mode. During counting down and before counting to zero, if setting temperature is changed to two degrees away from current temperature, the time for count-down will be reset to original setting value. Resume of interrupt in automatic brewing. Please see the following paragraphs. Recipe management. BrewManiac doesn’t support it. Please see the following paragraphs. Language. English only for now. However, all strings are collected in a file, so it is very easy to support other languages that uses alphabets of ASCII codes. LCD. 20×4 only. Although I had considered supporting 16×2 at the beginning, I find it is not a big deal to support 20×4 only.About resume interrupt of automatic brew.I didn’t want to implement this function. However, considering the time of brewing is long enough, it is better to have resumption of automatic brew process, in case of power failure. If the brew process is interrupt in previous brew, BrewManiac will ask “Resume Process?” when entering automatic brew, while Open Ardbir will ask a step later. The resumption of automatic brew is available only if the interrupt happens during the time from mashing to end of boiling. If the interrupt happens before the malt is added or after end of boiling, BrewManiac will not ask for resumption.About recipe management.It seems to be a very good function. However, the small LCD makes it hard to use. Because of the limitation of display and input, the time to review or check a recipe should be the same as making one. Since BrewManiac supports wireless communication, which is the real reason I create it, I prefer doing it on smart phones." }, { "title": "BrewManiac中文版", "url": "/posts/brewmaniace4b8ade69687e78988/", "categories": "BrewManiac", "tags": "Open ArdBir Arduino", "date": "2015-08-01 08:08:29 +0000", "snippet": "BrewManiac是根據Open Ardbir的硬體架構及功能，完全重新改寫的軟體。功能上幾乎和Open Ardbir一致，只有一些差異。重新改寫的的目的在於支援無線網路，短期目標是藍芽模組(HM10)，長期可能會支援wifi（ESP8266）。[程式細節]真正的技術細節在程式碼中。簡單地說，Open Ardbir的作法是單一執行線，而BrewManiac則是event driven，正是...", "content": "BrewManiac是根據Open Ardbir的硬體架構及功能，完全重新改寫的軟體。功能上幾乎和Open Ardbir一致，只有一些差異。重新改寫的的目的在於支援無線網路，短期目標是藍芽模組(HM10)，長期可能會支援wifi（ESP8266）。[程式細節]真正的技術細節在程式碼中。簡單地說，Open Ardbir的作法是單一執行線，而BrewManiac則是event driven，正是因為這個基本架構的不同，有些行為表現有所不同。例如，在open Ardbir上，按住按鈕不放，整個系統類似卡住，時間數秒都不會更新；但在BrewManiacs上，時間溫度等都會繼續更新。另外，Buzzer的控制在open Ardbir上可以很精準，但BrewManiacs則不能很精準；因為open Ardbir是停下來算時間，BrewManiac則是記下時間，等負責buzzer程式碼執行碼可以執行時才去停或啓動Buzzer。[/程式細節]以下為BrewManiac和Open Ardbir(根據2.8.3)行為上最主要的差別： 按鈕反應：由於架構不同，BrewManiac的按鈕反應比Open Ardbi快上許多。為避免誤觸，預設值設定是150ms以上才認定有按鈕，真正對按鈕反應則是在手離開後。由於架構問題，需要比150ms還略久一點，但大致不超過250ms（正確數值還待測試）。 SKIP：在自動釀酒行程中，可以直接結束一個糖化休止，進入一下個；長按（至少1.5秒）後，會要求確認，在沒有確認前，open Ardbir會暫停計時；在BrewManiac中則會繼續倒數。 聲音：部分出於個人喜好，部分由於程式架構，聲音和Open Ardbir不同。 Delay Start，自動行程時，可以設定延遲啓動，Open Ardbir在等待時不能操作， BrewManiac則可以。另外，BrewManiac可以延遲啓動的時間也比較長。後來因為Flash不夠，這個功能被捨棄了。 冷卻：BrewManiac在冷卻時會有時間顯示，顯示進入冷卻的時間。 設定的顯示略有不同，部分出於個人喜好，部分則因為一致性或節省程式碼；例如5分鐘，Open Ardbir輸入時間有時是用00:05:00表示，有時則是用5’來表示；在BrewManiac一律用5m表示。 溫度單位，BrewManiac內部全部以攝氏運算、儲存；但仍然可以顯示華氏。不過，顯示華氏時，數字不是整數。 手動行程的倒數；Open Ardbir 2.8.3的程式碼中有同時按START及ENTER會變成倒數的功能。不過，我在我的測試平台上並沒有試出來。因此，這個功能是照我的想法去做的：在同時按START及ENTER後，時間顯示會開始閃爍，表示現在按上／下（Up/Down）是修改倒數時間。再一次按同時按START及ENTER後，結束倒數時間的輸入。如果時間輸入不是零，則為倒數模式；當溫度到達設定時會開始倒數。當倒數到零時，會發出聲音提醒，然後又恢復正常計時模式。在倒數時，如果改變設定溫度以致設定溫度比目前溫度大於2度，則倒數會停止，且時間恢復為設定值 。 自動行程Resume；詳細說明如下。 配方Recipe的儲存和管理：目前BrewManiac不支援；詳細說明如下。 語言：目前只有英文，但幾乎所有的字串都放在一個檔案中，LCD有支援的、ASCII表可以表示的，都很容易改。 LCD，只支援20×4，雖然一開始有考慮支援16×2，但是，覺得20×4都太小了，就不考慮16×2了。關於自動行程Resume我沒有非常了解Open Ardbir自動行程回復的實際操作，原本我並不打算做這項功能，但考慮到釀酒時間不算短，恢復的功能確有必要，所以還是做了。在BrewManiac中，上一次的自動行程沒有完成，會在進入自動行程時馬上詢問，如果選擇不恢復，記錄會被清除，下次進入就不會詢問。自動行程的回復只會在”開始糖化後”（放入麥芽後）到”煮沸結束”的中間有中斷時才會回復。在放入麥芽前或冷卻時中斷都不會有回復自動行程。關於Recipe的儲存和管理Recipe的儲存和管理是很方便的功能，但是實際上卻不怎麼實用，關鍵在於Ardbir的LCD太小，顯示不易，”看”配方的時間和”編”配方的時間一樣，要叫出一個配方可能還要多按幾次按鈕，還要記得配方的內容。既然BrewManiac支援無線功能，就把這個功能放在手機上就行了。" }, { "title": "My Lever &#8211; Arrarex Caravel", "url": "/posts/lever-arrarex-caravel/", "categories": "caffe', uno", "tags": "", "date": "2014-10-28 06:50:06 +0000", "snippet": "入手這台純綷是意外，我原本只想找台spring lever，但在Home-barista(HB)的lever討論區中，不小心就會看到這兩台很熱門的機器：Arrarex Caravel/VAM以及 La Peppina。La Peppina是一台不折不扣的spring lever，但第一眼並沒有讓我有想擁有的感覺，再加上她用料很差，不符合我心目中可以傳子傳孫經典原則。而Caravel/VAM卻...", "content": "入手這台純綷是意外，我原本只想找台spring lever，但在Home-barista(HB)的lever討論區中，不小心就會看到這兩台很熱門的機器：Arrarex Caravel/VAM以及 La Peppina。La Peppina是一台不折不扣的spring lever，但第一眼並沒有讓我有想擁有的感覺，再加上她用料很差，不符合我心目中可以傳子傳孫經典原則。而Caravel/VAM卻有這些特點：1.不需要工具就可以拆開清潔；包括活塞、鍋爐等。連更換電熱棒都不需要工具*1。2.電熱棒在鍋爐外，沒有泡在水中。3.鍋爐、活塞、沖煮頭為18/8不鏽鋼。4.開放式鍋爐(open boiler)、重力給水（gravity fed）。以老機（以年代來說，稱不上古董吧）來說，前三點意味著好整理，是手工藝不佳的人的理想目標，如果沒有缺件或壞掉的零件，洗一洗就可以用了。第4點對行家來說是一個重點，因為那意謂著不會過熱，溫度好控制。我在HB看過一個故事，很像是編的，但很深得我心。“1960年代初期，sales跟工程師說，除非搞出可以打牛奶的方法，不然Arrarex就會跟嘟嘟鳥一樣絕跡。聽到這話，工程師們是不是就決定放棄了如此漂亮、簡單的開放式鍋爐、重力給水的設計？不，工程師們決定提早退休，叫這些sales一邊涼快去吧。”*2對一個工程師來說，是一個嘴角會上揚小故事，所以雖然不是spring lever，如果有緣（換包話說，如果不貴），我也不排斥。根據Francesco的網頁記載，Arrerex Caravel的專利注冊於1956年，生產時期到70年代，前後有十幾個版本，各個版本間外型、構告大致相同，差異在於細節。原則上，愈早的版本用料愈好。最早期的商標是VAM，是人頭帶皇冠標誌，蓋子上有一個小桿，拉桿的型狀也比較流線、比較漂亮。這個版本出現的話，價格都不低。常在邪惡海灣行走的人，如果不是財大氣粗，就會了解到買東西是要看機緣的。機緣不到時，出再高都變第二高標，機緣到了，你會懷疑這個標是不是有問題，怎麼沒人跟你搶。總而言之，有一台看起來是V1.0版本的就到我家了。很不幸地，從照片看不出來的是電熱棒破了。電熱棒壞了也無妨，因為可以直接加熱水或外加電熱湯匙，因為原本是220V的機器，在美國很多人也是這樣用。因為Caravel很受歡迎，沒多久在Home-barista上看到有人重新生產了一批電熱棒，就趁機買了110V的，把這台Caravel變成110V的機器。這台機器的特點前面都說了，隨便google一下也可以找到一大堆圖，所以我就隨便拍幾張應付應付了：拆到像這樣不用一分鐘，也完全不需要工具。溫度控制很簡單而有效，基本上是利用金屬熱受熱膨脹後彎曲來切斷電源，我這台溫度設定最高時，斷電溫度差不多在91度，斷電後溫度還會上升到93~94度左右。據說可以調整，我還沒摸索出來。“活塞有洞”*3：因為了這個洞，多了一個O ring。我原本以為這個洞的目的是洩水，避免水積在活塞中，後來才發現還有另一個作用：避免真空效應破壞咖啡餅；當拉桿向上拉，這個洞會打開，可以讓空氣進入，如果沒有這個洞，在活塞還沒到出水口前，活塞的移動會創造了一個真空，空氣就會從咖啡餅進入，破壞咖啡餅的結構。Caravel的basket是我用過口徑最小的：43mm。相對小的口徑，用同樣多的粉，厚度就變厚，帶來的影響是對填壓寬容度變高，另外咖啡粉也的比較不需要太細。小口徑還有另一個影響：壓力。根據 P=F/A公式，小口徑可以用比較小的力道得到比較大的壓力。根據網友的計算*4，約莫需要13.5kg。因為粉厚，隨便填就可以，但我壓一次只能得到10幾cc的咖啡，網路上流傳的Fellini move我始終學不會，試了也沒有覺得比較好，所以都要壓兩次才能得到接近30cc，還好因為活塞的洞，拉第二次不會破壞咖啡餅。除了調整溫度我還沒破解之外，因為買了新加熱棒，也讓我發現一個問題：原本的電熱棒並不會接觸到下方的V型鐵架，但後來我買的這支會。原本的：現在的：這有兩個影響，第一是鍋子無法正確地卡住，不過後來我發現V型鐵架的邊有一邊是斜的，有一邊沒有，把它反過來，高度就夠了，可以卡住，但還是不夠緊，有時候會鬆開。第二個影響是電熱棒直接觸鐵架會將熱傳到整台機器。我在HB有看過討論有人說早期或有些機器不會熱，原因不明，我猜是這個原因；不過，我的問題並沒什麼人回答，有一個人回應認為應該有接觸才對。的確，V型鐵架怎麼看就是用來支撐加熱棒用的，不然實在看不出那個鐵架有什麼用。但既然我這台原始的狀態就沒接觸，我相信那也是正確的狀態。這個問題我應該有機會找到解答。*1 後期的版本電熱棒的接點改了。*2 原文It’s the early 1960s and we’re Arrarex engineers being told by the marketing guys that unless we come up with a way to steam-froth milk, Arrarex will go the way of the dodo. Do we abandon our beautifully simple temperature-stable open kettle and our gravity-fed stainless steel group? No, we take early retirement and tell the guys in marketing to take a ride on a rolling donut–whatever the equivalent Italian idiom would be.*3 有些版本的活塞沒有洞。*4 HB討論" }, { "title": "My Lever &#8211; Faema Baby", "url": "/posts/lever-baby/", "categories": "caffe', uno", "tags": "", "date": "2014-10-28 02:54:05 +0000", "snippet": "最早看到presso發表時，就對它很有興趣，但一下子就被一堆拉桿斷裂、塑膠水槽破裂的討論給澆熄*1。Presso基本上是從list中移除了。事隔多年，看到Francesco的網頁後，我才知道，原來Presso的創意並不是那麼的新穎，早在1950、1960年代，義大利就有類似的產品，而其中可能是最早、至少是最具代表性的*2，就是Faemina/Faema Baby了。那麼，50年前的老東西和現...", "content": "最早看到presso發表時，就對它很有興趣，但一下子就被一堆拉桿斷裂、塑膠水槽破裂的討論給澆熄*1。Presso基本上是從list中移除了。事隔多年，看到Francesco的網頁後，我才知道，原來Presso的創意並不是那麼的新穎，早在1950、1960年代，義大利就有類似的產品，而其中可能是最早、至少是最具代表性的*2，就是Faemina/Faema Baby了。那麼，50年前的老東西和現在的press相比如何？根據home-barista.com的討論，Faemina/Faema Baby在材質耐用度和設計都完勝Presso。和presso相比之下，最大的缺點是：買不到新的。不過，儘管在其他地方少見，可以想像在有個地方一定可以找得：義大利民間，換句話說，ebay.it會有。實際上，它在ebay.it上出現的頻率並不低，不幸地，就像其他的老機器，缺件的比率很高，偶而有完整又寄海外的，得標價比都比較高。當然，再一次，耐心得到回報，在幾次競標失利後，突然就像流星雨一樣，連續三四台baby同時出現，找了一台只寄義大利的，詢問之下，賣方願意寄，而且剛好有一台幾乎同時間結束但有寄海外的；這時候，我就知道機會來了。結果不用多說，有趣的是，我事後好奇查了一下，發現兩台的結標價一樣，而且第二高標的人是同一個人！在此祝福這位同好早日買到一台Baby。拍賣中的照片看不出掉漆得這麼嚴重，不過不影響功能就先不管，以後有空再找人拋光烤漆。詳細介紹可以看Francesco的網頁；基本上，不管那個版本都一樣，只有mark不一樣，之前的版本是寫Faemina Baby，最後一個版本則只有標Faema Baby。我這台是最後的Faema Baby。Faema Baby的構造超級簡單，大部分是鋁合金，只有小部分是鋼鐵：受力最多的轉軸以及連接拉桿和活塞的支架。Basket很大，也同時充當了活塞室的功能。全機只用了一個gasket，而這也是這台機器唯一需要替換的部分，很幸運地我這台的gasket狀況還不差。Faema Baby有一個類似摩卡壺減量板的壓粉器，也同時充當分水濾網，它可以保護咖啡粉避免被水沖壞，這也是除了basket和portafilter最容易缺的零件。我這台的濾網雖然還在在，但己經有點變型了，本來想找尺寸一樣的摩卡壺減量板來用，卻找不到尺寸剛好的。有天心血來潮，查了分水網，赫然發現有不少pump機的分水網正是57.5mm－我量到的尺寸，而我的silvia剛好就是用這個尺寸的。這片濾片重要嗎？當然重要，沒有這片濾片，倒水時會沖壞咖啡餅，所以一定要用。但對原來的濾片設計，我倒是有些疑問：一是出水孔的方向；分水網除了分散水流外，另一個作用是防止或減少咖啡粉回流，所以有些會設計成上大下小，讓咖啡粉不容易回流，但這片濾片的出水孔是上小下大，和一般設計不同；這只是小問題，影響不大。第二個問題比較麻煩：它的邊綠向下凸出，和一般的減量片是一個平面不同，它的邊綠有凸出；這個設計會影響使用，如果先填壓後，再塞入此濾片，會破壞壓好的咖啡粉；如果直接用這個濾片填壓，因為我的這片己經變型了，會造成中間凹陷，結果也不好。堅持用這片的最好方式是先填壓，放入濾片但不壓，只是輕輕放進去，最後壓咖啡時不能壓到濾片。使用silvia的分水網基本上可以解決問題。在看咖啡成果之前，來點簡單的計算題，讓我們來看看這台機器能提供多少壓力。條件：濾器約略57mm，槓桿約莫是11倍(2cm:22cm)。公式： P=F/A; 1 bar = 1.019716213 kg/cm2所以說，如果想得到 9 bar的壓力，需要的力量為：F = P * A = 9 * 1.019716213 * pi * (5.7/2)^2 = 243.2 kg以11倍平均一支槓桿的受力為 243.2 /11/2 = 10.6 kg以上是理論值。實際上10kg並不難達到，但沒有儀器可以量，所以我也不能肯定是否真的有到 9bar；至於是不是真的有到9bar，其實也沒有很重要；重要的是最終的產品。實際使用後，我發現home-barista的討論很有參考價值：15~16g咖啡粉，需要比較細的研磨，粉壓實後，第一次的熱水當加溫用倒掉，第二次倒水再壓，壓到滴出咖啡時停一下做預浸，然後再壓到底。我的經驗是壓到底後就不要停留，直接取走咖啡杯，因為如果咖啡餅厚一點，壓到最後有可能壓到那片濾片，壓到變型就算了，破壞咖啡餅也造成後面出來的咖啡會破壞整杯咖啡。這是用silvia分水網直接壓的成果，看起來還不錯。（老實說，這杯很難喝，因為是直接用98度的熱水，後來又做了一杯93度左右的，就好多了。）除了構造簡單，有一點很有趣的是：Faema Baby的basket接近商用機的58mm，假設施力能讓壓力接近9bar，沖煮條件事實上是接近使用58mm basket的機器的。所以咖啡粉量、粗細理論上應該和58mm basket的機器接近才對。我能得到最好的結果也正是用和silvia接近的粗細。*1 即使後來出了二代改名ROK，宣稱改善材質並終身保固，但失去的信心是很難回來的，而且售價也漲到199相對比較難下手的價位。*2 Gaggia Gilda 54俗稱Rabbit ear有點類似，但除了也是用雙耳外，其他構造完全不同，而且Gaggia Gilda 54有spring。" }, { "title": "聰明玩Baby Boss～場次時間表智慧化", "url": "/posts/e881b0e6988ee78ea9baby-bossefbd9ee5a0b4e6aca1e69982e99693e8a1a8e699bae685a7e58c96/", "categories": "iPhone App", "tags": "", "date": "2013-10-17 12:24:52 +0000", "snippet": "那天帶著小孩去京華城Baby Boss，結果小孩玩得很累，我這個“經紀人”的也為了安排活動場次傷透了腦筋。總共近50個職業，每個的時間場次沒有一定的規則，如果想要減少等待的時間，選了一個後要馬上找下一個，有的活動如果不小心錯過了，下一場又可能會等很久。於是這個APP就這樣產生了。照時間排列，很清楚的表格，隨著時間，最近的活動會自動移到最上面。但如果有想要把某些活動“釘”在上面也可以。“釘”在...", "content": "那天帶著小孩去京華城Baby Boss，結果小孩玩得很累，我這個“經紀人”的也為了安排活動場次傷透了腦筋。總共近50個職業，每個的時間場次沒有一定的規則，如果想要減少等待的時間，選了一個後要馬上找下一個，有的活動如果不小心錯過了，下一場又可能會等很久。於是這個APP就這樣產生了。照時間排列，很清楚的表格，隨著時間，最近的活動會自動移到最上面。但如果有想要把某些活動“釘”在上面也可以。“釘”在上面的活動也可以自由調整順序。主劃面可以進行的操作有 選單 主要是要進入選擇“檔案”的操作；目前Baby Boss似乎沒有將每天的時刻表公佈出來，我跟Baby Boss也沒有直接的關係，所時刻表只能用email/AirDrop或iTunes匯入檔案，或者自行編輯。 Play 沒有開始Play前，只是觀看而已，可以移動，固定活動，標示為“喜愛”。“喜愛”的行動在開始PLAY後，時間到前會有通知。 一旦開始Play，沒有“釘”住的活動會照”離現在最近的時間”排列。已經過了時間的活動會變成灰色。 “釘”住活動。按一下圖針即可，要取消“釘”住，再按一下即可。 移動活動：“長按”住活動名稱，然後上下移動到想要的位置即可。不過，雖然沒有被“釘”住的活動也可以任意排列，在PLAY時會自行根據時間移動，被“釘”住的則會固定位置。所有“釘”住的都會排在最前面。 標記“喜愛”或者是預定要玩的項目。在想玩的對應“長條”上按一下即取，再按一下即可取消。有選定的時間段會有灰色背景標示。如果Baby Boss有提供時刻表，那麼這個APP就變得很完美了。很不幸地，目前沒有。所以目前有二種方式可以得到資料。1,自行找到資料檔（下面會有一個之前的時刻表可供下載），可以用iTunes輸入。或是從iPhone的email附檔中直接打開。從iTunes匯入的檔案可以在下列畫面中按，然後選擇匯入的檔案即可。2,自行編輯：從無到有也行，可以下載之前的檔案，改時間即可。按上圖中即可進入。在這個畫面中，可以設定提早通知的時間，另一個”最小時間單位“是為了快速輸入時間的設計。如果數字是”1“，所有的時間都可以輸入，如果是”5“，則只輸入”5″的倍數，例如10:05,10:10,10:15等等。輸入10則以10分為單位。可能的值是1,5,10,20,30。不過Baby Boss用5就行了。如果那天有時間不是5倍數，可以改成“ 1″才能輸入不是5倍數的時間。按每個活動進入編輯活動時間如果時間長度有變動，按一下時間即可更改。最常做的是編輯時間表。按即可編輯時間表，如下這個畫面完全是為了快速輸入時間所設計，Apple用來選時間的轉輪轉太慢，直接按數字比較快。建議用24小時制最快。直接輸入時間後按即可輸入，可以連續輸入所有的時間。輸入分鐘的個位數會根據”最小時間單位“的值不同而能輸入的數字有不同，例如最小時間單位是5時，分鐘的毎位數只能輸入0或5。刪除輸入跟更正錯誤應該很直覺，按對應的地方即可。輸入完畢後按Done即可回到前一個劃面。基本操作就這樣。其他的操作，例如用email/airdrop等跟大部分的APP差不多。目前没有針對iPad設計，如果有一定的下載數，或許會考慮開發iPad的版本。如果有機會，希望可以提供正確的時刻表提供下載，但這需要Baby Boss官方的支援。[wpdm_file id=2 title=”true” ]下載這個檔案後用iTunes匯入，或者用email寄給自已，從iPhone上的mail打開附檔。" }, { "title": "Twilight Compass 3.7 released", "url": "/posts/twilight-compass-3-7-released/", "categories": "iPhone App", "tags": "", "date": "2013-10-10 02:45:23 +0000", "snippet": "Upgraded to iOS7 SDK. It is not compatible to iOS6 and previous iOS.Note: the functionalities of this APP are going to be fully covered, not now but in the future, by my other APP, SunMoonAR.If you...", "content": "Upgraded to iOS7 SDK. It is not compatible to iOS6 and previous iOS.Note: the functionalities of this APP are going to be fully covered, not now but in the future, by my other APP, SunMoonAR.If you are interested in this APP, SunMoonAR is more recommended." }, { "title": "SunMoonAR 2.5 released", "url": "/posts/sunmoonar-2-5-released/", "categories": "iPhone App", "tags": "", "date": "2013-10-10 02:39:48 +0000", "snippet": "SunMoonAR @App Store Adding information of Sun/Moon rise/set direction and time when the iPhone is parallel to the ground. Enlarge the area of touch to start calibration. Using ‘black’ semitran...", "content": "SunMoonAR @App Store Adding information of Sun/Moon rise/set direction and time when the iPhone is parallel to the ground. Enlarge the area of touch to start calibration. Using ‘black’ semitransparent curtain when the sun is used for calibration. upgrade to iOS 7 SDKSunMoonAR @App Store" }, { "title": "命名大師 3.1發佈", "url": "/posts/e591bde5908de5a4a7e5b8ab-3-1e799bce4bd88/", "categories": "iPhone App", "tags": "", "date": "2013-10-10 02:26:53 +0000", "snippet": "支援iOS7。此版本不支援iOS6。", "content": "支援iOS7。此版本不支援iOS6。" }, { "title": "SunMoonAR V2.0", "url": "/posts/sunmoonar-v2-0/", "categories": "iPhone App", "tags": "", "date": "2013-04-24 07:40:26 +0000", "snippet": "What’s NEW!Using the GYROSCOPE and a reference to get heading.The magnetic compass is not precise enough. The error sometimes could reach 30 degree! Thus, using the magnetic compass sometimes gets ...", "content": "What’s NEW!Using the GYROSCOPE and a reference to get heading.The magnetic compass is not precise enough. The error sometimes could reach 30 degree! Thus, using the magnetic compass sometimes gets bad result. ( One undocumented new feature is that the error/accuracy of magnetic compass is now shown)In contract, the gyroscope is stable and precise, though for a short time. However, to use gyroscope to get heading, a reference is necessary. The sun, the moon, and a custom landmark in sight can be used as reference. Note: if the elevation of sun or the moon is larger than 80 degree, the result won’t be good. The more distant the reference landmark, the more precise the result heading.Usage:1.Tap the center bottom, where the HEADING degree resides. Only when the location is available, i.e. GPS is flexed, this function can be used.2. choose a target to be used as the reference. If the sun or the moon is not visible at that time, the corresponding button will be disable.2a. if ‘landmark…’ is chosen, the selection of landmarks is necessary. The LED right indicates the quality of the reference. RED: bad reference.The precision of current location is not good, or the distance of the landmark is not far enough. YELLOW: fair. GREEN: good.2b. In New Landmark screen. Tap the location of the desired landmark.3.Aim the reference, and tap the screen.4.Now it is in GYROSCOPE mode. To return to use magnetic compass, shake the phone." }, { "title": "Twilight Compass V3.0 &#038; peak of V3.2", "url": "/posts/twilight-compass-v3-0-peak-of-v3-2/", "categories": "iPhone App", "tags": "", "date": "2012-08-28 15:58:12 +0000", "snippet": "Twilight Compass V3.0 was summited to APP Store. The UI is re-designed. In fact, the APP is re-writen from scratch.Twilight Compass is my first APP, which was created three years ago. Since then, i...", "content": "Twilight Compass V3.0 was summited to APP Store. The UI is re-designed. In fact, the APP is re-writen from scratch.Twilight Compass is my first APP, which was created three years ago. Since then, iOS, previously iPhone OS, evolves. I tried to imitate the original compass APP of APPLE, which seemed to be clumsy. Therefore, I re-write it.Just after submitting, I decide to add some more features, which are Map Compass Import/Export waypointsMap Compass is a compass overlaid on the map. If you are going to take pictures of Twilight with certain landmarks, it will be a very good tool for you. By using this tool, you can know where is the best point to take a picture of sunrise or sunset with the landmark.Waypoints are locations of interest. In previous version, it is called “Landmark” because it is meant to be. After V3.2, the term will be changed to “location”, because it can be used to set current location also. The file format supported is KML, which is compatible with Google Map and Google Earth. The import detects duplicated points, which is defined when the “name” is exactly the same and the distance between the two location is within 10 meters.I will submit it as soon as possible." }, { "title": "SunMoonAR", "url": "/posts/sunmoonar/", "categories": "iPhone App", "tags": "", "date": "2012-08-28 15:26:24 +0000", "snippet": "This is the APP that I wanted to create when I was writing Twilight Compass. SunMoonAR Displays the positions of the sun and the moon in the way of augmented reality. The reason that I didn’t do it...", "content": "This is the APP that I wanted to create when I was writing Twilight Compass. SunMoonAR Displays the positions of the sun and the moon in the way of augmented reality. The reason that I didn’t do it is that iPhone SDK didn’t support CameraOverlay, real time video stream, or AVFoundation frame at that time.(Please don’t count the hacks.) With the power of AVFoundation frame and, even more, the CoreMotion framework, this APP is sure to be.The UI of SunMoonAR is kept as simple as possible. However, to avoid overlay of the sun and the moon, I have to create UI to show/hide the suns and moons.Everything works fine, except that the compass of iPhone usually has error about 10~30 degrees. I am figuring out a way to get azimuth by using gyroscope with a target for calibration, whose precision would only depend on the gyroscope. It is said to be more accurate." }, { "title": "Flickr Edit On GMap v0.9", "url": "/posts/flickr-edit-on-gmap-v09/", "categories": "Flickr &amp; Google Map", "tags": "", "date": "2012-03-27 11:49:30 +0000", "snippet": "Update: UI revise. The ‘split’ between map and photo is now adjustable. In previous version, only medium(500px) photo is supported. An appropriate size of photo will be displayed to fit the area o...", "content": "Update: UI revise. The ‘split’ between map and photo is now adjustable. In previous version, only medium(500px) photo is supported. An appropriate size of photo will be displayed to fit the area of photo part. GPS track now support only local GPX file Remove logout function. Leaving the page results in logging out." }, { "title": "命名大師 v2.0", "url": "/posts/e5a793e5908de5a4a7e5b8ab-v20/", "categories": "iPhone App", "tags": "", "date": "2011-01-16 06:28:15 +0000", "snippet": "命名大師 v2.0主要更新： 增加「常見度」指標（菜市場名指標）。我搜集並分析了1994~2004年間台灣的大學聯考榜單後，將所有的名字出現頻率加以統計計算，最後可以查出名字的常見度指標：指標數值為0~99%，愈高數值表示名字（不包括姓）愈常見；0表示小於1。 姓名論斷中外格下方為常見度，如上圖。 命名流程最後選擇名字中，也會有名字的常見度。 這個數值的實際意義為「一千人中名字重複的機...", "content": "命名大師 v2.0主要更新： 增加「常見度」指標（菜市場名指標）。我搜集並分析了1994~2004年間台灣的大學聯考榜單後，將所有的名字出現頻率加以統計計算，最後可以查出名字的常見度指標：指標數值為0~99%，愈高數值表示名字（不包括姓）愈常見；0表示小於1。 姓名論斷中外格下方為常見度，如上圖。 命名流程最後選擇名字中，也會有名字的常見度。 這個數值的實際意義為「一千人中名字重複的機率」。請特別注意，數據來源為台灣區1994~2004年間，僅供參考。 更改常用字庫。 更改常用字為命名常用字。（原常用字為日常用字。） 原本的常用字為常見用字，但常見用字很多並不會拿來用在名字上；例如，「奸」這個字應該不會有人拿來用。而常用字的標準則是取自常見度一樣的資料庫。 常用字依常用程度排列。 字依常用程度排列，如果獨特性為命名的重點之一，可以依字的排列順序考慮取用。 如圖中10劃最常用的字是「家」。 「選字」畫面中，獨立「少用字」於「所有字」中。「選字」畫面可選擇看 常用字：命名常用字。 少用字：不在常用字之列的所有字。 所有字：字庫中所有字，即常用字加所有字。 更新「選擇筆劃」畫面顯示。 以不同顏色標示吉凶。 更改「吉大於凶」為「小吉」、「凶大於吉」為「小凶」。 「凶」為綠色；「吉」為紅色。 改善選字畫面操縱流暢度。 更改使用界面。 取消tabbar，除了更直覺外，也增加選筆劃和選字時的顯示空間。" }, { "title": "Twilight Compass v2.0", "url": "/posts/twilight-compass-v20/", "categories": "iPhone App", "tags": "", "date": "2010-12-31 06:41:56 +0000", "snippet": "What’s new in version 2.0:download [New Feature] Landmark pointerIn addition to showing the directions of sunrise and sunset, now it points to a user-defined landmark too. In SETTING screen, s...", "content": "What’s new in version 2.0:download [New Feature] Landmark pointerIn addition to showing the directions of sunrise and sunset, now it points to a user-defined landmark too. In SETTING screen, select the last item “Landmark”, the following screen will show.The screen shows all landmarks sorted by distance to current location if you have created some landmarks. Select the desired landmark or cancel by selecting the first “[No Landmark]”.Press the detail disclosure button (&gt;), the following screen will show to tell you the location of the landmark related to current location.To add new landmark, press [+] in the landmark list screen, move the map to desired position, and press [+] at the lower right coner to place the pin as following. Drag the pin to change location. Press the detail disclosure button(&gt;) to edit the name. [Update] OS 4.0 supportedTwilight Compass now supports iOS 4.0 multitasking features. It will stop using GPS and compass when switched to background. [Update] select current location on mapPress the Map button at the upper left coner to locate current location.Move the map to the location desired, and press “done”. [Update] update drawingNew drawing to support high resolution. (Yes. I know it is still not cool enough, but I’ve tried my best. I am a programmer not an artist. Sorry.) download" }, { "title": "命名大師", "url": "/posts/165-2/", "categories": "iPhone App", "tags": "命名大師", "date": "2010-06-15 09:45:32 +0000", "snippet": "下載命名大師前言：筆劃斷定吉凶準嗎？有什麼根據嗎？我想凡是卜筮算命這類的東西，都沒有人可以斷定準確與否。但是以小孩的命名來說，則是寧可信其有，不可信其無。除非有什麼特別的理由，否則只要有千分之一或甚至億萬分之一能對小孩的將來有所幫助，那麼為人父母也會想要採取對自已小孩比較有利的做法。所以，現在很多人都是花錢請人家取名字。只不過，一般花錢取名字只會提供少數幾個名字供作選擇，如果都不滿意，也沒有...", "content": "下載命名大師前言：筆劃斷定吉凶準嗎？有什麼根據嗎？我想凡是卜筮算命這類的東西，都沒有人可以斷定準確與否。但是以小孩的命名來說，則是寧可信其有，不可信其無。除非有什麼特別的理由，否則只要有千分之一或甚至億萬分之一能對小孩的將來有所幫助，那麼為人父母也會想要採取對自已小孩比較有利的做法。所以，現在很多人都是花錢請人家取名字。只不過，一般花錢取名字只會提供少數幾個名字供作選擇，如果都不滿意，也沒有辦法。再則，自已為小孩取出來的名字總是多了幾分親切感。「命名大師」就是從我自已為小孩取名字的經驗而來的。命名的方法有許多種，包括看生肖、看八字、五行、筆劃等等。看生肖的方法簡單，但缺乏系統，八字五行的論斷則眾說紛云，筆劃則是其中比較有跡可尋，也比較容易無中生有的方法。但筆劃命名的方法中最不方便的就是筆劃的算法是根據康熙字典而來，「命名大師」也就是為了解決這個困難而產生的。使用說明：「命名大師」有兩大功能，一為姓名斷吉凶，另一為命名。操作方法十分直覺簡單，敍述如下：姓名吉凶：依指示輸入姓及名後，按下【吉凶】鈕，即可看到天、人、地、總、外五格，以及三才配置和基礎運、成功運、社交運的吉凶。在吉凶總覽的畫面碰一下便可查看詳細的說明：命名：在命名頁面第一個畫面是專案總覧，「命名大師」可以同時進行多個命名的專案。要刪除一個專案，用手指橫劃過專案的列表後，會出現【刪除】按鈕。按右上角的【＋】即可開始一個專案：姓為必填。如果有預先決定的字， 則可以輸入預選字 。例如中間名依族譜為「悟」，則選【第一個字】並在預選字中輸入「悟 」。預選字不限定字數，例如：姓為「孫」、輸入「空」並選【第二個字】，則表示想要取「孫 x空」的名字。最大筆劃為非預選字的最大筆劃，最大值為31，建議筆劃不要太多。「專案代號」為專案的名稱代號，可任意輸入以方便日後查看。請注意：新命名專案中輸入的資料為一個專案中不可更改的參數，如果輸入錯誤，可以刪除並重新開始。輸入資料後，按右上角【選擇筆劃】（必須輸入姓才會出現此按鈕），就會出現所有的筆劃組合：用手指點選可以選擇或取消選擇，按筆劃組合最右的按鈕則可以看筆劃組合的詳細說明，筆劃組合可依【吉凶】或【筆劃】順序排列；選擇完筆劃後按右上角的【選字】就可以進入一下階段選字的步驟，此步驟可以隨時重選。建議可先選一種組合，若挑不到喜歡的名字回來多選幾種組合。選字：依所選的筆劃， 預設會列出 資料庫中的【常用字】，若挑不到喜歡的字，可點選上方【所有字】，則會列出資料庫中所有的字以供選擇。在字上點選即可完成「選擇／取消選擇」的動作。選完字後即按右上方【名字組合】可進入挑選 名字的步驟。挑選名字組合會列出所選的筆劃和字的組合而成的所有名字。針對每個名字可以 按最右的按鈕看詳細吉凶說明。 按刪除鈕表示不考慮；「刪除」後的名字也可以回復。 依最少半顆星最多五顆星評等名字的喜好程度。本步驟有三個頁面：【全部／已選／未選】： 全部：列出所有名字組合，依筆劃排列。 已選：列出半顆星以上名字組合，依評等排列。 未選：列出未評等（零顆星），也未「刪除」的名字， 依筆劃排列。在 【已選】及【未選】頁面中更改後需按右上方的重新整理鈕才會重新排列。下載命名大師問與答： 筆劃的根據。 「命名大師」的筆劃是根據字在康熙字典中的位置決定，例如「五」在康熙字典中是「二」部二劃，故為四劃。網路上很多人將五列為五劃，但個人以為，如果依照字意而定筆劃，那麼「萬」字豈不是要算一萬劃？當然，使用者可依自已的認知決定。 字資料庫的大小。 常用字5千餘字，全部有2萬餘字。康熙字典有超過五萬字，但大部分的字在iphone上並無法支援。事實上即使是「命名大師」支援的2萬餘字也不是所有字都能在iPhone上正確顯示。電腦化已經很普徧的情況下，建議不要選擇冷僻而無法在所有系統顯示的字，以免徒增困擾。下載命名大師" }, { "title": "Twilight Compass v1.1 released", "url": "/posts/twilight-compass-v11-released/", "categories": "iPhone App", "tags": "", "date": "2009-10-15 14:31:20 +0000", "snippet": "v1.1 is now available now. All features promised are available now.Description: requeted twilight possible values: Today’s The information requested is infomation of today’s twilight. I...", "content": "v1.1 is now available now. All features promised are available now.Description: requeted twilight possible values: Today’s The information requested is infomation of today’s twilight. If “Today” option is ON, and “Next Twilight” option is OFF, which specifies getting Today’s twilight information. Next Next twilight is requested. If “Today” option is ON, and “Next Twilight” option is ON, which specifies getting next twilight information. If the time already pass, usually tomorrow’s twilight will be shown. specified date, eg. 3/21 A date is specifed. date of twilight possible values: tom’ow Tomorrow. (sorry, tomorrow is too long to fit in) a specific date, eg(3/21) additional twilight possible values: (none) No additional information is displayed. Civil Civil Twilight. Nautical Nautical Twilight. Astronomical Astronomical Twilight. twilight time Shows the required twilight time. additional twilight time shows the additional twilight time specified. GPS status GPS is fixed. GPS is reporting locations. GPS is disabled, or signal is lost. Location is specifed. " }, { "title": "Features of Twilight Compass v1.1", "url": "/posts/features-of-twilight-compass-v11/", "categories": "iPhone App", "tags": "", "date": "2009-09-01 19:49:58 +0000", "snippet": "It took me a while to finish the process of APP publish on APP Store, and now it is available on line!Get it on App StoreThe features of v1.1 is planned at beginning, however I learned that it will...", "content": "It took me a while to finish the process of APP publish on APP Store, and now it is available on line!Get it on App StoreThe features of v1.1 is planned at beginning, however I learned that it will spend sometime to publish an APP, and I decided to publish it fisrt and then update it later. The features are determined now, and they are:1.Location by input also (current location only in v1.0)2.Date by input also (today only in v1.0)3.”Next” sunrise/sunset, display sunrise/sunset of tomrrow if the time already passes.4. Additional information about twilight, including Astronomical, Nautical, and Civil Twilight5.Latitude/Longitude formats settingEstimated available date should be within one month." }, { "title": "從ipone發文", "url": "/posts/e5be9eiponee799bce69687/", "categories": "網站相關", "tags": "", "date": "2009-08-04 19:06:15 +0000", "snippet": "剛買iphone發現有wordpress for iPhone,download下來玩玩 放張我房子前的泳池照片", "content": "剛買iphone發現有wordpress for iPhone,download下來玩玩 放張我房子前的泳池照片" }, { "title": "Google Spreadsheet and Track Viewer on Gmap", "url": "/posts/google-spreadsheet-and-track-viewer-on-gmap/", "categories": "Flickr &amp; Google Map", "tags": "", "date": "2009-04-30 04:55:07 +0000", "snippet": "Track Viewer on Gmap can load track specified in URL, so that it can be embeded in other pages using iframe.example:http://photo.vito.tw/track/?key=phd0Onr_IEDNp9FiHchPwLwThe format of Google Sprea...", "content": "Track Viewer on Gmap can load track specified in URL, so that it can be embeded in other pages using iframe.example:http://photo.vito.tw/track/?key=phd0Onr_IEDNp9FiHchPwLwThe format of Google Spreadsheet track format and the way to produce is described here:format: just simple as “Index, Lat, Lon, Altitude, Time”, as shown:To generate this spreadsheet, you can 1, use GPSbanel, and 2, usethis page, or craft manually yourself.The generated excel( or csv files) must be uploaded to Google Docs, and “published” so that everybody else can view it.Using GPSBABEL: Select the output format as “Tab delimited filelds useful for OpenOffice, Ploticus…”. Please NOTE: the Altitude fields generated by psbabel is “Altitude(m)”, and you must manually delete “(m)”. And there are unused fields, it is better to delete those unused fields to save internet resources.Track Viewer on Gmap 事實上可以用網址的方式載入軌跡，以便以iframe的方式內嵌於一般的網頁中。例如：http://photo.vito.tw/track/?key=phd0Onr_IEDNp9FiHchPwLw而Google Spreadsheet的格式和產生方法說明如下：格式：Index, Lat, Lon, Altitude, Time產生方式：有三種，使用GPSBABEL，自己產生，以及用這個網頁產生。不管用什麼方式產生，都必須上傳到Google Docs，然後公開發佈。主要是因為Google目前沒有提供公開發佈的API，所以沒有一個方便的方法。使用GPSBABEL，選擇輸出格式為”Tab delimited filelds useful for OpenOffice, Ploticus…”。請注意，gpsbabel產生的檔案中Alititude為Altitude(m)，要手動修改刪掉”(m)”，另外，會有很多沒用到的欄位，刪除這些沒用到的欄位可以避免網路資源的浪費，會比較好。" }, { "title": "Track Viewer on Gmap-中文版", "url": "/posts/track-viewer-on-gmap-e4b8ade69687e78988/", "categories": "Flickr &amp; Google Map", "tags": "", "date": "2009-04-30 04:18:34 +0000", "snippet": "我不介意我是唯一的使用者，但如果有人喜歡它，我會覺得很高興。所以，我決定公開這個網頁。Track Viewer on Gmap可以看GPX檔（Google Spreadsheet）的軌跡，它也可以將選擇的軌跡存成單一軌跡。示範及截圖：進入http://photo.vito.tw/track/.會看到一個很簡單的Google Map:右上方的Google control下有一列工具列：這些工具...", "content": "我不介意我是唯一的使用者，但如果有人喜歡它，我會覺得很高興。所以，我決定公開這個網頁。Track Viewer on Gmap可以看GPX檔（Google Spreadsheet）的軌跡，它也可以將選擇的軌跡存成單一軌跡。示範及截圖：進入http://photo.vito.tw/track/.會看到一個很簡單的Google Map:右上方的Google control下有一列工具列：這些工具列包括了所有的功能：載入 – 載入軌跡儲存 – 將顯示的軌跡存成GPX 檔顯示／隱藏軌跡資訊 - 顯示或者隱藏目前選擇的軌跡資訊顯示／隱藏高度變化圖 - 顯示或者隱藏目前選擇的高度變化圖顯示／隱藏速度變化圖 - 顯示或者隱藏目前選擇的速度變化圖顯示／隱藏軌跡列表 - 顯示或者隱藏軌跡資訊列表About - 關於從載入開始看，可以載入Google Spreadsheet的資料，當然，這個spreadsheet必須是公開發佈而且是符合要求格式的：或者是指定GPX檔的網路路徑，這個網路路徑當然也是必須可以被其他人看到的。最後一個可能是上傳GPX檔。請注意：由於Javascript無法存取本地機器上的檔案（是的，有例外，但不是很方便），所以GPX檔必須先上傳再下載，所以會花一些時間。一旦載入成功，就可以見到地圖上顯示的軌跡，以及右上方有一個軌跡的列表。勾選／取消勾選可以顯示／隱藏對應的軌跡。要選擇一條軌跡請點選軌跡的名字。這個列表也可隱藏起來。點第三個圖示即可顯示目前所選的軌跡的一些資訊：可以顯示高度及速度變化圖，點變化圖則會在地圖上對應的點出現infowindow：最後，可以儲存目前顯示（也就是有勾選的）軌跡，如果選擇合併，則所有的軌跡會合併成一條軌跡。" }, { "title": "Track Viewer on Gmap", "url": "/posts/track-viewer-on-gmap/", "categories": "Flickr &amp; Google Map", "tags": "", "date": "2009-04-30 03:57:47 +0000", "snippet": "I don’t mind that I am the only user, but if someone else like it, I would be glad. That’s why I published this application.Track Viewer on Gmap is used to view TRACKS of gpx files(and Google Sprea...", "content": "I don’t mind that I am the only user, but if someone else like it, I would be glad. That’s why I published this application.Track Viewer on Gmap is used to view TRACKS of gpx files(and Google Spreadsheet). Saving selected tracks and optionally combine them into one single track is also possible.Simple demostration:Go to http://photo.vito.tw/track/.You will seelook at the right top coner, below GMAP control:All functions are listed as icons, and they are:Load – load tracksSave – save selected tracks to another GPX file.Show/Hide Track Summary -show or hide information about selected track.Show/Hide Altitude Chart – show or hide altitude chart of selected trackShow/Hide Speed Chart – show or hide speed chart of selected trackShow/Hide Track List – show or hide the “Track List”AboutLet’s start from “Load”. You can load track from data of Google Spreadsheet. Of course, the spreadsheet must be published and formated.Or, you can open GPX file specified as URL, the url should be public accessible.Or, you can upload an valid GPX format file as the third option. Note: since Javascript cannot access local file, the local gpx file must be uploaded and then downloaded, so it will take some time to finish loading.Once tracks are successfuly loaded, you can find a list of tracks below the tool icons.Check/uncheck the checkbox to show/hide the track.Click the track name to SELECT the track.You can hide the Track List.Click the 3rd tool icon to show Track Summary.Alitude/Speed charts. You can click on the chart, and the coresponding point on map will be shown.You can save showing track into another GPX file. Showing tracks are those shown on map with checkbox checked. You can “combined” them to a single track with specified track name." }, { "title": "Flickr Editor on Google MAP", "url": "/posts/flickr-editor-on-google-map/", "categories": "Flickr &amp; Google Map", "tags": "", "date": "2009-04-20 13:20:26 +0000", "snippet": "This application is here for two reasons.The first reason: I am learning Javascript/AJAX, and I love Flickr and Google Map.The second reason: I upload all my photos to Flickr, most of them are duri...", "content": "This application is here for two reasons.The first reason: I am learning Javascript/AJAX, and I love Flickr and Google Map.The second reason: I upload all my photos to Flickr, most of them are during travel and location is important, and select some of them to share with friends. Flickr Organizer is good to manage photos/photosets. However, it’s hard for me to select photos from one set in Flickr Organizer, for I cannot make selection by seeing the thumbnails. To look larger photo, and the location where the photo was taken is also cumbersome. Not to mension that you must wait to save modification to title/description of each photo.The goals are: Google Map is used, of course. Keyboard Control for Previous/Next, and Tag set/unset. “Medium” photo displayed, and preloaded. “Large” photo is available and can be quickly accessed. Update modification in one batchSo this Flickr-Gmap mashup is created, so that I can edit title/description, by look where the photo was taken, and set tags quickly. Other operations, likeperimission setting or creating new set, can be done easily in Flickr Organizer.http://photo.vito.tw/som/index.htmlUsage: Login Flickr and AuthorizationClick the link “Login Flickr” on left-bottom to login Flickr and authorize “Flickr Editor” to access your photos.You can also VIEW photo sets by manually input SET ID, without login. Of course, you can only see PUBLIC photoswithout login.The authorization data is not saved, so you must “log-in” everytime.If you want to edit Titles, Descriptions, Locations, Tags of your photos, you must authorize “Flickr Editor” to “Write Access”. Browse Once login and authorized, you can select your photoset from the drop down list. Scroll and click the thumbnails to view photos. You can also click the markers on map to select photos. Keyboard action: ‘z’: previous photo. ‘x’: next photo.click the photo to see “Large Image”. Click on the “Large Image” to dismiss it. Edit If “Write Access” is authorized, you can edit the meta data following. Click “End Edit” button to end edit mode. Or, click “Update All” to update editing to Flickr. Everything you modified is kept locally, before you “Update All” to Flickr.The description must be loaded before you can edit it. Since description is loaded in asynchronous manner, you might see “loading” in the description textarea. label &amp; description Input the text in the text fields. location Click the “Set Location” button, and click on map to set photo location. tags The most complex items here. Check/uncheck the checkboxes to set/unset Tags. The tag names can be changed. Just place mouse cursor over “Tags”, the tag names editor will pop-up. Change the text to what you want. The real tag names used to update to Flickr are those before you press “Update All“. For example, if you select tag 1, named “select_1“, and later change the “select_1” to “myselection_1“, and then press “Update All“, the tag set to Flickr will be “myselection_1“. Changing tag names will change status of the checkboxes, to reflect the real status of TAG- set or unset. For example, if one photo already has one TAG , named “myprevious_select“, and after changing one of the tag names to “myprevious_select“,the corresponding checkbox will be checked. The TAGs of the photo will also show on the Tag Name Editor, following the “This Photo“. Keyboard Action: press key 1,2, or 3 to set/unset corresponding tags. View Mode:See “Browse” section. If setid is given in URL, it is in “View only” mode.eg.http://photo.vito.tw/som/index.html?set=72157600565648150—————————————————————–寫這個應用有兩個理由；第一，我在學Javascript/AJAX，我喜歡Flickr及Google Map。其次，我把所有的照片都放上Flickr，然後挑選一些公開；這些照片大都是去玩的時候拍的，所以拍照的地點有重要性。Flickr Organize很好用，但是拿來選照片就很難用：只看縮圖很難決定，而要看大一點的圖及地圖，更是要用Mouse點好幾次才行。更提每更改一張照片的資訊，就要等一下子。想要的樣子是： 使用Google Map。 可以用Keyboard看下／上一張，以及設Tag 可以看到”Medium”（中等）的照片，有預載，也可以很快地看大圖。 一次更新所有的變動，而不是改一下就要更新。因為更新要等一下，節奏不順。這個Flickr-Gmap的「混搭」就是這樣來的；可以編輯Title/Description、可以看到照片在那裏拍的，快速地設Tag。設好Tag後就可以很方便地用Flickr Organize來做其他動作；例如，更改權限或加入新的SET。http://photo.vito.tw/som/index.html使用方法： 登入Flickr及授權點左下角的”登入 Flickr” 授權”Flickr Edito on Google Map”的存取。不登入也可以用輸入SET ID的方式看照片，但只能看到公開的照片。因為授權的資料沒有被儲存，所以每次都要「登入」。要編輯Title/Description/location/Tag的話，必須授權「寫入的權限」。 流覽 一旦登入也授權後，你的所有的SET都會出現，可以在左下方那個下拉式選單點選。 選了一個SET後，縮圖就會出現，如果有設定位置，也會在相對的地圖上出現一個標記。縮圖和地圖上的標記都可以點。點左方的圖可以看大圖。 鍵盤操作 ‘z’: 前一張。 ‘x’: 下一張。 編輯 如果是授權「寫入」，就會出現「編輯」的按鈕。按下則可以更改下列的項目。 按下「結束編輯」就會結束編輯狀態。 或者，如果已經有變動，按下「更新全部」就會將全部的變動更新到Flickr。 請注意在按下「更新全部」之前，所有的變動都不會動到Flickr。另外，照片的說明（description）必須要下載完成才能進行編輯。因為說明是以非同步的方式下載的，所以你可能會看到”Loading”出現。 標題及說明 輸入文字即可。但按「更新全部」才會將變動存到Flickr。 location 按”設定位置” 按鈕，然後在地圖上對應的點按一下。 Tag 這個有點複雜： 基本上就是可以勾選三個Tag前的checkbox。不過，tagname是可以改變的：只要將游標移到”Tags”，就會出現一個可以編輯tagname的editor。 勾選Tag只是勾選邏輯上的三個tag，真的會寫到flickr的tag最在按「更新全部」鈕之前的tagname。例如，原本第一個tag是”select_1″，勾了第一個tag，後來將”select_1″改成”myselection_1″，如果接著就儲存變動，則真正的tag是”myselection_1″。改變這三個tagname也會改變checkbox的狀態，以反應真正的狀態：例如，如果有張圖已經有一個tag叫”myprevious_select”，當把第一個tagname改成”myprevious_select”後，對應的checkbox就會被勾選。照片原本有的TAG會出現在編輯tagname的editor下，在”This Photo：”後面。 鍵盤操作 按1,2,3 即可勾／取消勾選這三個Tag。 純流覽模式操作請參考前面的說明。如果網址加上set id進入，則不會出現可以編輯的畫面。例如：http://photo.vito.tw/som/index.html?set=72157600565648150" }, { "title": "乳頭溫泉﹣妙乃湯", "url": "/posts/e4b9b3e9a0ade6baabe6b389efb9a3e5a699e4b983e6b9af/", "categories": "名宿之旅", "tags": "", "date": "2009-04-18 08:03:15 +0000", "snippet": "說到東北秘湯，便不能不提到乳頭溫泉鄉。乳頭溫泉鄉位於田澤湖附近的深山中，因附近的一座乳頭山而得名。區域內有七家溫泉飯店，各有其特色，神奇的是湯質也不同，這幾家飯店合作發行一日泡湯卷，共同把乳頭溫泉鄉推上日本最有名的秘湯之一。乳頭溫泉鄉最熱門的應該是「鶴の湯」，不過很難訂，而且最大的問題是：離公車站牌很遠，必須預約飯店的接送，這對不通日文的我，是很大的挑戰；我上次去日光就有過失敗的經驗。相對地...", "content": "說到東北秘湯，便不能不提到乳頭溫泉鄉。乳頭溫泉鄉位於田澤湖附近的深山中，因附近的一座乳頭山而得名。區域內有七家溫泉飯店，各有其特色，神奇的是湯質也不同，這幾家飯店合作發行一日泡湯卷，共同把乳頭溫泉鄉推上日本最有名的秘湯之一。乳頭溫泉鄉最熱門的應該是「鶴の湯」，不過很難訂，而且最大的問題是：離公車站牌很遠，必須預約飯店的接送，這對不通日文的我，是很大的挑戰；我上次去日光就有過失敗的經驗。相對地，「妙乃湯」就在公車站牌旁，而且旅遊書上說，去過的人常為了她的餐食而再次造訪，於是將妙乃湯列首選。名列日本秘湯協會２０大秘湯前三名的乳頭溫泉鄉，訂房其實不容易，尤其熱門的飯店更是常常客滿，而且更難的是幾乎都要用電話預約。憑著一顆對溫泉美食愛好的心，努力地在網路上搜尋、做功課，終於找到了「田澤湖觀光協會」可以幫忙訂房。於是調整行程，避開熱門的週五六日，在田澤湖觀光協會網站上填寫希望入住的時間後，隔天就收到了確認的email：椿館，一泊二食一個人17475日幣，入住當天前到田澤湖車站Information Center拿取預約單。從田澤湖車站前就有到乳頭溫泉鄉的巴士，巴士會經過日本最深的田澤湖，巴士爬到一個高度後，也能從高處眺望田澤湖：約莫40多分鐘後，就會到達妙乃湯，一下車便是妙乃湯門口。妙乃湯的服務人員以女性為主，佈置也充滿女性溫柔的感覺。椿館的房間不大，約７~８疊（３~４坪），不過有自己的厠所，比較方便。妙乃湯的感覺有點民宿的味道，不過服務品質有大飯店的水準；例如一樓放著一台PC，可供客人上網。溫泉有男女分別都有一個金湯、一個銀湯，不過最好的應該是露天的混湯：妙乃湯旁有個小瀑布，而最適合的觀瀑點，就是妙乃湯的露天混湯。剛到妙乃湯時，就注意到瀑布旁有一顆楓樹紅得很漂亮，但沒辦法走到適當的角度取景，結果一到這個露天混湯，讓我感到非常地驚喜。泡著湯，聽著水聲，看著紅葉，有著不知今夕是何夕的感覺。房間不大，所以用餐是在一樓，餐食真的很棒；不過為了專心用餐，照片就沒拍了。值得一提的是，早餐的附餐咖啡是我喝過最香的附餐咖啡，即使是在一般的咖啡店也不容易喝到這麼香的咖啡。為了這個咖啡，我忍不住跟不會英文的歐巴桑說你們的咖啡真好喝，歐巴桑怕錯過了什麼，趕緊叫懂英文的年輕小姐來聽我說話，然後我才發現櫃台就放著一包咖啡樣本；原來他們有賣咖啡啊。吃完早餐後又泡過一次湯後，本來要離開前往田澤湖，卻遇到了一位嫁給日本人的台灣人，她跟我們說附近很漂亮，非常值得去走一走，於是從善如流，改變記劃。這條步道就是沿路會看到所有乳頭溫泉鄉的溫泉飯店﹣除了鶴の湯；事實上鶴の湯在大圈的步道上，因為腳力不好，只走小圈的。這是我這趟紅葉之旅最漂亮的一段路。結語：十分值得推薦的飯店與景點。有時間的話，應該要安排兩個晚上，泡泡所有的溫泉，享受深山的寧靜與悠閒。連結：妙乃湯：http://www.taenoyu.com/田澤湖觀光協會：http://www.tazawako.org/我的紅葉之旅照片。" }, { "title": "Linkstation上U-BOOT", "url": "/posts/linkstatione4b88au-boot/", "categories": "Uncategorized", "tags": "", "date": "2009-04-14 12:15:10 +0000", "snippet": "花了半天的時間（不含survey的時間！）成功將linkstation刷成u-boot及可以急救的系統，記錄一下，或許他日或他人會用到。 Flash Information Flash分成四個部分，參考wiki的詳細說明。 比較重要的是以下兩個section: FFC0-0000, 3MB, kernel image，及開機的一些設定(...", "content": "花了半天的時間（不含survey的時間！）成功將linkstation刷成u-boot及可以急救的系統，記錄一下，或許他日或他人會用到。 Flash Information Flash分成四個部分，參考wiki的詳細說明。 比較重要的是以下兩個section: FFC0-0000, 3MB, kernel image，及開機的一些設定(initrds)；支援急救的firmimg.bin則是要燒這裏。 FFF0-0000 448K, Boot code；U-boot就是要取代原廠的bootcode，所以就是燒在這裏 Flash的information可以用’cat /proc/mtd’看到address &amp; size 有些版本的kernel可能沒有flash driver，或者flash driver設定不對；在linkstation wiki Forum中有一篇提到在2.4.20中才能用dd if=u-boot-hg.flash.bin of=/dev/mtd1 bs=1k的方法，其他版本有風險。 Booting （推測）原廠的開機流程，load flash中（FFC0-0000)的kernel，然後將root設成/dev/hda1；以往的改機是將debian裝在hda3，然後將hda1和hda3對調，所以事實上kernel還是使用flash中的kernel。 U-Boot的開機是可以設定的；預設的開機有 Flash開機 flboot：boot FFC0-0000，root設成/dev/hda1。 緊急模式 emboot：開flash中的kernel，root設在RAM disk中；要注意原廠的firmimg.bin不能進入EM，因為一來沒有telnet/tftp，另外有密碼的問題會無法登入。 硬碟開機 hdboot：將kernel image load到80-0000，然後boot 80-0000，視kernel所在而做設定。 預設的variables: http://buffalo.nas-central.org/wiki/U-boot_Default_Environmental_Variables_and_Values 不修改firmware更改kernel的方法：開機後再用loader 載入新的kernel；在kernel 2.6中有使用這種做法，很方便切換不同版本的kernel；不同版本的kernel有不同版本的loader，不可混用 。 Linux kernel 2.6的kernel有使用一個dtb檔用來記錄硬體設定，在U-Boot中會load到7f-0000。 Firmimg.bin 包含了kernel和initrds；有很多個版本，除了原廠版本（kernel是2.4.20或2.4.17） linuxnotincluded支援U-boot的版本，kernel是2.4.33，支援telnet/tftp/fdisk，可以進EM: http://buffalo.nas-central.org/wiki/Uboot_firmimg.bin_ppc linuxnotincluded不需要U-boot的版本，和U-boot版內容似乎一樣，以後的openlink可能使用這版本 : http://buffalo.nas-central.org/wiki/Telnet_and_FTP_enabled_ramdisks 由於不能肯定我的LS上的kernel版本flash driver有沒有問題，所以決定採用u-boot來刷u-boot及firmimg.bin，以降低風險。嘗試過自行build RAM load，但始終無法在netconsole看到東西，最後決定使用網路上已經build好的版本，先用RAM版玩一玩。玩了好幾次，稍微了解u-boot的操作後，就決定了要怎麼做，也發現了一個小問題：我的硬碟中沒有原廠2.4.20 kernel的uImge(vmlinux.Uboot)，網路上也找不到，如果刷了那個可以急救的firmimg.bin，kernel就會變成2.4.33。因為我的系統都是在2.4.20下運作的，為了確定2.4.33沒有問題，還是先試一下－這就是先試RAM版的好處。很幸運的，2.4.33的uImage找得到－應該是先有這個kernel才有這個firmimg.bin的。使用到的檔案列表： Kernel image – kernel 2.4.33 http://downloads.buffalo.nas-central.org/LSHG_PPC/Kernel/Kernels/Uboot/linuxnotincluded/linux-2.4.33.3-list.mg.2-v3/ 附檔名是UBoot的那個檔案。 Firmimg.bin – linuxnotincluded的U-Boot版, kernel 2.4.33 在http://buffalo.nas-central.org/wiki/Uboot_firmimg.bin_ppc 內文中有連結。 Uloader.o 及u-boot-load-hg.sh http://buffalo.nas-central.org/index.php/U-boot_bootloader 中有,不過似乎只有支援kernel為2.4.17及2.4.20。 U-boot ram build http://downloads.buffalo.nas-central.org/LSHG_PPC/Bootloader/Uboot/Precompiled/u-boot-hg.ram.bin u-boot flash build http://downloads.buffalo.nas-central.org/LSHG_PPC/Bootloader/Uboot/Precompiled/u-boot-lsppchg-flash-1.2.0-r2.bin以下是我刷u-boot和firmimg.bin的過程，設定IP，使用nc，以及在hda3中取消swaphd.sh的過程就如很多教學中的作法一樣，就不再提了。 準備檔案 下載符合系統的uloader.o，預設是從/dev/hda1開機，然後檔案放在hda3的share中，所以是在/mnt/share中；包含 &lt;br&gt;&lt;/br&gt;uloader.o&lt;br&gt;&lt;/br&gt;u-boot-hg.ram.bin&lt;br&gt;&lt;/br&gt;u-boot-load-hg.sh&lt;br&gt;&lt;/br&gt; 這個RAM版的upgrade預設是燒 partition 3的/share/u-boot/u-boot-hg.flash.bin，所以要將檔案放在/mnt/share/u-boot中。不過，我在測試的過程發生了找不到檔案的狀況，試著用ext2ls發現進/share就有問題，推測或許是/share中有中文檔名的關係，所以只好將u-boot搬到partition 1的/u-boot，更改u-boot的ubfile及ubpart後還是成功了，後來firmimg.bin也放在/u-boot。 將(１.)找到的2.4.33 kernel image放在patition 1 &amp; 3的/boot/vmlinux.UBoot，這是下載的u-boot-hg.ram.bin中的預設值。 測試 或許是timing的問題，RAM版的netconsole反應有點遲鈍，很容易掉資料，有時候似乎要猜猜看時機直接輸入s 才會看到東西；小小的懷疑之前自己build的版本可能也是這樣。不過，只要抓到停下來看到提示的”=&gt;”符號，就很正常了。 試patition 1上的/boot/vmlinux.UBoot開機，root也設成/dev/hda1，正常。 reboot，因為這個vmlinux.Uboot的kernel是2.4.33，而我用的uloader.o是2.4.20；所以要先reboot成flash中的kernel後，才能再load u-boot-hg.ram.bin。 試patition 3上的/boot/vmlinux.UBoot開機，root也設成/dev/hda3，正常。這是工作的系統，花了很多時間測試。 測完還是要先reboot回2.4.20的kernel才行－就是這樣才擔心有些東西在2.4.20跑得好好的不知道到了2.4.33後會不會有問題。 刷u-boot Linkstation wiki上說最好先試著寫128k，看看有沒有timeout的問題再刷flash，原本想試，因為時間有點晚了，也花了很久的時間，精神不太清楚了，心一橫就直接”run upgrade”了；這告訴我們，長時間的工作事實上品質是有問題的，也很容易下錯誤的決定。 第一次run的結果是失敗，因為u-boot讀不到檔案，重來將u-boot-hg.ram.bin放在patition 1的/u-boot後，就成功了。 這個版本的u-boot和那個RAM版的事實上是不一樣的，environment variables不一樣，似乎是用來boot foonas用的，而且netconsole的反應也較快，比較沒有掉資料的問題。 刷firmimg.bin (刷firmimg.bin的過程有點驚險，還好之前有看這些說明一下，反應得當，否則．．．) 刷成功u-boot後，馬上接著嘗試firmimg.bin，參考刷u-boot的流程以及 http://buffalo.nas-central.org/index.php/U-boot_bootloader 上的範例，結果發生了timeout！ 還好提示符號（=&gt;）還是有出現，再試一次，一樣失敗，再試著將erase及write分開，還是一樣timeout。 冷靜下來，心想結果一樣就好了，過程可以不一樣，測試過每次都是0xffe0-0000不一樣，0xffc0-0000 ~ 0xffdf-fffff是成功的，算了一下firmimg.bin的大小是2,991,408合0x2DA530（果然和filesize一樣），剛好前2MB都成功，只要把剩下的0xDA530再寫進去就行了： &lt;br&gt;&lt;/br&gt;=&gt;protect off ffe00000 ffefffff&lt;br&gt;&lt;/br&gt;=&gt;erase ffe00000 ffefffff&lt;br&gt;&lt;/br&gt;=&gt;cp.b a00000 ffe00000 DA530&lt;br&gt;&lt;/br&gt; 再比較一下： &lt;br&gt;&lt;/br&gt;=&gt;cmp.b 800000 ffc00000 2DA530&lt;br&gt;&lt;/br&gt; 一模一樣~成功了~ 試了進入EM，竟然沒辦法連線192.168.11.150，仔細研究 http://buffalo.nas-central.org/wiki/How_to_use_Uboot_and_2.4.33.3_firmimg.bin_%28ppc%29 “sometimes it seems that DHCP works”，連到router，果然找到了。其實DHCP看似方便，但要有一些方法才能找到IP，比起來固定的IP不用猜不用找是比較方便的。 到此，才真的算是成功了。其他的就是更改開機流程的參數，然後saveenv就行了。 後記 本來想要將ipaddr及serverip改成192.168.1.x，後來想想，下次用到netconsole的時候不知是何年何月，到時候可能不記得到底設成什麼了，所以還是維持192.168.11.149/150。 另外，要改變ippaddr要注意，一旦更改，連線馬上中斷，所以要下連續的command，像是 &lt;br&gt;&lt;/br&gt;=&gt;setenv ipaddr 192.168.1.x;saveenv&lt;br&gt;&lt;/br&gt; 這樣才能成功改變IP。" }, { "title": "Linkstation HG1T", "url": "/posts/linkstation-hg1t/", "categories": "Uncategorized", "tags": "", "date": "2009-04-14 11:38:48 +0000", "snippet": "服役四年的Linkstation HG250早就不敷使用；放了約150G的RAW檔和50G的JPEG檔，剩下沒有多少空間，不過因為有這些功能，還是得清一些空間來放照片： flickr upload/download 已經寫好的PHP script，可以上傳到flickr；隨著相機pixel的成長，檔案也跟著成長，每次upload(2g~4g)都花了10個小時左右，用NAS...", "content": "服役四年的Linkstation HG250早就不敷使用；放了約150G的RAW檔和50G的JPEG檔，剩下沒有多少空間，不過因為有這些功能，還是得清一些空間來放照片： flickr upload/download 已經寫好的PHP script，可以上傳到flickr；隨著相機pixel的成長，檔案也跟著成長，每次upload(2g~4g)都花了10個小時左右，用NAS傳其實還不錯，不用一直開著PC等。 Rsync 照片和一些重要的資料都用rsync備份到另一台NAS TS-209 pro。東西放在兩台機器上感覺比較放心。 Svn 用來放一些自己寫的小程式，PHP/Javascript什麼的。 在裝svn的時候，不小心搜尋到Kuro-SATA，是一個讓Linkstation/Kuro-box可以裝上SATA硬碟的轉接卡。然後，我買了5D2，兩千萬畫素，兩倍於5D的RAW檔－兩倍的吃硬碟空間速度。去東京玩的時候，心想該不會BIC CAMERA有賣吧？竟然真的讓我在有樂町店找到了：日幣2480。回台灣後，考慮了幾天，還是在PCHOME買了一台1T的SATA硬碟。安裝過程參考http://www.mobile01.com/topicdetail.php?f=168&amp;t=90488 的拆機過程，圖文解說得非常詳細。裝上硬碟後，照wiki的方法Update firmware上openlink，第一次會因為format硬碟太久失敗，等硬碟燈不閃了，再試一次，照理說會成功，不過我是第三次才成功。把拆下來的原本250G硬碟裝到USB外接盒，插上linkstation的前USB，試著mount&gt;mount -t ext3 /dev/sda3 /mnt2/usbhda3成功！接下來就是把原本的debian複制到partition 3，然後用rsync把資料copy到新的硬碟，沒想到200G的資料花了快兩天整－速度約1.4MB/sec。不知道是linkstation的USB效能不彰還是CPU太弱？還是這個外接盒太舊了，速度太差？本來應該是到此告一個段落了，但看到U-BOOT，不禁心癢了起來，又花了一些時間，上了U-BOOT。U-BOOT的部分放在另一篇。" }, { "title": "東京賞櫻記", "url": "/posts/e69db1e4baace8b39ee6abbbe8a898/", "categories": "Uncategorized", "tags": "", "date": "2009-04-06 13:11:56 +0000", "snippet": "從三月初規劃好去日本玩後，就很注意櫻花前線的動態。看到http://weathernews.com/jp/c/press/2008/080225.html 預估東京三月底會滿開不禁心中竊喜，只是更仔細調查後，才知道沒那麼簡單，而且看起來似乎也不是那麼早開：http://www.rurubu.com/season/spring/sakura/十一點出發的飛機，到東京市中心也快五點了，不過，既然...", "content": "從三月初規劃好去日本玩後，就很注意櫻花前線的動態。看到http://weathernews.com/jp/c/press/2008/080225.html 預估東京三月底會滿開不禁心中竊喜，只是更仔細調查後，才知道沒那麼簡單，而且看起來似乎也不是那麼早開：http://www.rurubu.com/season/spring/sakura/十一點出發的飛機，到東京市中心也快五點了，不過，既然晚上也是有夜櫻可以看，就不要浪費了，於是挑了一個比較近的「千鳥ケ淵」。一看之下才發現，果真還沒全開，於是回到旅館重新研究接下來幾天的賞櫻路線。幾天看下來，驗證了這個網站的資訊是很準確的，而且氣象預告也很準，可以做為規劃賞櫻的重要參考資訊： http://weathernews.jp/sakura/ 。「千鳥ケ淵」的夜櫻，果然才剛開始開。看起來如果滿開會很漂亮。後樂園，網站上標示著滿開。一直以為後樂園是後宫的樂園，原來是「後天下之樂而樂」的後樂園。雖然櫻花不多，但滿開的櫻花還是漂亮，而這個花園也有其可觀之處。門口的櫻花開得最漂亮：另一角的兩棵不同顏色的櫻花：六義園，名字來自詩的六義﹣風雅頌賦比興。櫻花也不多，不過一樣滿開的一棵勝過沒開的一片。上野公園，如果滿開真的會很漂亮。新宿御苑。因為有開放時間，所以沒有熬夜卡位的上班族，如果想學日本人在花下吃飯，是一個好選擇。剛好有人在拍寫真集（？），經過的人都在拍，我也跟著拍一張。其他照片在Flickr。照片及地圖。" }, { "title": "5D2使用感想", "url": "/posts/5d2e4bdbfe794a8e6849fe683b3/", "categories": "Uncategorized", "tags": "", "date": "2009-04-02 10:44:58 +0000", "snippet": "操作和大小都和5D 沒有太大的不同，除了 Menu多了分類，不像在5D中沒有分類，也多了short cut的功能(My menu)，可以自訂常用的功能。方便的好功能，但如果可以設定按鍵控制反光鏡預鎖就更好了。 可以用 RC1遙控器﹣而且可以用RC-1啓動錄影，自拍方便多了。從EOS 50E到300D一直用得很高興的RC1，到了5D竟然不能用，我一直覺得很不爽：80N3快門線不但比RC1貴...", "content": "操作和大小都和5D 沒有太大的不同，除了 Menu多了分類，不像在5D中沒有分類，也多了short cut的功能(My menu)，可以自訂常用的功能。方便的好功能，但如果可以設定按鍵控制反光鏡預鎖就更好了。 可以用 RC1遙控器﹣而且可以用RC-1啓動錄影，自拍方便多了。從EOS 50E到300D一直用得很高興的RC1，到了5D竟然不能用，我一直覺得很不爽：80N3快門線不但比RC1貴，體積也比較大，自拍還得要10秒衝刺。 時間設定竟然可以設定「秒」，對回家後用gps track做geotag有一些幫助，可以準確到秒左右。 LCD大而且顏色比5D漂亮。 換了新的電池，LP-E6內建序號，相機會記錄每顆電池的資訊；不過原廠的很貴﹣快3000而且還缺貨！副廠的目前還沒加上序號及晶片，相機無法顯示電量，也不能用原廠充電器充電，使用起來比較不方便。應該等一陣子就會有完全相容的電池出現了。（在eBay上己經有了，不過價格也是莫名其妙地高﹣和原廠一樣！？） 一樣的使用習慣下，使用小小白（70-200mmF4）IS覺得準焦率有提高的感覺。 光線好時，顏色似乎比較鮮艷。 反差大時，暗部和亮部的對比卻好像沒那麼大﹣可能是Auto Lighting Optimizer的關係（default是starndard)，還需要研究。 多了一些Custom Function，還在摸索中。其他的感想： Live View/Movie的設定邏輯有點複雜。另外，如果習慣相機背在前面，設定SET鈕為拍攝Movie不是好的選擇，很容易不小心碰到。 1920×1080錄影很炫。不過，錄完後我才發現我的MBP螢幕才1440×900，想到兩千萬畫素的5616×3744，突然覺得很空虛。 畫素變高，CF卡容量需求也變大，硬碟容量需求也變大﹣所以升級成本跟著提高。" }, { "title": "5D2開光照", "url": "/posts/5d2e9968be58589e785a7/", "categories": "Uncategorized", "tags": "", "date": "2009-03-22 12:55:10 +0000", "snippet": "古時候的劍打好後要試劍，新的相機也應該要開個光。今天帶著新買的5D2去拍幾張照片，做為開光。只是假日到處人都多，天氣又熱，隨便拍個幾張就回來了開光照用的是轉轉鏡zeiss 75/1.5，不過回家才發現ISO是1600，所以Dynamic Range好像有點不夠。", "content": "古時候的劍打好後要試劍，新的相機也應該要開個光。今天帶著新買的5D2去拍幾張照片，做為開光。只是假日到處人都多，天氣又熱，隨便拍個幾張就回來了開光照用的是轉轉鏡zeiss 75/1.5，不過回家才發現ISO是1600，所以Dynamic Range好像有點不夠。" }, { "title": "又到櫻花的季節", "url": "/posts/e58f88e588b0e6abbbe88ab1e79a84e5ada3e7af80/", "categories": "Uncategorized", "tags": "", "date": "2009-03-16 08:01:31 +0000", "snippet": "聽說今年日本的櫻花會提早，查了一下，發現東京五日機加酒竟然只要1萬多，不去實在可惜。想起前年去關西賞櫻和去年東北紅葉，稍微整理了一些出來；順便更新「名宿之旅」系列，先上酸湯，有空再寫妙乃湯和佐勘。", "content": "聽說今年日本的櫻花會提早，查了一下，發現東京五日機加酒竟然只要1萬多，不去實在可惜。想起前年去關西賞櫻和去年東北紅葉，稍微整理了一些出來；順便更新「名宿之旅」系列，先上酸湯，有空再寫妙乃湯和佐勘。" }, { "title": "青森﹣「千人混浴」酸ヶ湯温泉", "url": "/posts/e99d92e6a3aeefb9a3e3808ce58d83e4babae6b7b7e6b5b4e3808de985b8e383b6e6b9afe6b8a9e6b389/", "categories": "名宿之旅", "tags": "", "date": "2009-03-15 12:27:16 +0000", "snippet": "相傳開湯三百多年的酸ヶ湯温泉是東北很有名的秘湯﹣它位在徧僻的八甲山腳，一天只有幾班的BUS可以到，卻是東北數一數二有名的溫泉。酸ヶ湯最為人所知、最大的特色就是有一個「千人混浴」的湯屋，「千人混浴」意思是：第一，湯屋很大；號稱可以容納一千個人、第二，男女混浴。即然大老遠來到東北，不來見識一下，未免可惜。酸ヶ湯的訂房不難，上樂天或直接上酸ヶ湯訂即可，一泊二食約１萬多日幣算是很實惠。交通是最大的問...", "content": "相傳開湯三百多年的酸ヶ湯温泉是東北很有名的秘湯﹣它位在徧僻的八甲山腳，一天只有幾班的BUS可以到，卻是東北數一數二有名的溫泉。酸ヶ湯最為人所知、最大的特色就是有一個「千人混浴」的湯屋，「千人混浴」意思是：第一，湯屋很大；號稱可以容納一千個人、第二，男女混浴。即然大老遠來到東北，不來見識一下，未免可惜。酸ヶ湯的訂房不難，上樂天或直接上酸ヶ湯訂即可，一泊二食約１萬多日幣算是很實惠。交通是最大的問題，搭JR BUS從青森前往要花一個多小時，從十和田湖則要一個半到兩個小時，而且班次不多（否則何以言「秘」？）。時刻表可以參考下面這個網址：http://www.jrbustohoku.co.jp/sightseeing_img/aomori-towadako.html我們的行程是配合奧入瀨十和田湖遊覧的行程：第一天從八戸到入住的門戶燒山入住奧入瀨溪流溫泉飯店，隔天早上遊奧入瀨溪，中午左右到達十和田湖，吃完午飯後坐船遊湖，然後搭BUS到酸ヶ湯，隔天遊覧八甲田山。（請注意因為巴士的關係，這個行程不適合冬天。）由於我們到的時間算早（１０／９），奧入瀨溪和十和田湖的紅葉很少，但在前往酸ヶ湯温泉的一路上卻開始看到大片的紅葉，因應該是高度的關係，比較高的地方樹葉都己經變紅了。坐了快兩個小時，才可以到達這隱秘在八甲山下的酸ヶ湯溫泉；BUS Stop就在飯店門口。門口的告示告訴我們混浴告訴我們混浴的禮儀，雖然不懂日文，看圖也大概了解一二；酸ヶ湯温泉是個有歴史的溫泉飯店，它的建築物也很有歴史﹣它是木造的。木造的樓梯、木造的地板：常見的日式房間的玄關，但這是貨真價實的木造和室：房間擺設非常古樸：著名湯室門口也有混浴禮儀需知，所以對混浴有其他不良思想的人，應該看到這裡就該回頭了。我心存正念，雖然會有點害羞，還是將生平第一次的混浴獻給這東北第一名湯。門口也公告著不想讓心存不良的人有機會的女性朋友可以利用女性Only的時段。湯屋裹當然不能拍照，有興趣的google一下或者連到酸ヶ湯的網站就有照片。號稱可以容納１千人的湯屋很大，不過卻也沒有網路或書上的照片中那麼大，酸ヶ湯網站的照片感覺上算是比較接近的。最特別的是它也是木造的，木造的屋頂看起來累積在溫泉長年的蒸薰下，很有歲月的感覺的。男女混浴乍聽之下好像很開放，但是，在昏暗的燈光、朦朧的煙霧、白濁的泉水、遮掩的毛巾之下，比起西方的天體營，似乎也算不了什麼。餐食的部分，雖然沒什麼讓人太驚艷的部分，倒也豐盛美味；晚餐送到房間吃，早餐則是在餐廳吃。這家特別的溫泉旅館，若有機會，我還會想再去。不過，有意造訪的人最好先有以下的認知： 它是很古老的木造房子，房間裹沒有厠所、浴室；洗澡刷牙要到小湯屋去。必需使用房外的公共厠所。 木造的房子，隔音不好；除了早上門廊外走路的聲音，半夜大雨打在窗戶的聲音也大得驚人。不過，半夜被雨和雷聲驚醒是一個很特別的經驗。參考連結：樂天：http://travel.rakuten.co.jp/HOTEL/41009/41009.html酸ヶ湯：http://www.sukayu.jp/" }, { "title": "箱根﹣強羅花壇", "url": "/posts/e7aeb1e6a0b9efb9a3e5bcb7e7be85e88ab1e5a387/", "categories": "名宿之旅", "tags": "", "date": "2009-03-15 08:11:13 +0000", "snippet": "自從買了一本”日本夢幻名宿”後，就一直想要去住住看所謂的名宿； 強羅花壇正是名宿的第一零一號 。原本是想住箱根的另一家”箱根吟遊”，但果真如書上所云，極其難訂；相對地， 強羅花壇就好訂多了，雖然一個人要50,000日圓（是的，一個人五萬日圓”起”，不含稅），總是想試試看到底貴在那底，就狠下心來訂了 。訂的過程很簡單，本來在網站上輸入，兩天沒回應，乾脆寫E-MAIL過去 。果很快就收到回應，只...", "content": "自從買了一本”日本夢幻名宿”後，就一直想要去住住看所謂的名宿； 強羅花壇正是名宿的第一零一號 。原本是想住箱根的另一家”箱根吟遊”，但果真如書上所云，極其難訂；相對地， 強羅花壇就好訂多了，雖然一個人要50,000日圓（是的，一個人五萬日圓”起”，不含稅），總是想試試看到底貴在那底，就狠下心來訂了 。訂的過程很簡單，本來在網站上輸入，兩天沒回應，乾脆寫E-MAIL過去 。果很快就收到回應，只要給信用卡資料就行了，信裏還說，網站上看起來是自動的，其實不是所以 。所以說，如果你想訂，直接用E-MAIL就行了 。從網路上看到，E-MAIL裏也提到，到了車站後可以打電話要飯店來接－雖然車站到飯店只有五，六百公尺，所以到了湯河原，我就打了電話，飯店的人表示，到了強羅車站再打就可以了 。結果，電車臨時不開，只好改坐巴士，很不巧地，強羅花壇就在巴士的下車地點，實在是無法厚著臉皮打電話叫車到門口．．．只好把賓士接送這個服務留到離開的時候 。Check-in沒什麼問題，因為代理女將的英文溜得很－雖然口音重了點 。Lobby並不豪華，也不是很大，但坐在這位置等，感覺還不錯 。我住的是最便宜的房間（詳細的介紹可以參考強羅花壇的網站），剛好是旁邊的房間，格局和其他房間有點不太一樣（～咦，我為什麼知道，等一下再說 ） 。房間不大，但有個小陽台，還有個兩坪大小獨立的小空間，可以看到陽台的造景和外面的樹 。這陽台看起來好像可以走到別的房間，不過，住在這裏的客人應該不會做這種事吧 。（？）比較貴的房間有露天湯池，最便宜的（…十萬圓…）只有這種浴缸，不過，泡湯當然要泡很大的露天池，房間裏的設備不重要（我是這樣安慰自己的） 。Lobby旁就是這最著名的走廊 。長廊的盡頭有個平台 。長廊的左邊有個很漂亮的六角亭 。六角亭內有些書報可以看 。一進來就會有人問你要不要喝點什麼，For Free－但是不是二十四小時，所以晚上泡完湯沒得喝 。六角亭旁邊有另一個喝茶的地方 。日本的溫泉飯店通常是一泊二食的，所以吃也是溫泉飯店一個很重要的指標 。我對拍食物很不在行，加減看一下；以下是晚餐的部分，是照順序來的：東西還算好吃，算中規中矩，少了點特別的 。餐點有專人服務，一般是在房間裏用，但”剛好”隔壁房間沒人住，所以我們是在隔壁房間用餐，可以看到這個房間陽台的地方不一樣 。吃完晚餐當然是休息然後去泡溫泉，泡溫泉的部分不方便也不能照相，請自由想像 。一夜無話 。（我一直很想用這句話）早餐一樣在隔壁用，上來的水（湯？）仔細看上面是有金泊的 。早餐不像晚餐，是一次全上：晚上沒看清楚這個房間，再看一次：離去的時候，真的是用賓士載到車站，不過那個距離實在是近得讓我有點臉紅就是了 。最重要的重點來了；之前看到書上對這家飯店的評語是”Overpriced”，我真的很同意；並不是說飯店有什麼不好，”高檔”的氣氛也不缺乏，只是一個人５０，０００圓（不含稅）真的太貴了 。若要說有什麼特別的，大概就是那個長廊和六角亭 。若認真數落，代理女將的招呼也少了那麼一點親切（雖然我也不會想跟她哈啦） 。食物的部分，並沒有感到什麼特別的，很豐盛，但沒有驚喜 。我覺得如果價格是在二萬日圓左右，應該還可以 。會有這樣的感覺，也有可能是因為剛好，前一個晚上也住了另一個伊豆的”名宿”－花吹雪；強羅花壇和”花吹雪”相比，如果不是”花吹雪”太超值，就是這家太貴了 。關於花吹雪的介紹，請看下一篇…強羅花壇的網站：http://www.gorakadan.com/" }, { "title": "湯布院﹣玉の湯", "url": "/posts/e6b9afe5b883e999a2efb9a3e78e89e381aee6b9af/", "categories": "名宿之旅", "tags": "", "date": "2009-03-15 07:41:21 +0000", "snippet": "九州的湯布院是日本OL票選最佳泡湯渡假的地方，而湯布院最有名的三家溫泉飯店則是合稱為”御三家”的無量塔、龜の井及玉の湯。這三家裏以無量塔最貴，一個人接近五萬日圓的起價和箱根的強羅花壇幾無差別。龜の井及玉の湯價位相當，但只少了一萬多日圓其實也不便宜。無量塔除了比較貴外，位置也較偏遠，因為是第一次造訪湯布院，就先不考慮了，玉の湯又比龜の井離湯布院車站近了一點點，於是玉の湯就成了我第一次到湯布院的...", "content": "九州的湯布院是日本OL票選最佳泡湯渡假的地方，而湯布院最有名的三家溫泉飯店則是合稱為”御三家”的無量塔、龜の井及玉の湯。這三家裏以無量塔最貴，一個人接近五萬日圓的起價和箱根的強羅花壇幾無差別。龜の井及玉の湯價位相當，但只少了一萬多日圓其實也不便宜。無量塔除了比較貴外，位置也較偏遠，因為是第一次造訪湯布院，就先不考慮了，玉の湯又比龜の井離湯布院車站近了一點點，於是玉の湯就成了我第一次到湯布院的溫泉飯店。下午一點check-in，中午十二點check-out是玉の湯為人樂道的一個特點，為了不辜負主人的美意，我們也就早早來到這裏。看到入口的這條小徑就讓人充滿了期待小徑的終點其實是玉の湯的賣店，右邊才是check-in的地方門口有兩隻木馬增添情趣Check-in的時候請你坐著休息喝杯茶是基本的待客之道玉の湯是由數間”離”－也就是分開的屋子組成的，每個房間以走道連接，並有自己的小院子，我們的房間名字是ひわ，據說是鳥的名字房間是和洋式；和式：洋式：房間裏有個小湯屋：整個環境是讓人覺得很輕鬆舒服的一片綠色；溼溼的走道不是因為下雨，而是旅館的人澆的。九州的人似乎是對自己的飲食文化有種堅持，所以到處都是鄉土料理，玉の湯的晚餐也是標榜鄉土料理，晚餐三種選擇：雞肉鍋，烤牛肉及鱉鍋。我們點了雞肉鍋及烤牛肉，另外湯的選擇中有鱉肉湯，所以都有吃到。因為不擅長拍食物加上覺得吃東西專心吃比較重要，食物的照片就從缺了。做為日本OL的最愛，湯布院這個小鎮是有她可愛的地方－熱鬧而安靜，繁華而淳樸。從車站到金鱗湖一公里多的路上有很多賣店同時也有很多美術館；觀光客雖多，但一進入旅館卻是只剩下輕鬆寧靜的氣氛；街道路邊到處是可愛的小花，還有小橋流水，非常適合散步。一離開主要道路就可以看到耕作中的稻田，可以知道這個地方沒有過渡開發或太商業化的問題。雖無緣目賭，但想像夜裏出現的螢火蟲和繁星點點的夜空，一定會相信日本人說的”心靈の療瘉”的效果。" }, { "title": "22ON22- To 5d2 or not to 5d2", "url": "/posts/22on22-to-5d2-or-not-to-5d2/", "categories": "Uncategorized", "tags": "", "date": "2009-03-13 02:09:55 +0000", "snippet": "最近考慮上5D2，上網研究了一下，又猶豫了起來。5D2的十字橫紋:http://www.fredmiranda.com/forum/topic/748830低ISO雜訊：http://www.fredmiranda.com/forum/topic/735873/0Red Channel雜訊:http://forums.dpreview.com/forums/readflat.asp?foru...", "content": "最近考慮上5D2，上網研究了一下，又猶豫了起來。5D2的十字橫紋:http://www.fredmiranda.com/forum/topic/748830低ISO雜訊：http://www.fredmiranda.com/forum/topic/735873/0Red Channel雜訊:http://forums.dpreview.com/forums/readflat.asp?forum=1032&amp;thread=31093852暗部雜訊(和D3x比較):http://diglloyd.com/diglloyd/free/PushingTheBlacks/images/channels.html中文的部分也有人提，不過這個討論看起來很長，但看完原PO，其他的就不用看了，很遺憾地，01開始變成無法討論的地方了http://www.mobile01.com/topicdetail.php?f=244&amp;t=895210&amp;p=1還有這篇:http://mskeith.pixnet.net/blog/post/23721753這篇有讓人轉移焦點的正妹，所以我直接列出重點:“實際拍攝狀況下，低ISO的暗部出現了令人不解的紅綠雜點，即便在ISO100~400也同樣發生”這是高pixel的代價嗎?但也有人提到1DSIII沒那麼糟啊…" }, { "title": "搬家", "url": "/posts/e690ace5aeb6e5a4a7e59089/", "categories": "網站相關", "tags": "", "date": "2008-10-21 08:35:30 +0000", "snippet": "房子賣了，所以自己架的站沒地方放了。雖然沒做什麼生意，也不是很常更新Blog，可能也沒什麼人在看。但一來想要用自己寫的AP來管理Flickr上的照片，二來也己經花錢買了vito.tw這個domain name，不想浪費掉，就乾脆再浪費６８大洋買了兩年LunarPages的virtual host。Blog其實是附帶的，既然LunarPages有WordPress可以裝，就用吧。只是裝了以後才...", "content": "房子賣了，所以自己架的站沒地方放了。雖然沒做什麼生意，也不是很常更新Blog，可能也沒什麼人在看。但一來想要用自己寫的AP來管理Flickr上的照片，二來也己經花錢買了vito.tw這個domain name，不想浪費掉，就乾脆再浪費６８大洋買了兩年LunarPages的virtual host。Blog其實是附帶的，既然LunarPages有WordPress可以裝，就用吧。只是裝了以後才發現要用中文還是要花一些時間小改。之前寫的再慢慢copy過來。最主要的是http://photo.vito.tw/som/index.html 有地方放了。至於前一個版本和show track的部分晚些時候再復原吧。" }, { "title": "伊豆－花吹雪", "url": "/posts/e4bc8ae8b186efbc8de88ab1e590b9e99baa/", "categories": "名宿之旅", "tags": "", "date": "0200-10-21 12:53:21 +0000", "snippet": "有機會住到這家名宿，也算是個機緣。參加天喜的伊豆團，第二天中午在這裏用餐，當時就覺得是個很漂亮的地方，加上導遊對這家旅館的推薦，以及”天皇住過”的加持，讓我很想試試看。很幸運地，在導遊的安排和協助之下，有了一親芳澤的機會。天喜的導遊幫了很多忙，順便在此感謝一下；原本參加的是五天四夜的行程，最後一天會從伊豆回到東京，但我延了兩天，會再到箱根（強羅花壇），再從東京離開；在導遊的幫忙之下，將東京的...", "content": "有機會住到這家名宿，也算是個機緣。參加天喜的伊豆團，第二天中午在這裏用餐，當時就覺得是個很漂亮的地方，加上導遊對這家旅館的推薦，以及”天皇住過”的加持，讓我很想試試看。很幸運地，在導遊的安排和協助之下，有了一親芳澤的機會。天喜的導遊幫了很多忙，順便在此感謝一下；原本參加的是五天四夜的行程，最後一天會從伊豆回到東京，但我延了兩天，會再到箱根（強羅花壇），再從東京離開；在導遊的幫忙之下，將東京的那一晚改到最後一天。於是，就可以不用回東京，也多了一個晚上。也在導遊的協助之下，訂了花吹雪，更因為報了他的名字而得到一些折扣。花吹雪是一家很特別的溫泉飯店；跟大型的溫泉飯店如加賀屋相比，是完全兩種類型；詳細的資料可以參考網站的說明，我只介紹一下特別的地方： 沒有大型的露天浴場，而是七間獨立的小湯屋，而且每間湯屋都可以上鎖，獨自享用，非常適合如膠似漆，片刻分離不得的新婚夫妻。湯屋內的溫泉全都是原汁原味的溫泉，所以溫度有點高，泡之前還是要加冷水，如果你發現水溫不高，那八成是不久前有人用過。房間裏是沒有浴室的，只有洗手台和厠所。 沒有大型的建築物，總共十七間房間，分散成幾個小建築物；感覺很像在住小木屋。建築物之間沒有走道，走在其間感覺上像是－根本就是－走在森林中。 從提供的紙傘及一些小地方都可以感受到主人的用心；連”顏色”都是和大師合作，有學問的－雖然我是不懂啦。房間有五種，晚餐也有三種等級，餐和房間的價格是分開算的。我選的房間是”日本の色棟“，算是兩人房中最貴的，15,750日圓一個人，早餐有三種，價格都是2100，晚餐分別是6300、8925、及12,600日圓。因為不想吃太多，所以選了最便宜的晚餐，所以總共是24,150日圓一個人。先看看午餐的部分，因為原本我們選的山櫻和午餐有很多重複的，店長”向谷太陽”先生（是的，跟網頁上的市川信吾先生不一樣，大概是第二代）知道我們吃過午餐後，有把重複的換過。午餐的菜單：這個牛奶豆腐味道其實比較像奶酪。花吹雪在伊豆高原站附近，但是要從後面繞過去：繞過鐵路沒多久，會看到戀人小路，穿過戀人小路就到了到的那天下著雨，所以前兩張其實不是當天拍的Check-in的地方是在俱樂部的房子裏，一進來就先送上茶及精緻的茶點向谷太陽先生很親切，英語十分好，是沒有口音（或我聽不出來）的那種好 。做了很仔細的介紹，也問了我們的用餐時間後，就帶我們到房間 。我們的房間是”赤”－這顏色是有專家認可的 。房間的佈置高雅中帶有休閒的氣氛 。桌上擺著很特別的小甜點。還有一點要特別提一下：花吹雪的床舖和綿被是我住過的飯店中最舒服的，不像大部分的飯店有漿過睡起來硬硬的，花吹雪的綿被很軟，觸感很舒服 。剛好下點小雨，撐著紙傘去泡湯，頗有情調 。湯屋的小徑前有燈，湯屋門鎖上燈就會亮 。每個湯屋都不一樣，很可惜沒那皮膚可以泡完所有的湯。一直放的是純正的溫泉水，但溫度太高，還是得放冷水才能洗 。晚餐的部分，是己經調整過的”山櫻”；每一道都感覺得到用心，向谷先生也對每道菜做介紹～我英文沒好到可以知道那些食物的名字，不過向谷先生很聰明地用”漢字”讓我知道那是什麼 。雖然已經覺得很好了，也夠飽了，但6,300的等級能夠吃到這些，讓我很好奇兩倍價格的”花狩”會是怎麼樣？早餐前先來一些照片 。這一間沒有泡過，只是剛好沒人，進來拍張照 。早餐很簡單，但味道還不錯 。前一天預約的話，早上十點旅館會有人帶客人到海岸散步 。但因為那天早上下了點小雨，雖然有好幾個人預約，最後只剩下我一個人 。但市川先生還是帶著我走了一趟－我是回來後上網才知道他是前代亭主市川先生 。只可惜天氣不好，沒照到好照片 。結語：非常值得一住的旅館，僅管是一個人2萬多日圓，卻很值得 。從佈置到餐食，到處都可以感覺得到主人的用心，以及他想要表現的日本文化 。HIGHLY RECOMMENDED!花吹雪網站： http://www.hanafubuki.co.jp/花吹雪地點： 地圖" } ]
